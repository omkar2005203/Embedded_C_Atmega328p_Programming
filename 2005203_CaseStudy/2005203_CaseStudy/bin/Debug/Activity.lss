
bin\Debug\Activity.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000008  00800100  000017ea  0000189e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000017ea  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000005  00800108  00800108  000018a6  2**0
                  ALLOC
  3 .fuse         00000003  00820000  00820000  000018a6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .debug_aranges 00000200  00000000  00000000  000018a9  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 000002fe  00000000  00000000  00001aa9  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002652  00000000  00000000  00001da7  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001416  00000000  00000000  000043f9  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001791  00000000  00000000  0000580f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002b0  00000000  00000000  00006fa0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000047c  00000000  00000000  00007250  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000088e  00000000  00000000  000076cc  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  00007f5a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 82 04 	jmp	0x904	; 0x904 <__vector_1>
       8:	0c 94 9c 04 	jmp	0x938	; 0x938 <__vector_2>
       c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      40:	0c 94 b6 04 	jmp	0x96c	; 0x96c <__vector_16>
      44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
      74:	11 e0       	ldi	r17, 0x01	; 1
      76:	a8 e0       	ldi	r26, 0x08	; 8
      78:	b1 e0       	ldi	r27, 0x01	; 1
      7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
      7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
      7e:	ad 30       	cpi	r26, 0x0D	; 13
      80:	b1 07       	cpc	r27, r17
      82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>

00000084 <__do_copy_data>:
      84:	11 e0       	ldi	r17, 0x01	; 1
      86:	a0 e0       	ldi	r26, 0x00	; 0
      88:	b1 e0       	ldi	r27, 0x01	; 1
      8a:	ea ee       	ldi	r30, 0xEA	; 234
      8c:	f7 e1       	ldi	r31, 0x17	; 23
      8e:	02 c0       	rjmp	.+4      	; 0x94 <.do_copy_data_start>

00000090 <.do_copy_data_loop>:
      90:	05 90       	lpm	r0, Z+
      92:	0d 92       	st	X+, r0

00000094 <.do_copy_data_start>:
      94:	a8 30       	cpi	r26, 0x08	; 8
      96:	b1 07       	cpc	r27, r17
      98:	d9 f7       	brne	.-10     	; 0x90 <.do_copy_data_loop>
      9a:	0e 94 25 04 	call	0x84a	; 0x84a <main>
      9e:	0c 94 f3 0b 	jmp	0x17e6	; 0x17e6 <_exit>

000000a2 <__bad_interrupt>:
      a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <adc_init>:
/******************************************************************************
* Name:
* Description:
******************************************************************************/
void adc_init()
{
      a6:	df 93       	push	r29
      a8:	cf 93       	push	r28
      aa:	cd b7       	in	r28, 0x3d	; 61
      ac:	de b7       	in	r29, 0x3e	; 62
    ADMUX=0x00;
      ae:	ec e7       	ldi	r30, 0x7C	; 124
      b0:	f0 e0       	ldi	r31, 0x00	; 0
      b2:	10 82       	st	Z, r1
    ADMUX |= (1 << REFS0);
      b4:	ac e7       	ldi	r26, 0x7C	; 124
      b6:	b0 e0       	ldi	r27, 0x00	; 0
      b8:	ec e7       	ldi	r30, 0x7C	; 124
      ba:	f0 e0       	ldi	r31, 0x00	; 0
      bc:	80 81       	ld	r24, Z
      be:	80 64       	ori	r24, 0x40	; 64
      c0:	8c 93       	st	X, r24
    ADCSRA|=(1<<ADEN);
      c2:	aa e7       	ldi	r26, 0x7A	; 122
      c4:	b0 e0       	ldi	r27, 0x00	; 0
      c6:	ea e7       	ldi	r30, 0x7A	; 122
      c8:	f0 e0       	ldi	r31, 0x00	; 0
      ca:	80 81       	ld	r24, Z
      cc:	80 68       	ori	r24, 0x80	; 128
      ce:	8c 93       	st	X, r24
}
      d0:	cf 91       	pop	r28
      d2:	df 91       	pop	r29
      d4:	08 95       	ret

000000d6 <adc_read>:
uint16_t adc_read()
{
      d6:	df 93       	push	r29
      d8:	cf 93       	push	r28
      da:	cd b7       	in	r28, 0x3d	; 61
      dc:	de b7       	in	r29, 0x3e	; 62
      de:	6c 97       	sbiw	r28, 0x1c	; 28
      e0:	0f b6       	in	r0, 0x3f	; 63
      e2:	f8 94       	cli
      e4:	de bf       	out	0x3e, r29	; 62
      e6:	0f be       	out	0x3f, r0	; 63
      e8:	cd bf       	out	0x3d, r28	; 61
    int a,al;
    ADCSRA |= (1 << ADSC);
      ea:	aa e7       	ldi	r26, 0x7A	; 122
      ec:	b0 e0       	ldi	r27, 0x00	; 0
      ee:	ea e7       	ldi	r30, 0x7A	; 122
      f0:	f0 e0       	ldi	r31, 0x00	; 0
      f2:	80 81       	ld	r24, Z
      f4:	80 64       	ori	r24, 0x40	; 64
      f6:	8c 93       	st	X, r24
    while((ADCSRA&(1<<ADSC))==0);
      f8:	ea e7       	ldi	r30, 0x7A	; 122
      fa:	f0 e0       	ldi	r31, 0x00	; 0
      fc:	80 81       	ld	r24, Z
      fe:	88 2f       	mov	r24, r24
     100:	90 e0       	ldi	r25, 0x00	; 0
     102:	80 74       	andi	r24, 0x40	; 64
     104:	90 70       	andi	r25, 0x00	; 0
     106:	00 97       	sbiw	r24, 0x00	; 0
     108:	b9 f3       	breq	.-18     	; 0xf8 <adc_read+0x22>
     10a:	80 e0       	ldi	r24, 0x00	; 0
     10c:	90 e0       	ldi	r25, 0x00	; 0
     10e:	a8 ec       	ldi	r26, 0xC8	; 200
     110:	b2 e4       	ldi	r27, 0x42	; 66
     112:	8d 8b       	std	Y+21, r24	; 0x15
     114:	9e 8b       	std	Y+22, r25	; 0x16
     116:	af 8b       	std	Y+23, r26	; 0x17
     118:	b8 8f       	std	Y+24, r27	; 0x18
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
     11a:	6d 89       	ldd	r22, Y+21	; 0x15
     11c:	7e 89       	ldd	r23, Y+22	; 0x16
     11e:	8f 89       	ldd	r24, Y+23	; 0x17
     120:	98 8d       	ldd	r25, Y+24	; 0x18
     122:	2b ea       	ldi	r18, 0xAB	; 171
     124:	3a ea       	ldi	r19, 0xAA	; 170
     126:	4a ea       	ldi	r20, 0xAA	; 170
     128:	50 e4       	ldi	r21, 0x40	; 64
     12a:	0e 94 8c 07 	call	0xf18	; 0xf18 <__mulsf3>
     12e:	dc 01       	movw	r26, r24
     130:	cb 01       	movw	r24, r22
     132:	89 8b       	std	Y+17, r24	; 0x11
     134:	9a 8b       	std	Y+18, r25	; 0x12
     136:	ab 8b       	std	Y+19, r26	; 0x13
     138:	bc 8b       	std	Y+20, r27	; 0x14
	if (__tmp < 1.0)
     13a:	69 89       	ldd	r22, Y+17	; 0x11
     13c:	7a 89       	ldd	r23, Y+18	; 0x12
     13e:	8b 89       	ldd	r24, Y+19	; 0x13
     140:	9c 89       	ldd	r25, Y+20	; 0x14
     142:	20 e0       	ldi	r18, 0x00	; 0
     144:	30 e0       	ldi	r19, 0x00	; 0
     146:	40 e8       	ldi	r20, 0x80	; 128
     148:	5f e3       	ldi	r21, 0x3F	; 63
     14a:	0e 94 92 09 	call	0x1324	; 0x1324 <__ltsf2>
     14e:	88 23       	and	r24, r24
     150:	1c f4       	brge	.+6      	; 0x158 <adc_read+0x82>
		__ticks = 1;
     152:	81 e0       	ldi	r24, 0x01	; 1
     154:	88 8b       	std	Y+16, r24	; 0x10
     156:	91 c0       	rjmp	.+290    	; 0x27a <adc_read+0x1a4>
	else if (__tmp > 255)
     158:	69 89       	ldd	r22, Y+17	; 0x11
     15a:	7a 89       	ldd	r23, Y+18	; 0x12
     15c:	8b 89       	ldd	r24, Y+19	; 0x13
     15e:	9c 89       	ldd	r25, Y+20	; 0x14
     160:	20 e0       	ldi	r18, 0x00	; 0
     162:	30 e0       	ldi	r19, 0x00	; 0
     164:	4f e7       	ldi	r20, 0x7F	; 127
     166:	53 e4       	ldi	r21, 0x43	; 67
     168:	0e 94 32 09 	call	0x1264	; 0x1264 <__gtsf2>
     16c:	18 16       	cp	r1, r24
     16e:	0c f0       	brlt	.+2      	; 0x172 <adc_read+0x9c>
     170:	7b c0       	rjmp	.+246    	; 0x268 <adc_read+0x192>
	{
		_delay_ms(__us / 1000.0);
     172:	6d 89       	ldd	r22, Y+21	; 0x15
     174:	7e 89       	ldd	r23, Y+22	; 0x16
     176:	8f 89       	ldd	r24, Y+23	; 0x17
     178:	98 8d       	ldd	r25, Y+24	; 0x18
     17a:	20 e0       	ldi	r18, 0x00	; 0
     17c:	30 e0       	ldi	r19, 0x00	; 0
     17e:	4a e7       	ldi	r20, 0x7A	; 122
     180:	54 e4       	ldi	r21, 0x44	; 68
     182:	0e 94 86 08 	call	0x110c	; 0x110c <__divsf3>
     186:	dc 01       	movw	r26, r24
     188:	cb 01       	movw	r24, r22
     18a:	8c 87       	std	Y+12, r24	; 0x0c
     18c:	9d 87       	std	Y+13, r25	; 0x0d
     18e:	ae 87       	std	Y+14, r26	; 0x0e
     190:	bf 87       	std	Y+15, r27	; 0x0f
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     192:	6c 85       	ldd	r22, Y+12	; 0x0c
     194:	7d 85       	ldd	r23, Y+13	; 0x0d
     196:	8e 85       	ldd	r24, Y+14	; 0x0e
     198:	9f 85       	ldd	r25, Y+15	; 0x0f
     19a:	20 e0       	ldi	r18, 0x00	; 0
     19c:	30 e0       	ldi	r19, 0x00	; 0
     19e:	4a e7       	ldi	r20, 0x7A	; 122
     1a0:	55 e4       	ldi	r21, 0x45	; 69
     1a2:	0e 94 8c 07 	call	0xf18	; 0xf18 <__mulsf3>
     1a6:	dc 01       	movw	r26, r24
     1a8:	cb 01       	movw	r24, r22
     1aa:	88 87       	std	Y+8, r24	; 0x08
     1ac:	99 87       	std	Y+9, r25	; 0x09
     1ae:	aa 87       	std	Y+10, r26	; 0x0a
     1b0:	bb 87       	std	Y+11, r27	; 0x0b
	if (__tmp < 1.0)
     1b2:	68 85       	ldd	r22, Y+8	; 0x08
     1b4:	79 85       	ldd	r23, Y+9	; 0x09
     1b6:	8a 85       	ldd	r24, Y+10	; 0x0a
     1b8:	9b 85       	ldd	r25, Y+11	; 0x0b
     1ba:	20 e0       	ldi	r18, 0x00	; 0
     1bc:	30 e0       	ldi	r19, 0x00	; 0
     1be:	40 e8       	ldi	r20, 0x80	; 128
     1c0:	5f e3       	ldi	r21, 0x3F	; 63
     1c2:	0e 94 92 09 	call	0x1324	; 0x1324 <__ltsf2>
     1c6:	88 23       	and	r24, r24
     1c8:	2c f4       	brge	.+10     	; 0x1d4 <adc_read+0xfe>
		__ticks = 1;
     1ca:	81 e0       	ldi	r24, 0x01	; 1
     1cc:	90 e0       	ldi	r25, 0x00	; 0
     1ce:	9f 83       	std	Y+7, r25	; 0x07
     1d0:	8e 83       	std	Y+6, r24	; 0x06
     1d2:	3f c0       	rjmp	.+126    	; 0x252 <adc_read+0x17c>
	else if (__tmp > 65535)
     1d4:	68 85       	ldd	r22, Y+8	; 0x08
     1d6:	79 85       	ldd	r23, Y+9	; 0x09
     1d8:	8a 85       	ldd	r24, Y+10	; 0x0a
     1da:	9b 85       	ldd	r25, Y+11	; 0x0b
     1dc:	20 e0       	ldi	r18, 0x00	; 0
     1de:	3f ef       	ldi	r19, 0xFF	; 255
     1e0:	4f e7       	ldi	r20, 0x7F	; 127
     1e2:	57 e4       	ldi	r21, 0x47	; 71
     1e4:	0e 94 32 09 	call	0x1264	; 0x1264 <__gtsf2>
     1e8:	18 16       	cp	r1, r24
     1ea:	4c f5       	brge	.+82     	; 0x23e <adc_read+0x168>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     1ec:	6c 85       	ldd	r22, Y+12	; 0x0c
     1ee:	7d 85       	ldd	r23, Y+13	; 0x0d
     1f0:	8e 85       	ldd	r24, Y+14	; 0x0e
     1f2:	9f 85       	ldd	r25, Y+15	; 0x0f
     1f4:	20 e0       	ldi	r18, 0x00	; 0
     1f6:	30 e0       	ldi	r19, 0x00	; 0
     1f8:	40 e2       	ldi	r20, 0x20	; 32
     1fa:	51 e4       	ldi	r21, 0x41	; 65
     1fc:	0e 94 8c 07 	call	0xf18	; 0xf18 <__mulsf3>
     200:	dc 01       	movw	r26, r24
     202:	cb 01       	movw	r24, r22
     204:	bc 01       	movw	r22, r24
     206:	cd 01       	movw	r24, r26
     208:	0e 94 b6 05 	call	0xb6c	; 0xb6c <__fixunssfsi>
     20c:	dc 01       	movw	r26, r24
     20e:	cb 01       	movw	r24, r22
     210:	9f 83       	std	Y+7, r25	; 0x07
     212:	8e 83       	std	Y+6, r24	; 0x06
     214:	0f c0       	rjmp	.+30     	; 0x234 <adc_read+0x15e>
     216:	80 e9       	ldi	r24, 0x90	; 144
     218:	91 e0       	ldi	r25, 0x01	; 1
     21a:	9d 83       	std	Y+5, r25	; 0x05
     21c:	8c 83       	std	Y+4, r24	; 0x04
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     21e:	8c 81       	ldd	r24, Y+4	; 0x04
     220:	9d 81       	ldd	r25, Y+5	; 0x05
     222:	01 97       	sbiw	r24, 0x01	; 1
     224:	f1 f7       	brne	.-4      	; 0x222 <adc_read+0x14c>
     226:	9d 83       	std	Y+5, r25	; 0x05
     228:	8c 83       	std	Y+4, r24	; 0x04
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     22a:	8e 81       	ldd	r24, Y+6	; 0x06
     22c:	9f 81       	ldd	r25, Y+7	; 0x07
     22e:	01 97       	sbiw	r24, 0x01	; 1
     230:	9f 83       	std	Y+7, r25	; 0x07
     232:	8e 83       	std	Y+6, r24	; 0x06
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     234:	8e 81       	ldd	r24, Y+6	; 0x06
     236:	9f 81       	ldd	r25, Y+7	; 0x07
     238:	00 97       	sbiw	r24, 0x00	; 0
     23a:	69 f7       	brne	.-38     	; 0x216 <adc_read+0x140>
     23c:	24 c0       	rjmp	.+72     	; 0x286 <adc_read+0x1b0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     23e:	68 85       	ldd	r22, Y+8	; 0x08
     240:	79 85       	ldd	r23, Y+9	; 0x09
     242:	8a 85       	ldd	r24, Y+10	; 0x0a
     244:	9b 85       	ldd	r25, Y+11	; 0x0b
     246:	0e 94 b6 05 	call	0xb6c	; 0xb6c <__fixunssfsi>
     24a:	dc 01       	movw	r26, r24
     24c:	cb 01       	movw	r24, r22
     24e:	9f 83       	std	Y+7, r25	; 0x07
     250:	8e 83       	std	Y+6, r24	; 0x06
     252:	8e 81       	ldd	r24, Y+6	; 0x06
     254:	9f 81       	ldd	r25, Y+7	; 0x07
     256:	9b 83       	std	Y+3, r25	; 0x03
     258:	8a 83       	std	Y+2, r24	; 0x02
     25a:	8a 81       	ldd	r24, Y+2	; 0x02
     25c:	9b 81       	ldd	r25, Y+3	; 0x03
     25e:	01 97       	sbiw	r24, 0x01	; 1
     260:	f1 f7       	brne	.-4      	; 0x25e <adc_read+0x188>
     262:	9b 83       	std	Y+3, r25	; 0x03
     264:	8a 83       	std	Y+2, r24	; 0x02
     266:	0f c0       	rjmp	.+30     	; 0x286 <adc_read+0x1b0>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
     268:	69 89       	ldd	r22, Y+17	; 0x11
     26a:	7a 89       	ldd	r23, Y+18	; 0x12
     26c:	8b 89       	ldd	r24, Y+19	; 0x13
     26e:	9c 89       	ldd	r25, Y+20	; 0x14
     270:	0e 94 b6 05 	call	0xb6c	; 0xb6c <__fixunssfsi>
     274:	dc 01       	movw	r26, r24
     276:	cb 01       	movw	r24, r22
     278:	88 8b       	std	Y+16, r24	; 0x10
     27a:	88 89       	ldd	r24, Y+16	; 0x10
     27c:	89 83       	std	Y+1, r24	; 0x01
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     27e:	89 81       	ldd	r24, Y+1	; 0x01
     280:	8a 95       	dec	r24
     282:	f1 f7       	brne	.-4      	; 0x280 <adc_read+0x1aa>
     284:	89 83       	std	Y+1, r24	; 0x01
    _delay_us(100);
    al=(int)ADCL;
     286:	e8 e7       	ldi	r30, 0x78	; 120
     288:	f0 e0       	ldi	r31, 0x00	; 0
     28a:	80 81       	ld	r24, Z
     28c:	88 2f       	mov	r24, r24
     28e:	90 e0       	ldi	r25, 0x00	; 0
     290:	9a 8f       	std	Y+26, r25	; 0x1a
     292:	89 8f       	std	Y+25, r24	; 0x19
    a=(int)ADCH*256;
     294:	e9 e7       	ldi	r30, 0x79	; 121
     296:	f0 e0       	ldi	r31, 0x00	; 0
     298:	80 81       	ld	r24, Z
     29a:	88 2f       	mov	r24, r24
     29c:	90 e0       	ldi	r25, 0x00	; 0
     29e:	98 2f       	mov	r25, r24
     2a0:	88 27       	eor	r24, r24
     2a2:	9c 8f       	std	Y+28, r25	; 0x1c
     2a4:	8b 8f       	std	Y+27, r24	; 0x1b
    a=a+al;
     2a6:	2b 8d       	ldd	r18, Y+27	; 0x1b
     2a8:	3c 8d       	ldd	r19, Y+28	; 0x1c
     2aa:	89 8d       	ldd	r24, Y+25	; 0x19
     2ac:	9a 8d       	ldd	r25, Y+26	; 0x1a
     2ae:	82 0f       	add	r24, r18
     2b0:	93 1f       	adc	r25, r19
     2b2:	9c 8f       	std	Y+28, r25	; 0x1c
     2b4:	8b 8f       	std	Y+27, r24	; 0x1b
    return a;
     2b6:	8b 8d       	ldd	r24, Y+27	; 0x1b
     2b8:	9c 8d       	ldd	r25, Y+28	; 0x1c
}
     2ba:	6c 96       	adiw	r28, 0x1c	; 28
     2bc:	0f b6       	in	r0, 0x3f	; 63
     2be:	f8 94       	cli
     2c0:	de bf       	out	0x3e, r29	; 62
     2c2:	0f be       	out	0x3f, r0	; 63
     2c4:	cd bf       	out	0x3d, r28	; 61
     2c6:	cf 91       	pop	r28
     2c8:	df 91       	pop	r29
     2ca:	08 95       	ret

000002cc <GPIOConfig>:
#include"GPIO.h"

void GPIOConfig(uint8_t pin,uint8_t mode)
{
     2cc:	df 93       	push	r29
     2ce:	cf 93       	push	r28
     2d0:	00 d0       	rcall	.+0      	; 0x2d2 <GPIOConfig+0x6>
     2d2:	cd b7       	in	r28, 0x3d	; 61
     2d4:	de b7       	in	r29, 0x3e	; 62
     2d6:	89 83       	std	Y+1, r24	; 0x01
     2d8:	6a 83       	std	Y+2, r22	; 0x02
    if(mode==INPUT)
     2da:	8a 81       	ldd	r24, Y+2	; 0x02
     2dc:	88 23       	and	r24, r24
     2de:	09 f0       	breq	.+2      	; 0x2e2 <GPIOConfig+0x16>
     2e0:	b7 c0       	rjmp	.+366    	; 0x450 <GPIOConfig+0x184>
    {
        if(pin==PD7||pin==PD6||pin==PD5||pin==PD4||pin==PD3||pin==PD2||pin==PD1||pin==PD0)
     2e2:	89 81       	ldd	r24, Y+1	; 0x01
     2e4:	87 30       	cpi	r24, 0x07	; 7
     2e6:	a9 f0       	breq	.+42     	; 0x312 <GPIOConfig+0x46>
     2e8:	89 81       	ldd	r24, Y+1	; 0x01
     2ea:	86 30       	cpi	r24, 0x06	; 6
     2ec:	91 f0       	breq	.+36     	; 0x312 <GPIOConfig+0x46>
     2ee:	89 81       	ldd	r24, Y+1	; 0x01
     2f0:	85 30       	cpi	r24, 0x05	; 5
     2f2:	79 f0       	breq	.+30     	; 0x312 <GPIOConfig+0x46>
     2f4:	89 81       	ldd	r24, Y+1	; 0x01
     2f6:	84 30       	cpi	r24, 0x04	; 4
     2f8:	61 f0       	breq	.+24     	; 0x312 <GPIOConfig+0x46>
     2fa:	89 81       	ldd	r24, Y+1	; 0x01
     2fc:	83 30       	cpi	r24, 0x03	; 3
     2fe:	49 f0       	breq	.+18     	; 0x312 <GPIOConfig+0x46>
     300:	89 81       	ldd	r24, Y+1	; 0x01
     302:	82 30       	cpi	r24, 0x02	; 2
     304:	31 f0       	breq	.+12     	; 0x312 <GPIOConfig+0x46>
     306:	89 81       	ldd	r24, Y+1	; 0x01
     308:	81 30       	cpi	r24, 0x01	; 1
     30a:	19 f0       	breq	.+6      	; 0x312 <GPIOConfig+0x46>
     30c:	89 81       	ldd	r24, Y+1	; 0x01
     30e:	88 23       	and	r24, r24
     310:	31 f5       	brne	.+76     	; 0x35e <GPIOConfig+0x92>
        {
            CLR_BIT(DDRD,pin);
     312:	aa e2       	ldi	r26, 0x2A	; 42
     314:	b0 e0       	ldi	r27, 0x00	; 0
     316:	ea e2       	ldi	r30, 0x2A	; 42
     318:	f0 e0       	ldi	r31, 0x00	; 0
     31a:	80 81       	ld	r24, Z
     31c:	48 2f       	mov	r20, r24
     31e:	89 81       	ldd	r24, Y+1	; 0x01
     320:	28 2f       	mov	r18, r24
     322:	30 e0       	ldi	r19, 0x00	; 0
     324:	81 e0       	ldi	r24, 0x01	; 1
     326:	90 e0       	ldi	r25, 0x00	; 0
     328:	02 c0       	rjmp	.+4      	; 0x32e <GPIOConfig+0x62>
     32a:	88 0f       	add	r24, r24
     32c:	99 1f       	adc	r25, r25
     32e:	2a 95       	dec	r18
     330:	e2 f7       	brpl	.-8      	; 0x32a <GPIOConfig+0x5e>
     332:	80 95       	com	r24
     334:	84 23       	and	r24, r20
     336:	8c 93       	st	X, r24
            SET_BIT(PORTD,pin);
     338:	ab e2       	ldi	r26, 0x2B	; 43
     33a:	b0 e0       	ldi	r27, 0x00	; 0
     33c:	eb e2       	ldi	r30, 0x2B	; 43
     33e:	f0 e0       	ldi	r31, 0x00	; 0
     340:	80 81       	ld	r24, Z
     342:	48 2f       	mov	r20, r24
     344:	89 81       	ldd	r24, Y+1	; 0x01
     346:	28 2f       	mov	r18, r24
     348:	30 e0       	ldi	r19, 0x00	; 0
     34a:	81 e0       	ldi	r24, 0x01	; 1
     34c:	90 e0       	ldi	r25, 0x00	; 0
     34e:	02 2e       	mov	r0, r18
     350:	02 c0       	rjmp	.+4      	; 0x356 <GPIOConfig+0x8a>
     352:	88 0f       	add	r24, r24
     354:	99 1f       	adc	r25, r25
     356:	0a 94       	dec	r0
     358:	e2 f7       	brpl	.-8      	; 0x352 <GPIOConfig+0x86>
     35a:	84 2b       	or	r24, r20
     35c:	8c 93       	st	X, r24
        }
        if(pin==PB7||pin==PB6||pin==PB5||pin==PB4||pin==PB3||pin==PB2||pin==PB1||pin==PB0)
     35e:	89 81       	ldd	r24, Y+1	; 0x01
     360:	87 30       	cpi	r24, 0x07	; 7
     362:	a9 f0       	breq	.+42     	; 0x38e <GPIOConfig+0xc2>
     364:	89 81       	ldd	r24, Y+1	; 0x01
     366:	86 30       	cpi	r24, 0x06	; 6
     368:	91 f0       	breq	.+36     	; 0x38e <GPIOConfig+0xc2>
     36a:	89 81       	ldd	r24, Y+1	; 0x01
     36c:	85 30       	cpi	r24, 0x05	; 5
     36e:	79 f0       	breq	.+30     	; 0x38e <GPIOConfig+0xc2>
     370:	89 81       	ldd	r24, Y+1	; 0x01
     372:	84 30       	cpi	r24, 0x04	; 4
     374:	61 f0       	breq	.+24     	; 0x38e <GPIOConfig+0xc2>
     376:	89 81       	ldd	r24, Y+1	; 0x01
     378:	83 30       	cpi	r24, 0x03	; 3
     37a:	49 f0       	breq	.+18     	; 0x38e <GPIOConfig+0xc2>
     37c:	89 81       	ldd	r24, Y+1	; 0x01
     37e:	82 30       	cpi	r24, 0x02	; 2
     380:	31 f0       	breq	.+12     	; 0x38e <GPIOConfig+0xc2>
     382:	89 81       	ldd	r24, Y+1	; 0x01
     384:	81 30       	cpi	r24, 0x01	; 1
     386:	19 f0       	breq	.+6      	; 0x38e <GPIOConfig+0xc2>
     388:	89 81       	ldd	r24, Y+1	; 0x01
     38a:	88 23       	and	r24, r24
     38c:	31 f5       	brne	.+76     	; 0x3da <GPIOConfig+0x10e>
        {
            CLR_BIT(DDRB,pin);
     38e:	a4 e2       	ldi	r26, 0x24	; 36
     390:	b0 e0       	ldi	r27, 0x00	; 0
     392:	e4 e2       	ldi	r30, 0x24	; 36
     394:	f0 e0       	ldi	r31, 0x00	; 0
     396:	80 81       	ld	r24, Z
     398:	48 2f       	mov	r20, r24
     39a:	89 81       	ldd	r24, Y+1	; 0x01
     39c:	28 2f       	mov	r18, r24
     39e:	30 e0       	ldi	r19, 0x00	; 0
     3a0:	81 e0       	ldi	r24, 0x01	; 1
     3a2:	90 e0       	ldi	r25, 0x00	; 0
     3a4:	02 c0       	rjmp	.+4      	; 0x3aa <GPIOConfig+0xde>
     3a6:	88 0f       	add	r24, r24
     3a8:	99 1f       	adc	r25, r25
     3aa:	2a 95       	dec	r18
     3ac:	e2 f7       	brpl	.-8      	; 0x3a6 <GPIOConfig+0xda>
     3ae:	80 95       	com	r24
     3b0:	84 23       	and	r24, r20
     3b2:	8c 93       	st	X, r24
            SET_BIT(PORTB,pin);
     3b4:	a5 e2       	ldi	r26, 0x25	; 37
     3b6:	b0 e0       	ldi	r27, 0x00	; 0
     3b8:	e5 e2       	ldi	r30, 0x25	; 37
     3ba:	f0 e0       	ldi	r31, 0x00	; 0
     3bc:	80 81       	ld	r24, Z
     3be:	48 2f       	mov	r20, r24
     3c0:	89 81       	ldd	r24, Y+1	; 0x01
     3c2:	28 2f       	mov	r18, r24
     3c4:	30 e0       	ldi	r19, 0x00	; 0
     3c6:	81 e0       	ldi	r24, 0x01	; 1
     3c8:	90 e0       	ldi	r25, 0x00	; 0
     3ca:	02 2e       	mov	r0, r18
     3cc:	02 c0       	rjmp	.+4      	; 0x3d2 <GPIOConfig+0x106>
     3ce:	88 0f       	add	r24, r24
     3d0:	99 1f       	adc	r25, r25
     3d2:	0a 94       	dec	r0
     3d4:	e2 f7       	brpl	.-8      	; 0x3ce <GPIOConfig+0x102>
     3d6:	84 2b       	or	r24, r20
     3d8:	8c 93       	st	X, r24
        }
        if(pin==PC6||pin==PC5||pin==PC4||pin==PC3||pin==PC2||pin==PC1||pin==PC0)
     3da:	89 81       	ldd	r24, Y+1	; 0x01
     3dc:	86 30       	cpi	r24, 0x06	; 6
     3de:	91 f0       	breq	.+36     	; 0x404 <GPIOConfig+0x138>
     3e0:	89 81       	ldd	r24, Y+1	; 0x01
     3e2:	85 30       	cpi	r24, 0x05	; 5
     3e4:	79 f0       	breq	.+30     	; 0x404 <GPIOConfig+0x138>
     3e6:	89 81       	ldd	r24, Y+1	; 0x01
     3e8:	84 30       	cpi	r24, 0x04	; 4
     3ea:	61 f0       	breq	.+24     	; 0x404 <GPIOConfig+0x138>
     3ec:	89 81       	ldd	r24, Y+1	; 0x01
     3ee:	83 30       	cpi	r24, 0x03	; 3
     3f0:	49 f0       	breq	.+18     	; 0x404 <GPIOConfig+0x138>
     3f2:	89 81       	ldd	r24, Y+1	; 0x01
     3f4:	82 30       	cpi	r24, 0x02	; 2
     3f6:	31 f0       	breq	.+12     	; 0x404 <GPIOConfig+0x138>
     3f8:	89 81       	ldd	r24, Y+1	; 0x01
     3fa:	81 30       	cpi	r24, 0x01	; 1
     3fc:	19 f0       	breq	.+6      	; 0x404 <GPIOConfig+0x138>
     3fe:	89 81       	ldd	r24, Y+1	; 0x01
     400:	88 23       	and	r24, r24
     402:	31 f5       	brne	.+76     	; 0x450 <GPIOConfig+0x184>
        {
            CLR_BIT(DDRC,pin);
     404:	a7 e2       	ldi	r26, 0x27	; 39
     406:	b0 e0       	ldi	r27, 0x00	; 0
     408:	e7 e2       	ldi	r30, 0x27	; 39
     40a:	f0 e0       	ldi	r31, 0x00	; 0
     40c:	80 81       	ld	r24, Z
     40e:	48 2f       	mov	r20, r24
     410:	89 81       	ldd	r24, Y+1	; 0x01
     412:	28 2f       	mov	r18, r24
     414:	30 e0       	ldi	r19, 0x00	; 0
     416:	81 e0       	ldi	r24, 0x01	; 1
     418:	90 e0       	ldi	r25, 0x00	; 0
     41a:	02 c0       	rjmp	.+4      	; 0x420 <GPIOConfig+0x154>
     41c:	88 0f       	add	r24, r24
     41e:	99 1f       	adc	r25, r25
     420:	2a 95       	dec	r18
     422:	e2 f7       	brpl	.-8      	; 0x41c <GPIOConfig+0x150>
     424:	80 95       	com	r24
     426:	84 23       	and	r24, r20
     428:	8c 93       	st	X, r24
            SET_BIT(PORTC,pin);
     42a:	a8 e2       	ldi	r26, 0x28	; 40
     42c:	b0 e0       	ldi	r27, 0x00	; 0
     42e:	e8 e2       	ldi	r30, 0x28	; 40
     430:	f0 e0       	ldi	r31, 0x00	; 0
     432:	80 81       	ld	r24, Z
     434:	48 2f       	mov	r20, r24
     436:	89 81       	ldd	r24, Y+1	; 0x01
     438:	28 2f       	mov	r18, r24
     43a:	30 e0       	ldi	r19, 0x00	; 0
     43c:	81 e0       	ldi	r24, 0x01	; 1
     43e:	90 e0       	ldi	r25, 0x00	; 0
     440:	02 2e       	mov	r0, r18
     442:	02 c0       	rjmp	.+4      	; 0x448 <GPIOConfig+0x17c>
     444:	88 0f       	add	r24, r24
     446:	99 1f       	adc	r25, r25
     448:	0a 94       	dec	r0
     44a:	e2 f7       	brpl	.-8      	; 0x444 <GPIOConfig+0x178>
     44c:	84 2b       	or	r24, r20
     44e:	8c 93       	st	X, r24
        }
    }
    if(mode==OUTPUT)
     450:	8a 81       	ldd	r24, Y+2	; 0x02
     452:	81 30       	cpi	r24, 0x01	; 1
     454:	09 f0       	breq	.+2      	; 0x458 <GPIOConfig+0x18c>
     456:	7e c0       	rjmp	.+252    	; 0x554 <GPIOConfig+0x288>
    {
        if(pin==PD7||pin==PD6||pin==PD5||pin==PD4||pin==PD3||pin==PD2||pin==PD1||pin==PD0)
     458:	89 81       	ldd	r24, Y+1	; 0x01
     45a:	87 30       	cpi	r24, 0x07	; 7
     45c:	a9 f0       	breq	.+42     	; 0x488 <GPIOConfig+0x1bc>
     45e:	89 81       	ldd	r24, Y+1	; 0x01
     460:	86 30       	cpi	r24, 0x06	; 6
     462:	91 f0       	breq	.+36     	; 0x488 <GPIOConfig+0x1bc>
     464:	89 81       	ldd	r24, Y+1	; 0x01
     466:	85 30       	cpi	r24, 0x05	; 5
     468:	79 f0       	breq	.+30     	; 0x488 <GPIOConfig+0x1bc>
     46a:	89 81       	ldd	r24, Y+1	; 0x01
     46c:	84 30       	cpi	r24, 0x04	; 4
     46e:	61 f0       	breq	.+24     	; 0x488 <GPIOConfig+0x1bc>
     470:	89 81       	ldd	r24, Y+1	; 0x01
     472:	83 30       	cpi	r24, 0x03	; 3
     474:	49 f0       	breq	.+18     	; 0x488 <GPIOConfig+0x1bc>
     476:	89 81       	ldd	r24, Y+1	; 0x01
     478:	82 30       	cpi	r24, 0x02	; 2
     47a:	31 f0       	breq	.+12     	; 0x488 <GPIOConfig+0x1bc>
     47c:	89 81       	ldd	r24, Y+1	; 0x01
     47e:	81 30       	cpi	r24, 0x01	; 1
     480:	19 f0       	breq	.+6      	; 0x488 <GPIOConfig+0x1bc>
     482:	89 81       	ldd	r24, Y+1	; 0x01
     484:	88 23       	and	r24, r24
     486:	99 f4       	brne	.+38     	; 0x4ae <GPIOConfig+0x1e2>
        {
            SET_BIT(DDRD,pin);
     488:	aa e2       	ldi	r26, 0x2A	; 42
     48a:	b0 e0       	ldi	r27, 0x00	; 0
     48c:	ea e2       	ldi	r30, 0x2A	; 42
     48e:	f0 e0       	ldi	r31, 0x00	; 0
     490:	80 81       	ld	r24, Z
     492:	48 2f       	mov	r20, r24
     494:	89 81       	ldd	r24, Y+1	; 0x01
     496:	28 2f       	mov	r18, r24
     498:	30 e0       	ldi	r19, 0x00	; 0
     49a:	81 e0       	ldi	r24, 0x01	; 1
     49c:	90 e0       	ldi	r25, 0x00	; 0
     49e:	02 2e       	mov	r0, r18
     4a0:	02 c0       	rjmp	.+4      	; 0x4a6 <GPIOConfig+0x1da>
     4a2:	88 0f       	add	r24, r24
     4a4:	99 1f       	adc	r25, r25
     4a6:	0a 94       	dec	r0
     4a8:	e2 f7       	brpl	.-8      	; 0x4a2 <GPIOConfig+0x1d6>
     4aa:	84 2b       	or	r24, r20
     4ac:	8c 93       	st	X, r24
        }
        if(pin==PB7||pin==PB6||pin==PB5||pin==PB4||pin==PB3||pin==PB2||pin==PB1||pin==PB0)
     4ae:	89 81       	ldd	r24, Y+1	; 0x01
     4b0:	87 30       	cpi	r24, 0x07	; 7
     4b2:	a9 f0       	breq	.+42     	; 0x4de <GPIOConfig+0x212>
     4b4:	89 81       	ldd	r24, Y+1	; 0x01
     4b6:	86 30       	cpi	r24, 0x06	; 6
     4b8:	91 f0       	breq	.+36     	; 0x4de <GPIOConfig+0x212>
     4ba:	89 81       	ldd	r24, Y+1	; 0x01
     4bc:	85 30       	cpi	r24, 0x05	; 5
     4be:	79 f0       	breq	.+30     	; 0x4de <GPIOConfig+0x212>
     4c0:	89 81       	ldd	r24, Y+1	; 0x01
     4c2:	84 30       	cpi	r24, 0x04	; 4
     4c4:	61 f0       	breq	.+24     	; 0x4de <GPIOConfig+0x212>
     4c6:	89 81       	ldd	r24, Y+1	; 0x01
     4c8:	83 30       	cpi	r24, 0x03	; 3
     4ca:	49 f0       	breq	.+18     	; 0x4de <GPIOConfig+0x212>
     4cc:	89 81       	ldd	r24, Y+1	; 0x01
     4ce:	82 30       	cpi	r24, 0x02	; 2
     4d0:	31 f0       	breq	.+12     	; 0x4de <GPIOConfig+0x212>
     4d2:	89 81       	ldd	r24, Y+1	; 0x01
     4d4:	81 30       	cpi	r24, 0x01	; 1
     4d6:	19 f0       	breq	.+6      	; 0x4de <GPIOConfig+0x212>
     4d8:	89 81       	ldd	r24, Y+1	; 0x01
     4da:	88 23       	and	r24, r24
     4dc:	99 f4       	brne	.+38     	; 0x504 <GPIOConfig+0x238>
        {
            SET_BIT(DDRB,pin);
     4de:	a4 e2       	ldi	r26, 0x24	; 36
     4e0:	b0 e0       	ldi	r27, 0x00	; 0
     4e2:	e4 e2       	ldi	r30, 0x24	; 36
     4e4:	f0 e0       	ldi	r31, 0x00	; 0
     4e6:	80 81       	ld	r24, Z
     4e8:	48 2f       	mov	r20, r24
     4ea:	89 81       	ldd	r24, Y+1	; 0x01
     4ec:	28 2f       	mov	r18, r24
     4ee:	30 e0       	ldi	r19, 0x00	; 0
     4f0:	81 e0       	ldi	r24, 0x01	; 1
     4f2:	90 e0       	ldi	r25, 0x00	; 0
     4f4:	02 2e       	mov	r0, r18
     4f6:	02 c0       	rjmp	.+4      	; 0x4fc <GPIOConfig+0x230>
     4f8:	88 0f       	add	r24, r24
     4fa:	99 1f       	adc	r25, r25
     4fc:	0a 94       	dec	r0
     4fe:	e2 f7       	brpl	.-8      	; 0x4f8 <GPIOConfig+0x22c>
     500:	84 2b       	or	r24, r20
     502:	8c 93       	st	X, r24
        }
        if(pin==PC6||pin==PC5||pin==PC4||pin==PC3||pin==PC2||pin==PC1||pin==PC0)
     504:	89 81       	ldd	r24, Y+1	; 0x01
     506:	86 30       	cpi	r24, 0x06	; 6
     508:	91 f0       	breq	.+36     	; 0x52e <GPIOConfig+0x262>
     50a:	89 81       	ldd	r24, Y+1	; 0x01
     50c:	85 30       	cpi	r24, 0x05	; 5
     50e:	79 f0       	breq	.+30     	; 0x52e <GPIOConfig+0x262>
     510:	89 81       	ldd	r24, Y+1	; 0x01
     512:	84 30       	cpi	r24, 0x04	; 4
     514:	61 f0       	breq	.+24     	; 0x52e <GPIOConfig+0x262>
     516:	89 81       	ldd	r24, Y+1	; 0x01
     518:	83 30       	cpi	r24, 0x03	; 3
     51a:	49 f0       	breq	.+18     	; 0x52e <GPIOConfig+0x262>
     51c:	89 81       	ldd	r24, Y+1	; 0x01
     51e:	82 30       	cpi	r24, 0x02	; 2
     520:	31 f0       	breq	.+12     	; 0x52e <GPIOConfig+0x262>
     522:	89 81       	ldd	r24, Y+1	; 0x01
     524:	81 30       	cpi	r24, 0x01	; 1
     526:	19 f0       	breq	.+6      	; 0x52e <GPIOConfig+0x262>
     528:	89 81       	ldd	r24, Y+1	; 0x01
     52a:	88 23       	and	r24, r24
     52c:	99 f4       	brne	.+38     	; 0x554 <GPIOConfig+0x288>
        {
            SET_BIT(DDRC,pin);
     52e:	a7 e2       	ldi	r26, 0x27	; 39
     530:	b0 e0       	ldi	r27, 0x00	; 0
     532:	e7 e2       	ldi	r30, 0x27	; 39
     534:	f0 e0       	ldi	r31, 0x00	; 0
     536:	80 81       	ld	r24, Z
     538:	48 2f       	mov	r20, r24
     53a:	89 81       	ldd	r24, Y+1	; 0x01
     53c:	28 2f       	mov	r18, r24
     53e:	30 e0       	ldi	r19, 0x00	; 0
     540:	81 e0       	ldi	r24, 0x01	; 1
     542:	90 e0       	ldi	r25, 0x00	; 0
     544:	02 2e       	mov	r0, r18
     546:	02 c0       	rjmp	.+4      	; 0x54c <GPIOConfig+0x280>
     548:	88 0f       	add	r24, r24
     54a:	99 1f       	adc	r25, r25
     54c:	0a 94       	dec	r0
     54e:	e2 f7       	brpl	.-8      	; 0x548 <GPIOConfig+0x27c>
     550:	84 2b       	or	r24, r20
     552:	8c 93       	st	X, r24
        }
    }
}
     554:	0f 90       	pop	r0
     556:	0f 90       	pop	r0
     558:	cf 91       	pop	r28
     55a:	df 91       	pop	r29
     55c:	08 95       	ret

0000055e <GPIOPinWrite>:

void GPIOPinWrite(uint8_t pin,uint8_t state)
{
     55e:	df 93       	push	r29
     560:	cf 93       	push	r28
     562:	00 d0       	rcall	.+0      	; 0x564 <GPIOPinWrite+0x6>
     564:	cd b7       	in	r28, 0x3d	; 61
     566:	de b7       	in	r29, 0x3e	; 62
     568:	89 83       	std	Y+1, r24	; 0x01
     56a:	6a 83       	std	Y+2, r22	; 0x02
    if(pin==PD7||pin==PD6||pin==PD5||pin==PD4||pin==PD3||pin==PD2||pin==PD1||pin==PD0)
     56c:	89 81       	ldd	r24, Y+1	; 0x01
     56e:	87 30       	cpi	r24, 0x07	; 7
     570:	a9 f0       	breq	.+42     	; 0x59c <GPIOPinWrite+0x3e>
     572:	89 81       	ldd	r24, Y+1	; 0x01
     574:	86 30       	cpi	r24, 0x06	; 6
     576:	91 f0       	breq	.+36     	; 0x59c <GPIOPinWrite+0x3e>
     578:	89 81       	ldd	r24, Y+1	; 0x01
     57a:	85 30       	cpi	r24, 0x05	; 5
     57c:	79 f0       	breq	.+30     	; 0x59c <GPIOPinWrite+0x3e>
     57e:	89 81       	ldd	r24, Y+1	; 0x01
     580:	84 30       	cpi	r24, 0x04	; 4
     582:	61 f0       	breq	.+24     	; 0x59c <GPIOPinWrite+0x3e>
     584:	89 81       	ldd	r24, Y+1	; 0x01
     586:	83 30       	cpi	r24, 0x03	; 3
     588:	49 f0       	breq	.+18     	; 0x59c <GPIOPinWrite+0x3e>
     58a:	89 81       	ldd	r24, Y+1	; 0x01
     58c:	82 30       	cpi	r24, 0x02	; 2
     58e:	31 f0       	breq	.+12     	; 0x59c <GPIOPinWrite+0x3e>
     590:	89 81       	ldd	r24, Y+1	; 0x01
     592:	81 30       	cpi	r24, 0x01	; 1
     594:	19 f0       	breq	.+6      	; 0x59c <GPIOPinWrite+0x3e>
     596:	89 81       	ldd	r24, Y+1	; 0x01
     598:	88 23       	and	r24, r24
     59a:	69 f5       	brne	.+90     	; 0x5f6 <GPIOPinWrite+0x98>
    {
        if(state==HIGH)
     59c:	8a 81       	ldd	r24, Y+2	; 0x02
     59e:	81 30       	cpi	r24, 0x01	; 1
     5a0:	99 f4       	brne	.+38     	; 0x5c8 <GPIOPinWrite+0x6a>
        {
            SET_BIT(PORTD,pin);
     5a2:	ab e2       	ldi	r26, 0x2B	; 43
     5a4:	b0 e0       	ldi	r27, 0x00	; 0
     5a6:	eb e2       	ldi	r30, 0x2B	; 43
     5a8:	f0 e0       	ldi	r31, 0x00	; 0
     5aa:	80 81       	ld	r24, Z
     5ac:	48 2f       	mov	r20, r24
     5ae:	89 81       	ldd	r24, Y+1	; 0x01
     5b0:	28 2f       	mov	r18, r24
     5b2:	30 e0       	ldi	r19, 0x00	; 0
     5b4:	81 e0       	ldi	r24, 0x01	; 1
     5b6:	90 e0       	ldi	r25, 0x00	; 0
     5b8:	02 2e       	mov	r0, r18
     5ba:	02 c0       	rjmp	.+4      	; 0x5c0 <GPIOPinWrite+0x62>
     5bc:	88 0f       	add	r24, r24
     5be:	99 1f       	adc	r25, r25
     5c0:	0a 94       	dec	r0
     5c2:	e2 f7       	brpl	.-8      	; 0x5bc <GPIOPinWrite+0x5e>
     5c4:	84 2b       	or	r24, r20
     5c6:	8c 93       	st	X, r24
        }
        if(state==LOW)
     5c8:	8a 81       	ldd	r24, Y+2	; 0x02
     5ca:	88 23       	and	r24, r24
     5cc:	a1 f4       	brne	.+40     	; 0x5f6 <GPIOPinWrite+0x98>
        {
            CLR_BIT(PORTD,pin);
     5ce:	ab e2       	ldi	r26, 0x2B	; 43
     5d0:	b0 e0       	ldi	r27, 0x00	; 0
     5d2:	eb e2       	ldi	r30, 0x2B	; 43
     5d4:	f0 e0       	ldi	r31, 0x00	; 0
     5d6:	80 81       	ld	r24, Z
     5d8:	48 2f       	mov	r20, r24
     5da:	89 81       	ldd	r24, Y+1	; 0x01
     5dc:	28 2f       	mov	r18, r24
     5de:	30 e0       	ldi	r19, 0x00	; 0
     5e0:	81 e0       	ldi	r24, 0x01	; 1
     5e2:	90 e0       	ldi	r25, 0x00	; 0
     5e4:	02 2e       	mov	r0, r18
     5e6:	02 c0       	rjmp	.+4      	; 0x5ec <GPIOPinWrite+0x8e>
     5e8:	88 0f       	add	r24, r24
     5ea:	99 1f       	adc	r25, r25
     5ec:	0a 94       	dec	r0
     5ee:	e2 f7       	brpl	.-8      	; 0x5e8 <GPIOPinWrite+0x8a>
     5f0:	80 95       	com	r24
     5f2:	84 23       	and	r24, r20
     5f4:	8c 93       	st	X, r24
        }
    }
    if(pin==PB7||pin==PB6||pin==PB5||pin==PB4||pin==PB3||pin==PB2||pin==PB1||pin==PB0)
     5f6:	89 81       	ldd	r24, Y+1	; 0x01
     5f8:	87 30       	cpi	r24, 0x07	; 7
     5fa:	a9 f0       	breq	.+42     	; 0x626 <GPIOPinWrite+0xc8>
     5fc:	89 81       	ldd	r24, Y+1	; 0x01
     5fe:	86 30       	cpi	r24, 0x06	; 6
     600:	91 f0       	breq	.+36     	; 0x626 <GPIOPinWrite+0xc8>
     602:	89 81       	ldd	r24, Y+1	; 0x01
     604:	85 30       	cpi	r24, 0x05	; 5
     606:	79 f0       	breq	.+30     	; 0x626 <GPIOPinWrite+0xc8>
     608:	89 81       	ldd	r24, Y+1	; 0x01
     60a:	84 30       	cpi	r24, 0x04	; 4
     60c:	61 f0       	breq	.+24     	; 0x626 <GPIOPinWrite+0xc8>
     60e:	89 81       	ldd	r24, Y+1	; 0x01
     610:	83 30       	cpi	r24, 0x03	; 3
     612:	49 f0       	breq	.+18     	; 0x626 <GPIOPinWrite+0xc8>
     614:	89 81       	ldd	r24, Y+1	; 0x01
     616:	82 30       	cpi	r24, 0x02	; 2
     618:	31 f0       	breq	.+12     	; 0x626 <GPIOPinWrite+0xc8>
     61a:	89 81       	ldd	r24, Y+1	; 0x01
     61c:	81 30       	cpi	r24, 0x01	; 1
     61e:	19 f0       	breq	.+6      	; 0x626 <GPIOPinWrite+0xc8>
     620:	89 81       	ldd	r24, Y+1	; 0x01
     622:	88 23       	and	r24, r24
     624:	69 f5       	brne	.+90     	; 0x680 <GPIOPinWrite+0x122>
    {
        if(state==HIGH)
     626:	8a 81       	ldd	r24, Y+2	; 0x02
     628:	81 30       	cpi	r24, 0x01	; 1
     62a:	99 f4       	brne	.+38     	; 0x652 <GPIOPinWrite+0xf4>
        {
            SET_BIT(PORTB,pin);
     62c:	a5 e2       	ldi	r26, 0x25	; 37
     62e:	b0 e0       	ldi	r27, 0x00	; 0
     630:	e5 e2       	ldi	r30, 0x25	; 37
     632:	f0 e0       	ldi	r31, 0x00	; 0
     634:	80 81       	ld	r24, Z
     636:	48 2f       	mov	r20, r24
     638:	89 81       	ldd	r24, Y+1	; 0x01
     63a:	28 2f       	mov	r18, r24
     63c:	30 e0       	ldi	r19, 0x00	; 0
     63e:	81 e0       	ldi	r24, 0x01	; 1
     640:	90 e0       	ldi	r25, 0x00	; 0
     642:	02 2e       	mov	r0, r18
     644:	02 c0       	rjmp	.+4      	; 0x64a <GPIOPinWrite+0xec>
     646:	88 0f       	add	r24, r24
     648:	99 1f       	adc	r25, r25
     64a:	0a 94       	dec	r0
     64c:	e2 f7       	brpl	.-8      	; 0x646 <GPIOPinWrite+0xe8>
     64e:	84 2b       	or	r24, r20
     650:	8c 93       	st	X, r24
        }
        if(state==LOW)
     652:	8a 81       	ldd	r24, Y+2	; 0x02
     654:	88 23       	and	r24, r24
     656:	a1 f4       	brne	.+40     	; 0x680 <GPIOPinWrite+0x122>
        {
            CLR_BIT(PORTB,pin);
     658:	a5 e2       	ldi	r26, 0x25	; 37
     65a:	b0 e0       	ldi	r27, 0x00	; 0
     65c:	e5 e2       	ldi	r30, 0x25	; 37
     65e:	f0 e0       	ldi	r31, 0x00	; 0
     660:	80 81       	ld	r24, Z
     662:	48 2f       	mov	r20, r24
     664:	89 81       	ldd	r24, Y+1	; 0x01
     666:	28 2f       	mov	r18, r24
     668:	30 e0       	ldi	r19, 0x00	; 0
     66a:	81 e0       	ldi	r24, 0x01	; 1
     66c:	90 e0       	ldi	r25, 0x00	; 0
     66e:	02 2e       	mov	r0, r18
     670:	02 c0       	rjmp	.+4      	; 0x676 <GPIOPinWrite+0x118>
     672:	88 0f       	add	r24, r24
     674:	99 1f       	adc	r25, r25
     676:	0a 94       	dec	r0
     678:	e2 f7       	brpl	.-8      	; 0x672 <GPIOPinWrite+0x114>
     67a:	80 95       	com	r24
     67c:	84 23       	and	r24, r20
     67e:	8c 93       	st	X, r24
        }
    }
    if(pin==PC6||pin==PC5||pin==PC4||pin==PC3||pin==PC2||pin==PC1||pin==PC0)
     680:	89 81       	ldd	r24, Y+1	; 0x01
     682:	86 30       	cpi	r24, 0x06	; 6
     684:	91 f0       	breq	.+36     	; 0x6aa <GPIOPinWrite+0x14c>
     686:	89 81       	ldd	r24, Y+1	; 0x01
     688:	85 30       	cpi	r24, 0x05	; 5
     68a:	79 f0       	breq	.+30     	; 0x6aa <GPIOPinWrite+0x14c>
     68c:	89 81       	ldd	r24, Y+1	; 0x01
     68e:	84 30       	cpi	r24, 0x04	; 4
     690:	61 f0       	breq	.+24     	; 0x6aa <GPIOPinWrite+0x14c>
     692:	89 81       	ldd	r24, Y+1	; 0x01
     694:	83 30       	cpi	r24, 0x03	; 3
     696:	49 f0       	breq	.+18     	; 0x6aa <GPIOPinWrite+0x14c>
     698:	89 81       	ldd	r24, Y+1	; 0x01
     69a:	82 30       	cpi	r24, 0x02	; 2
     69c:	31 f0       	breq	.+12     	; 0x6aa <GPIOPinWrite+0x14c>
     69e:	89 81       	ldd	r24, Y+1	; 0x01
     6a0:	81 30       	cpi	r24, 0x01	; 1
     6a2:	19 f0       	breq	.+6      	; 0x6aa <GPIOPinWrite+0x14c>
     6a4:	89 81       	ldd	r24, Y+1	; 0x01
     6a6:	88 23       	and	r24, r24
     6a8:	69 f5       	brne	.+90     	; 0x704 <GPIOPinWrite+0x1a6>
    {
        if(state==HIGH)
     6aa:	8a 81       	ldd	r24, Y+2	; 0x02
     6ac:	81 30       	cpi	r24, 0x01	; 1
     6ae:	99 f4       	brne	.+38     	; 0x6d6 <GPIOPinWrite+0x178>
        {
            SET_BIT(PORTC,pin);
     6b0:	a8 e2       	ldi	r26, 0x28	; 40
     6b2:	b0 e0       	ldi	r27, 0x00	; 0
     6b4:	e8 e2       	ldi	r30, 0x28	; 40
     6b6:	f0 e0       	ldi	r31, 0x00	; 0
     6b8:	80 81       	ld	r24, Z
     6ba:	48 2f       	mov	r20, r24
     6bc:	89 81       	ldd	r24, Y+1	; 0x01
     6be:	28 2f       	mov	r18, r24
     6c0:	30 e0       	ldi	r19, 0x00	; 0
     6c2:	81 e0       	ldi	r24, 0x01	; 1
     6c4:	90 e0       	ldi	r25, 0x00	; 0
     6c6:	02 2e       	mov	r0, r18
     6c8:	02 c0       	rjmp	.+4      	; 0x6ce <GPIOPinWrite+0x170>
     6ca:	88 0f       	add	r24, r24
     6cc:	99 1f       	adc	r25, r25
     6ce:	0a 94       	dec	r0
     6d0:	e2 f7       	brpl	.-8      	; 0x6ca <GPIOPinWrite+0x16c>
     6d2:	84 2b       	or	r24, r20
     6d4:	8c 93       	st	X, r24
        }
        if(state==LOW)
     6d6:	8a 81       	ldd	r24, Y+2	; 0x02
     6d8:	88 23       	and	r24, r24
     6da:	a1 f4       	brne	.+40     	; 0x704 <GPIOPinWrite+0x1a6>
        {
            CLR_BIT(PORTC,pin);
     6dc:	a8 e2       	ldi	r26, 0x28	; 40
     6de:	b0 e0       	ldi	r27, 0x00	; 0
     6e0:	e8 e2       	ldi	r30, 0x28	; 40
     6e2:	f0 e0       	ldi	r31, 0x00	; 0
     6e4:	80 81       	ld	r24, Z
     6e6:	48 2f       	mov	r20, r24
     6e8:	89 81       	ldd	r24, Y+1	; 0x01
     6ea:	28 2f       	mov	r18, r24
     6ec:	30 e0       	ldi	r19, 0x00	; 0
     6ee:	81 e0       	ldi	r24, 0x01	; 1
     6f0:	90 e0       	ldi	r25, 0x00	; 0
     6f2:	02 2e       	mov	r0, r18
     6f4:	02 c0       	rjmp	.+4      	; 0x6fa <GPIOPinWrite+0x19c>
     6f6:	88 0f       	add	r24, r24
     6f8:	99 1f       	adc	r25, r25
     6fa:	0a 94       	dec	r0
     6fc:	e2 f7       	brpl	.-8      	; 0x6f6 <GPIOPinWrite+0x198>
     6fe:	80 95       	com	r24
     700:	84 23       	and	r24, r20
     702:	8c 93       	st	X, r24
        }
    }
}
     704:	0f 90       	pop	r0
     706:	0f 90       	pop	r0
     708:	cf 91       	pop	r28
     70a:	df 91       	pop	r29
     70c:	08 95       	ret

0000070e <GPIOPinRead>:

uint8_t GPIOPinRead(uint8_t pin)
{
     70e:	df 93       	push	r29
     710:	cf 93       	push	r28
     712:	00 d0       	rcall	.+0      	; 0x714 <GPIOPinRead+0x6>
     714:	0f 92       	push	r0
     716:	cd b7       	in	r28, 0x3d	; 61
     718:	de b7       	in	r29, 0x3e	; 62
     71a:	89 83       	std	Y+1, r24	; 0x01
    if(pin==PD7||pin==PD6||pin==PD5||pin==PD4||pin==PD3||pin==PD2||pin==PD1||pin==PD0)
     71c:	89 81       	ldd	r24, Y+1	; 0x01
     71e:	87 30       	cpi	r24, 0x07	; 7
     720:	a9 f0       	breq	.+42     	; 0x74c <GPIOPinRead+0x3e>
     722:	89 81       	ldd	r24, Y+1	; 0x01
     724:	86 30       	cpi	r24, 0x06	; 6
     726:	91 f0       	breq	.+36     	; 0x74c <GPIOPinRead+0x3e>
     728:	89 81       	ldd	r24, Y+1	; 0x01
     72a:	85 30       	cpi	r24, 0x05	; 5
     72c:	79 f0       	breq	.+30     	; 0x74c <GPIOPinRead+0x3e>
     72e:	89 81       	ldd	r24, Y+1	; 0x01
     730:	84 30       	cpi	r24, 0x04	; 4
     732:	61 f0       	breq	.+24     	; 0x74c <GPIOPinRead+0x3e>
     734:	89 81       	ldd	r24, Y+1	; 0x01
     736:	83 30       	cpi	r24, 0x03	; 3
     738:	49 f0       	breq	.+18     	; 0x74c <GPIOPinRead+0x3e>
     73a:	89 81       	ldd	r24, Y+1	; 0x01
     73c:	82 30       	cpi	r24, 0x02	; 2
     73e:	31 f0       	breq	.+12     	; 0x74c <GPIOPinRead+0x3e>
     740:	89 81       	ldd	r24, Y+1	; 0x01
     742:	81 30       	cpi	r24, 0x01	; 1
     744:	19 f0       	breq	.+6      	; 0x74c <GPIOPinRead+0x3e>
     746:	89 81       	ldd	r24, Y+1	; 0x01
     748:	88 23       	and	r24, r24
     74a:	c1 f4       	brne	.+48     	; 0x77c <GPIOPinRead+0x6e>
    {
        if((PIND)&(1<<pin))
     74c:	e9 e2       	ldi	r30, 0x29	; 41
     74e:	f0 e0       	ldi	r31, 0x00	; 0
     750:	80 81       	ld	r24, Z
     752:	28 2f       	mov	r18, r24
     754:	30 e0       	ldi	r19, 0x00	; 0
     756:	89 81       	ldd	r24, Y+1	; 0x01
     758:	88 2f       	mov	r24, r24
     75a:	90 e0       	ldi	r25, 0x00	; 0
     75c:	a9 01       	movw	r20, r18
     75e:	02 c0       	rjmp	.+4      	; 0x764 <GPIOPinRead+0x56>
     760:	55 95       	asr	r21
     762:	47 95       	ror	r20
     764:	8a 95       	dec	r24
     766:	e2 f7       	brpl	.-8      	; 0x760 <GPIOPinRead+0x52>
     768:	ca 01       	movw	r24, r20
     76a:	81 70       	andi	r24, 0x01	; 1
     76c:	90 70       	andi	r25, 0x00	; 0
     76e:	88 23       	and	r24, r24
     770:	19 f0       	breq	.+6      	; 0x778 <GPIOPinRead+0x6a>
        {
            return HIGH;
     772:	51 e0       	ldi	r21, 0x01	; 1
     774:	5a 83       	std	Y+2, r21	; 0x02
     776:	60 c0       	rjmp	.+192    	; 0x838 <GPIOPinRead+0x12a>
        }
        else
        {
            return LOW;
     778:	1a 82       	std	Y+2, r1	; 0x02
     77a:	5e c0       	rjmp	.+188    	; 0x838 <GPIOPinRead+0x12a>
        }
    }
    if(pin==PB7||pin==PB6||pin==PB5||pin==PB4||pin==PB3||pin==PB2||pin==PB1||pin==PB0)
     77c:	89 81       	ldd	r24, Y+1	; 0x01
     77e:	87 30       	cpi	r24, 0x07	; 7
     780:	a9 f0       	breq	.+42     	; 0x7ac <GPIOPinRead+0x9e>
     782:	89 81       	ldd	r24, Y+1	; 0x01
     784:	86 30       	cpi	r24, 0x06	; 6
     786:	91 f0       	breq	.+36     	; 0x7ac <GPIOPinRead+0x9e>
     788:	89 81       	ldd	r24, Y+1	; 0x01
     78a:	85 30       	cpi	r24, 0x05	; 5
     78c:	79 f0       	breq	.+30     	; 0x7ac <GPIOPinRead+0x9e>
     78e:	89 81       	ldd	r24, Y+1	; 0x01
     790:	84 30       	cpi	r24, 0x04	; 4
     792:	61 f0       	breq	.+24     	; 0x7ac <GPIOPinRead+0x9e>
     794:	89 81       	ldd	r24, Y+1	; 0x01
     796:	83 30       	cpi	r24, 0x03	; 3
     798:	49 f0       	breq	.+18     	; 0x7ac <GPIOPinRead+0x9e>
     79a:	89 81       	ldd	r24, Y+1	; 0x01
     79c:	82 30       	cpi	r24, 0x02	; 2
     79e:	31 f0       	breq	.+12     	; 0x7ac <GPIOPinRead+0x9e>
     7a0:	89 81       	ldd	r24, Y+1	; 0x01
     7a2:	81 30       	cpi	r24, 0x01	; 1
     7a4:	19 f0       	breq	.+6      	; 0x7ac <GPIOPinRead+0x9e>
     7a6:	89 81       	ldd	r24, Y+1	; 0x01
     7a8:	88 23       	and	r24, r24
     7aa:	c1 f4       	brne	.+48     	; 0x7dc <GPIOPinRead+0xce>
    {
        if((PINB)&(1<<pin))
     7ac:	e3 e2       	ldi	r30, 0x23	; 35
     7ae:	f0 e0       	ldi	r31, 0x00	; 0
     7b0:	80 81       	ld	r24, Z
     7b2:	28 2f       	mov	r18, r24
     7b4:	30 e0       	ldi	r19, 0x00	; 0
     7b6:	89 81       	ldd	r24, Y+1	; 0x01
     7b8:	88 2f       	mov	r24, r24
     7ba:	90 e0       	ldi	r25, 0x00	; 0
     7bc:	a9 01       	movw	r20, r18
     7be:	02 c0       	rjmp	.+4      	; 0x7c4 <GPIOPinRead+0xb6>
     7c0:	55 95       	asr	r21
     7c2:	47 95       	ror	r20
     7c4:	8a 95       	dec	r24
     7c6:	e2 f7       	brpl	.-8      	; 0x7c0 <GPIOPinRead+0xb2>
     7c8:	ca 01       	movw	r24, r20
     7ca:	81 70       	andi	r24, 0x01	; 1
     7cc:	90 70       	andi	r25, 0x00	; 0
     7ce:	88 23       	and	r24, r24
     7d0:	19 f0       	breq	.+6      	; 0x7d8 <GPIOPinRead+0xca>
        {
            return HIGH;
     7d2:	51 e0       	ldi	r21, 0x01	; 1
     7d4:	5a 83       	std	Y+2, r21	; 0x02
     7d6:	30 c0       	rjmp	.+96     	; 0x838 <GPIOPinRead+0x12a>
        }
        else
        {
            return LOW;
     7d8:	1a 82       	std	Y+2, r1	; 0x02
     7da:	2e c0       	rjmp	.+92     	; 0x838 <GPIOPinRead+0x12a>
        }
    }
    if(pin==PC6||pin==PC5||pin==PC4||pin==PC3||pin==PC2||pin==PC1||pin==PC0)
     7dc:	89 81       	ldd	r24, Y+1	; 0x01
     7de:	86 30       	cpi	r24, 0x06	; 6
     7e0:	91 f0       	breq	.+36     	; 0x806 <GPIOPinRead+0xf8>
     7e2:	89 81       	ldd	r24, Y+1	; 0x01
     7e4:	85 30       	cpi	r24, 0x05	; 5
     7e6:	79 f0       	breq	.+30     	; 0x806 <GPIOPinRead+0xf8>
     7e8:	89 81       	ldd	r24, Y+1	; 0x01
     7ea:	84 30       	cpi	r24, 0x04	; 4
     7ec:	61 f0       	breq	.+24     	; 0x806 <GPIOPinRead+0xf8>
     7ee:	89 81       	ldd	r24, Y+1	; 0x01
     7f0:	83 30       	cpi	r24, 0x03	; 3
     7f2:	49 f0       	breq	.+18     	; 0x806 <GPIOPinRead+0xf8>
     7f4:	89 81       	ldd	r24, Y+1	; 0x01
     7f6:	82 30       	cpi	r24, 0x02	; 2
     7f8:	31 f0       	breq	.+12     	; 0x806 <GPIOPinRead+0xf8>
     7fa:	89 81       	ldd	r24, Y+1	; 0x01
     7fc:	81 30       	cpi	r24, 0x01	; 1
     7fe:	19 f0       	breq	.+6      	; 0x806 <GPIOPinRead+0xf8>
     800:	89 81       	ldd	r24, Y+1	; 0x01
     802:	88 23       	and	r24, r24
     804:	c1 f4       	brne	.+48     	; 0x836 <GPIOPinRead+0x128>
    {
        if((PINC)&(1<<pin))
     806:	e6 e2       	ldi	r30, 0x26	; 38
     808:	f0 e0       	ldi	r31, 0x00	; 0
     80a:	80 81       	ld	r24, Z
     80c:	28 2f       	mov	r18, r24
     80e:	30 e0       	ldi	r19, 0x00	; 0
     810:	89 81       	ldd	r24, Y+1	; 0x01
     812:	88 2f       	mov	r24, r24
     814:	90 e0       	ldi	r25, 0x00	; 0
     816:	a9 01       	movw	r20, r18
     818:	02 c0       	rjmp	.+4      	; 0x81e <GPIOPinRead+0x110>
     81a:	55 95       	asr	r21
     81c:	47 95       	ror	r20
     81e:	8a 95       	dec	r24
     820:	e2 f7       	brpl	.-8      	; 0x81a <GPIOPinRead+0x10c>
     822:	ca 01       	movw	r24, r20
     824:	81 70       	andi	r24, 0x01	; 1
     826:	90 70       	andi	r25, 0x00	; 0
     828:	88 23       	and	r24, r24
     82a:	19 f0       	breq	.+6      	; 0x832 <GPIOPinRead+0x124>
        {
            return HIGH;
     82c:	51 e0       	ldi	r21, 0x01	; 1
     82e:	5a 83       	std	Y+2, r21	; 0x02
     830:	03 c0       	rjmp	.+6      	; 0x838 <GPIOPinRead+0x12a>
        }
        else
        {
            return LOW;
     832:	1a 82       	std	Y+2, r1	; 0x02
     834:	01 c0       	rjmp	.+2      	; 0x838 <GPIOPinRead+0x12a>
     836:	02 c0       	rjmp	.+4      	; 0x83c <GPIOPinRead+0x12e>
        }
    }
}
     838:	8a 81       	ldd	r24, Y+2	; 0x02
     83a:	8b 83       	std	Y+3, r24	; 0x03
     83c:	8b 81       	ldd	r24, Y+3	; 0x03
     83e:	0f 90       	pop	r0
     840:	0f 90       	pop	r0
     842:	0f 90       	pop	r0
     844:	cf 91       	pop	r28
     846:	df 91       	pop	r29
     848:	08 95       	ret

0000084a <main>:
******************************************************************************/
/******************************************************************************
* Internal functions
******************************************************************************/
int main()
{
     84a:	df 93       	push	r29
     84c:	cf 93       	push	r28
     84e:	cd b7       	in	r28, 0x3d	; 61
     850:	de b7       	in	r29, 0x3e	; 62
    sei();
     852:	78 94       	sei
    PORTC=0x00;
     854:	e8 e2       	ldi	r30, 0x28	; 40
     856:	f0 e0       	ldi	r31, 0x00	; 0
     858:	10 82       	st	Z, r1
    GPIOConfig(PD2,INPUT);// engine
     85a:	82 e0       	ldi	r24, 0x02	; 2
     85c:	60 e0       	ldi	r22, 0x00	; 0
     85e:	0e 94 66 01 	call	0x2cc	; 0x2cc <GPIOConfig>
    GPIOConfig(PD3,INPUT);// wiper
     862:	83 e0       	ldi	r24, 0x03	; 3
     864:	60 e0       	ldi	r22, 0x00	; 0
     866:	0e 94 66 01 	call	0x2cc	; 0x2cc <GPIOConfig>
    GPIOConfig(PD6,OUTPUT);
     86a:	86 e0       	ldi	r24, 0x06	; 6
     86c:	61 e0       	ldi	r22, 0x01	; 1
     86e:	0e 94 66 01 	call	0x2cc	; 0x2cc <GPIOConfig>

    EIMSK|=(1<<INT1)|(1<<INT0);
     872:	ad e3       	ldi	r26, 0x3D	; 61
     874:	b0 e0       	ldi	r27, 0x00	; 0
     876:	ed e3       	ldi	r30, 0x3D	; 61
     878:	f0 e0       	ldi	r31, 0x00	; 0
     87a:	80 81       	ld	r24, Z
     87c:	83 60       	ori	r24, 0x03	; 3
     87e:	8c 93       	st	X, r24
    EICRA|=(1<<ISC00);
     880:	a9 e6       	ldi	r26, 0x69	; 105
     882:	b0 e0       	ldi	r27, 0x00	; 0
     884:	e9 e6       	ldi	r30, 0x69	; 105
     886:	f0 e0       	ldi	r31, 0x00	; 0
     888:	80 81       	ld	r24, Z
     88a:	81 60       	ori	r24, 0x01	; 1
     88c:	8c 93       	st	X, r24
    EICRA&=~(1<<ISC01);
     88e:	a9 e6       	ldi	r26, 0x69	; 105
     890:	b0 e0       	ldi	r27, 0x00	; 0
     892:	e9 e6       	ldi	r30, 0x69	; 105
     894:	f0 e0       	ldi	r31, 0x00	; 0
     896:	80 81       	ld	r24, Z
     898:	8d 7f       	andi	r24, 0xFD	; 253
     89a:	8c 93       	st	X, r24
    EICRA|=(1<<ISC10);
     89c:	a9 e6       	ldi	r26, 0x69	; 105
     89e:	b0 e0       	ldi	r27, 0x00	; 0
     8a0:	e9 e6       	ldi	r30, 0x69	; 105
     8a2:	f0 e0       	ldi	r31, 0x00	; 0
     8a4:	80 81       	ld	r24, Z
     8a6:	84 60       	ori	r24, 0x04	; 4
     8a8:	8c 93       	st	X, r24
    EICRA&=~(1<<ISC11);
     8aa:	a9 e6       	ldi	r26, 0x69	; 105
     8ac:	b0 e0       	ldi	r27, 0x00	; 0
     8ae:	e9 e6       	ldi	r30, 0x69	; 105
     8b0:	f0 e0       	ldi	r31, 0x00	; 0
     8b2:	80 81       	ld	r24, Z
     8b4:	87 7f       	andi	r24, 0xF7	; 247
     8b6:	8c 93       	st	X, r24

    TCCR0A=0x00;
     8b8:	e4 e4       	ldi	r30, 0x44	; 68
     8ba:	f0 e0       	ldi	r31, 0x00	; 0
     8bc:	10 82       	st	Z, r1
    TCCR0B=0x00;
     8be:	e5 e4       	ldi	r30, 0x45	; 69
     8c0:	f0 e0       	ldi	r31, 0x00	; 0
     8c2:	10 82       	st	Z, r1
    TCCR0B|=(1<<CS02)|(1<<CS00);
     8c4:	a5 e4       	ldi	r26, 0x45	; 69
     8c6:	b0 e0       	ldi	r27, 0x00	; 0
     8c8:	e5 e4       	ldi	r30, 0x45	; 69
     8ca:	f0 e0       	ldi	r31, 0x00	; 0
     8cc:	80 81       	ld	r24, Z
     8ce:	85 60       	ori	r24, 0x05	; 5
     8d0:	8c 93       	st	X, r24
    TCCR0B&=~(1<<CS01);
     8d2:	a5 e4       	ldi	r26, 0x45	; 69
     8d4:	b0 e0       	ldi	r27, 0x00	; 0
     8d6:	e5 e4       	ldi	r30, 0x45	; 69
     8d8:	f0 e0       	ldi	r31, 0x00	; 0
     8da:	80 81       	ld	r24, Z
     8dc:	8d 7f       	andi	r24, 0xFD	; 253
     8de:	8c 93       	st	X, r24
    TIMSK0|=(1<<TOIE0);
     8e0:	ae e6       	ldi	r26, 0x6E	; 110
     8e2:	b0 e0       	ldi	r27, 0x00	; 0
     8e4:	ee e6       	ldi	r30, 0x6E	; 110
     8e6:	f0 e0       	ldi	r31, 0x00	; 0
     8e8:	80 81       	ld	r24, Z
     8ea:	81 60       	ori	r24, 0x01	; 1
     8ec:	8c 93       	st	X, r24
    TCNT0=0x64;
     8ee:	e6 e4       	ldi	r30, 0x46	; 70
     8f0:	f0 e0       	ldi	r31, 0x00	; 0
     8f2:	84 e6       	ldi	r24, 0x64	; 100
     8f4:	80 83       	st	Z, r24

    adc_init();
     8f6:	0e 94 53 00 	call	0xa6	; 0xa6 <adc_init>
    PWM_init();
     8fa:	0e 94 e4 04 	call	0x9c8	; 0x9c8 <PWM_init>

    while(1)
    {
        app_mode();
     8fe:	0e 94 97 05 	call	0xb2e	; 0xb2e <app_mode>
     902:	fd cf       	rjmp	.-6      	; 0x8fe <main+0xb4>

00000904 <__vector_1>:
}
/******************************************************************************
* ISR
******************************************************************************/
ISR(INT0_vect)
{
     904:	1f 92       	push	r1
     906:	0f 92       	push	r0
     908:	0f b6       	in	r0, 0x3f	; 63
     90a:	0f 92       	push	r0
     90c:	11 24       	eor	r1, r1
     90e:	8f 93       	push	r24
     910:	9f 93       	push	r25
     912:	df 93       	push	r29
     914:	cf 93       	push	r28
     916:	cd b7       	in	r28, 0x3d	; 61
     918:	de b7       	in	r29, 0x3e	; 62
     isr_0=isr_0^1;
     91a:	80 91 08 01 	lds	r24, 0x0108
     91e:	91 e0       	ldi	r25, 0x01	; 1
     920:	89 27       	eor	r24, r25
     922:	80 93 08 01 	sts	0x0108, r24
}
     926:	cf 91       	pop	r28
     928:	df 91       	pop	r29
     92a:	9f 91       	pop	r25
     92c:	8f 91       	pop	r24
     92e:	0f 90       	pop	r0
     930:	0f be       	out	0x3f, r0	; 63
     932:	0f 90       	pop	r0
     934:	1f 90       	pop	r1
     936:	18 95       	reti

00000938 <__vector_2>:

ISR(INT1_vect)
{
     938:	1f 92       	push	r1
     93a:	0f 92       	push	r0
     93c:	0f b6       	in	r0, 0x3f	; 63
     93e:	0f 92       	push	r0
     940:	11 24       	eor	r1, r1
     942:	8f 93       	push	r24
     944:	9f 93       	push	r25
     946:	df 93       	push	r29
     948:	cf 93       	push	r28
     94a:	cd b7       	in	r28, 0x3d	; 61
     94c:	de b7       	in	r29, 0x3e	; 62
    isr_1=isr_1^1;
     94e:	80 91 09 01 	lds	r24, 0x0109
     952:	91 e0       	ldi	r25, 0x01	; 1
     954:	89 27       	eor	r24, r25
     956:	80 93 09 01 	sts	0x0109, r24
}
     95a:	cf 91       	pop	r28
     95c:	df 91       	pop	r29
     95e:	9f 91       	pop	r25
     960:	8f 91       	pop	r24
     962:	0f 90       	pop	r0
     964:	0f be       	out	0x3f, r0	; 63
     966:	0f 90       	pop	r0
     968:	1f 90       	pop	r1
     96a:	18 95       	reti

0000096c <__vector_16>:

ISR(TIMER0_OVF_vect)
{
     96c:	1f 92       	push	r1
     96e:	0f 92       	push	r0
     970:	0f b6       	in	r0, 0x3f	; 63
     972:	0f 92       	push	r0
     974:	11 24       	eor	r1, r1
     976:	2f 93       	push	r18
     978:	8f 93       	push	r24
     97a:	9f 93       	push	r25
     97c:	df 93       	push	r29
     97e:	cf 93       	push	r28
     980:	cd b7       	in	r28, 0x3d	; 61
     982:	de b7       	in	r29, 0x3e	; 62
    counter++;
     984:	80 91 0b 01 	lds	r24, 0x010B
     988:	90 91 0c 01 	lds	r25, 0x010C
     98c:	01 96       	adiw	r24, 0x01	; 1
     98e:	90 93 0c 01 	sts	0x010C, r25
     992:	80 93 0b 01 	sts	0x010B, r24
    if(counter==499)
     996:	80 91 0b 01 	lds	r24, 0x010B
     99a:	90 91 0c 01 	lds	r25, 0x010C
     99e:	21 e0       	ldi	r18, 0x01	; 1
     9a0:	83 3f       	cpi	r24, 0xF3	; 243
     9a2:	92 07       	cpc	r25, r18
     9a4:	39 f4       	brne	.+14     	; 0x9b4 <__vector_16+0x48>
    {
        counter=0;
     9a6:	10 92 0c 01 	sts	0x010C, r1
     9aa:	10 92 0b 01 	sts	0x010B, r1
        timer_isr=1;
     9ae:	81 e0       	ldi	r24, 0x01	; 1
     9b0:	80 93 0a 01 	sts	0x010A, r24
    }
}
     9b4:	cf 91       	pop	r28
     9b6:	df 91       	pop	r29
     9b8:	9f 91       	pop	r25
     9ba:	8f 91       	pop	r24
     9bc:	2f 91       	pop	r18
     9be:	0f 90       	pop	r0
     9c0:	0f be       	out	0x3f, r0	; 63
     9c2:	0f 90       	pop	r0
     9c4:	1f 90       	pop	r1
     9c6:	18 95       	reti

000009c8 <PWM_init>:
* Description: Configures the mode of the pin as INPUT/PULLUP or OUTPUT
* Arguments: pin and mode
* Returns: None
******************************************************************************/
void PWM_init()
{
     9c8:	df 93       	push	r29
     9ca:	cf 93       	push	r28
     9cc:	cd b7       	in	r28, 0x3d	; 61
     9ce:	de b7       	in	r29, 0x3e	; 62
    GPIOConfig(PD6,OUTPUT);
     9d0:	86 e0       	ldi	r24, 0x06	; 6
     9d2:	61 e0       	ldi	r22, 0x01	; 1
     9d4:	0e 94 66 01 	call	0x2cc	; 0x2cc <GPIOConfig>
    TCCR0A|=((1<<WGM01)|(1<<WGM00));
     9d8:	a4 e4       	ldi	r26, 0x44	; 68
     9da:	b0 e0       	ldi	r27, 0x00	; 0
     9dc:	e4 e4       	ldi	r30, 0x44	; 68
     9de:	f0 e0       	ldi	r31, 0x00	; 0
     9e0:	80 81       	ld	r24, Z
     9e2:	83 60       	ori	r24, 0x03	; 3
     9e4:	8c 93       	st	X, r24
    TCCR0A|=(1<<COM0A1);
     9e6:	a4 e4       	ldi	r26, 0x44	; 68
     9e8:	b0 e0       	ldi	r27, 0x00	; 0
     9ea:	e4 e4       	ldi	r30, 0x44	; 68
     9ec:	f0 e0       	ldi	r31, 0x00	; 0
     9ee:	80 81       	ld	r24, Z
     9f0:	80 68       	ori	r24, 0x80	; 128
     9f2:	8c 93       	st	X, r24
    TCCR0A&=~(1<<COM0A0);
     9f4:	a4 e4       	ldi	r26, 0x44	; 68
     9f6:	b0 e0       	ldi	r27, 0x00	; 0
     9f8:	e4 e4       	ldi	r30, 0x44	; 68
     9fa:	f0 e0       	ldi	r31, 0x00	; 0
     9fc:	80 81       	ld	r24, Z
     9fe:	8f 7b       	andi	r24, 0xBF	; 191
     a00:	8c 93       	st	X, r24
    TCNT0=0x00;
     a02:	e6 e4       	ldi	r30, 0x46	; 70
     a04:	f0 e0       	ldi	r31, 0x00	; 0
     a06:	10 82       	st	Z, r1
    TCCR0B |= ((1 << CS00) | (1 << CS02));
     a08:	a5 e4       	ldi	r26, 0x45	; 69
     a0a:	b0 e0       	ldi	r27, 0x00	; 0
     a0c:	e5 e4       	ldi	r30, 0x45	; 69
     a0e:	f0 e0       	ldi	r31, 0x00	; 0
     a10:	80 81       	ld	r24, Z
     a12:	85 60       	ori	r24, 0x05	; 5
     a14:	8c 93       	st	X, r24
    TCCR0B &= ~(1 << CS01);
     a16:	a5 e4       	ldi	r26, 0x45	; 69
     a18:	b0 e0       	ldi	r27, 0x00	; 0
     a1a:	e5 e4       	ldi	r30, 0x45	; 69
     a1c:	f0 e0       	ldi	r31, 0x00	; 0
     a1e:	80 81       	ld	r24, Z
     a20:	8d 7f       	andi	r24, 0xFD	; 253
     a22:	8c 93       	st	X, r24
}
     a24:	cf 91       	pop	r28
     a26:	df 91       	pop	r29
     a28:	08 95       	ret

00000a2a <standby_mode>:

/******************************************************************************
*
******************************************************************************/
void standby_mode()
{
     a2a:	df 93       	push	r29
     a2c:	cf 93       	push	r28
     a2e:	cd b7       	in	r28, 0x3d	; 61
     a30:	de b7       	in	r29, 0x3e	; 62
    GPIOPinWrite(PD6,LOW);
     a32:	86 e0       	ldi	r24, 0x06	; 6
     a34:	60 e0       	ldi	r22, 0x00	; 0
     a36:	0e 94 af 02 	call	0x55e	; 0x55e <GPIOPinWrite>
    ADCSRA &=~ (1 << ADSC);
     a3a:	aa e7       	ldi	r26, 0x7A	; 122
     a3c:	b0 e0       	ldi	r27, 0x00	; 0
     a3e:	ea e7       	ldi	r30, 0x7A	; 122
     a40:	f0 e0       	ldi	r31, 0x00	; 0
     a42:	80 81       	ld	r24, Z
     a44:	8f 7b       	andi	r24, 0xBF	; 191
     a46:	8c 93       	st	X, r24
}
     a48:	cf 91       	pop	r28
     a4a:	df 91       	pop	r29
     a4c:	08 95       	ret

00000a4e <manual_mode>:

void manual_mode()
{
     a4e:	df 93       	push	r29
     a50:	cf 93       	push	r28
     a52:	cd b7       	in	r28, 0x3d	; 61
     a54:	de b7       	in	r29, 0x3e	; 62
    ADCSRA &=~ (1 << ADSC);
     a56:	aa e7       	ldi	r26, 0x7A	; 122
     a58:	b0 e0       	ldi	r27, 0x00	; 0
     a5a:	ea e7       	ldi	r30, 0x7A	; 122
     a5c:	f0 e0       	ldi	r31, 0x00	; 0
     a5e:	80 81       	ld	r24, Z
     a60:	8f 7b       	andi	r24, 0xBF	; 191
     a62:	8c 93       	st	X, r24
    OCR0A=127;
     a64:	e7 e4       	ldi	r30, 0x47	; 71
     a66:	f0 e0       	ldi	r31, 0x00	; 0
     a68:	8f e7       	ldi	r24, 0x7F	; 127
     a6a:	80 83       	st	Z, r24
}
     a6c:	cf 91       	pop	r28
     a6e:	df 91       	pop	r29
     a70:	08 95       	ret

00000a72 <auto_mode>:

void auto_mode()
{
     a72:	df 93       	push	r29
     a74:	cf 93       	push	r28
     a76:	00 d0       	rcall	.+0      	; 0xa78 <auto_mode+0x6>
     a78:	cd b7       	in	r28, 0x3d	; 61
     a7a:	de b7       	in	r29, 0x3e	; 62
    adc_init();
     a7c:	0e 94 53 00 	call	0xa6	; 0xa6 <adc_init>
    if(timer_isr==1)
     a80:	80 91 0a 01 	lds	r24, 0x010A
     a84:	81 30       	cpi	r24, 0x01	; 1
     a86:	09 f0       	breq	.+2      	; 0xa8a <auto_mode+0x18>
     a88:	4d c0       	rjmp	.+154    	; 0xb24 <auto_mode+0xb2>
    {
        timer_isr=0;
     a8a:	10 92 0a 01 	sts	0x010A, r1
        uint16_t x=adc_read();
     a8e:	0e 94 6b 00 	call	0xd6	; 0xd6 <adc_read>
     a92:	9a 83       	std	Y+2, r25	; 0x02
     a94:	89 83       	std	Y+1, r24	; 0x01
        if(x<=50&&x>0)
     a96:	89 81       	ldd	r24, Y+1	; 0x01
     a98:	9a 81       	ldd	r25, Y+2	; 0x02
     a9a:	83 33       	cpi	r24, 0x33	; 51
     a9c:	91 05       	cpc	r25, r1
     a9e:	40 f4       	brcc	.+16     	; 0xab0 <auto_mode+0x3e>
     aa0:	89 81       	ldd	r24, Y+1	; 0x01
     aa2:	9a 81       	ldd	r25, Y+2	; 0x02
     aa4:	00 97       	sbiw	r24, 0x00	; 0
     aa6:	21 f0       	breq	.+8      	; 0xab0 <auto_mode+0x3e>
        {
            OCR0A=0;
     aa8:	e7 e4       	ldi	r30, 0x47	; 71
     aaa:	f0 e0       	ldi	r31, 0x00	; 0
     aac:	10 82       	st	Z, r1
     aae:	3a c0       	rjmp	.+116    	; 0xb24 <auto_mode+0xb2>
        }
        else if(x>50&&x<=200)
     ab0:	89 81       	ldd	r24, Y+1	; 0x01
     ab2:	9a 81       	ldd	r25, Y+2	; 0x02
     ab4:	83 33       	cpi	r24, 0x33	; 51
     ab6:	91 05       	cpc	r25, r1
     ab8:	50 f0       	brcs	.+20     	; 0xace <auto_mode+0x5c>
     aba:	89 81       	ldd	r24, Y+1	; 0x01
     abc:	9a 81       	ldd	r25, Y+2	; 0x02
     abe:	89 3c       	cpi	r24, 0xC9	; 201
     ac0:	91 05       	cpc	r25, r1
     ac2:	28 f4       	brcc	.+10     	; 0xace <auto_mode+0x5c>
        {
            OCR0A=63;
     ac4:	e7 e4       	ldi	r30, 0x47	; 71
     ac6:	f0 e0       	ldi	r31, 0x00	; 0
     ac8:	8f e3       	ldi	r24, 0x3F	; 63
     aca:	80 83       	st	Z, r24
     acc:	2b c0       	rjmp	.+86     	; 0xb24 <auto_mode+0xb2>
        }
        else if(x>200&&x<=500)
     ace:	89 81       	ldd	r24, Y+1	; 0x01
     ad0:	9a 81       	ldd	r25, Y+2	; 0x02
     ad2:	89 3c       	cpi	r24, 0xC9	; 201
     ad4:	91 05       	cpc	r25, r1
     ad6:	58 f0       	brcs	.+22     	; 0xaee <auto_mode+0x7c>
     ad8:	89 81       	ldd	r24, Y+1	; 0x01
     ada:	9a 81       	ldd	r25, Y+2	; 0x02
     adc:	21 e0       	ldi	r18, 0x01	; 1
     ade:	85 3f       	cpi	r24, 0xF5	; 245
     ae0:	92 07       	cpc	r25, r18
     ae2:	28 f4       	brcc	.+10     	; 0xaee <auto_mode+0x7c>
        {
            OCR0A=127;
     ae4:	e7 e4       	ldi	r30, 0x47	; 71
     ae6:	f0 e0       	ldi	r31, 0x00	; 0
     ae8:	8f e7       	ldi	r24, 0x7F	; 127
     aea:	80 83       	st	Z, r24
     aec:	1b c0       	rjmp	.+54     	; 0xb24 <auto_mode+0xb2>
        }
        else if(x>500&&x<=1000)
     aee:	89 81       	ldd	r24, Y+1	; 0x01
     af0:	9a 81       	ldd	r25, Y+2	; 0x02
     af2:	21 e0       	ldi	r18, 0x01	; 1
     af4:	85 3f       	cpi	r24, 0xF5	; 245
     af6:	92 07       	cpc	r25, r18
     af8:	58 f0       	brcs	.+22     	; 0xb10 <auto_mode+0x9e>
     afa:	89 81       	ldd	r24, Y+1	; 0x01
     afc:	9a 81       	ldd	r25, Y+2	; 0x02
     afe:	23 e0       	ldi	r18, 0x03	; 3
     b00:	89 3e       	cpi	r24, 0xE9	; 233
     b02:	92 07       	cpc	r25, r18
     b04:	28 f4       	brcc	.+10     	; 0xb10 <auto_mode+0x9e>
        {
            OCR0A=190;
     b06:	e7 e4       	ldi	r30, 0x47	; 71
     b08:	f0 e0       	ldi	r31, 0x00	; 0
     b0a:	8e eb       	ldi	r24, 0xBE	; 190
     b0c:	80 83       	st	Z, r24
     b0e:	0a c0       	rjmp	.+20     	; 0xb24 <auto_mode+0xb2>
        }
        else if(x>1000)
     b10:	89 81       	ldd	r24, Y+1	; 0x01
     b12:	9a 81       	ldd	r25, Y+2	; 0x02
     b14:	23 e0       	ldi	r18, 0x03	; 3
     b16:	89 3e       	cpi	r24, 0xE9	; 233
     b18:	92 07       	cpc	r25, r18
     b1a:	20 f0       	brcs	.+8      	; 0xb24 <auto_mode+0xb2>
        {
            OCR0A=254;
     b1c:	e7 e4       	ldi	r30, 0x47	; 71
     b1e:	f0 e0       	ldi	r31, 0x00	; 0
     b20:	8e ef       	ldi	r24, 0xFE	; 254
     b22:	80 83       	st	Z, r24
        }
    }
}
     b24:	0f 90       	pop	r0
     b26:	0f 90       	pop	r0
     b28:	cf 91       	pop	r28
     b2a:	df 91       	pop	r29
     b2c:	08 95       	ret

00000b2e <app_mode>:

void app_mode()
{
     b2e:	df 93       	push	r29
     b30:	cf 93       	push	r28
     b32:	cd b7       	in	r28, 0x3d	; 61
     b34:	de b7       	in	r29, 0x3e	; 62
    if(isr_1==1&&isr_0==1)
     b36:	80 91 09 01 	lds	r24, 0x0109
     b3a:	81 30       	cpi	r24, 0x01	; 1
     b3c:	39 f4       	brne	.+14     	; 0xb4c <app_mode+0x1e>
     b3e:	80 91 08 01 	lds	r24, 0x0108
     b42:	81 30       	cpi	r24, 0x01	; 1
     b44:	19 f4       	brne	.+6      	; 0xb4c <app_mode+0x1e>
    {
        auto_mode();
     b46:	0e 94 39 05 	call	0xa72	; 0xa72 <auto_mode>
     b4a:	0d c0       	rjmp	.+26     	; 0xb66 <app_mode+0x38>
    }
    else if(isr_1==0&&isr_0==1)
     b4c:	80 91 09 01 	lds	r24, 0x0109
     b50:	88 23       	and	r24, r24
     b52:	39 f4       	brne	.+14     	; 0xb62 <app_mode+0x34>
     b54:	80 91 08 01 	lds	r24, 0x0108
     b58:	81 30       	cpi	r24, 0x01	; 1
     b5a:	19 f4       	brne	.+6      	; 0xb62 <app_mode+0x34>
    {
        manual_mode();
     b5c:	0e 94 27 05 	call	0xa4e	; 0xa4e <manual_mode>
     b60:	02 c0       	rjmp	.+4      	; 0xb66 <app_mode+0x38>
    }
    else
    {
        standby_mode();
     b62:	0e 94 15 05 	call	0xa2a	; 0xa2a <standby_mode>
    }
}
     b66:	cf 91       	pop	r28
     b68:	df 91       	pop	r29
     b6a:	08 95       	ret

00000b6c <__fixunssfsi>:
     b6c:	ef 92       	push	r14
     b6e:	ff 92       	push	r15
     b70:	0f 93       	push	r16
     b72:	1f 93       	push	r17
     b74:	7b 01       	movw	r14, r22
     b76:	8c 01       	movw	r16, r24
     b78:	20 e0       	ldi	r18, 0x00	; 0
     b7a:	30 e0       	ldi	r19, 0x00	; 0
     b7c:	40 e0       	ldi	r20, 0x00	; 0
     b7e:	5f e4       	ldi	r21, 0x4F	; 79
     b80:	0e 94 62 09 	call	0x12c4	; 0x12c4 <__gesf2>
     b84:	88 23       	and	r24, r24
     b86:	8c f0       	brlt	.+34     	; 0xbaa <__fixunssfsi+0x3e>
     b88:	c8 01       	movw	r24, r16
     b8a:	b7 01       	movw	r22, r14
     b8c:	20 e0       	ldi	r18, 0x00	; 0
     b8e:	30 e0       	ldi	r19, 0x00	; 0
     b90:	40 e0       	ldi	r20, 0x00	; 0
     b92:	5f e4       	ldi	r21, 0x4F	; 79
     b94:	0e 94 2e 07 	call	0xe5c	; 0xe5c <__subsf3>
     b98:	0e 94 c2 09 	call	0x1384	; 0x1384 <__fixsfsi>
     b9c:	9b 01       	movw	r18, r22
     b9e:	ac 01       	movw	r20, r24
     ba0:	20 50       	subi	r18, 0x00	; 0
     ba2:	30 40       	sbci	r19, 0x00	; 0
     ba4:	40 40       	sbci	r20, 0x00	; 0
     ba6:	50 48       	sbci	r21, 0x80	; 128
     ba8:	06 c0       	rjmp	.+12     	; 0xbb6 <__fixunssfsi+0x4a>
     baa:	c8 01       	movw	r24, r16
     bac:	b7 01       	movw	r22, r14
     bae:	0e 94 c2 09 	call	0x1384	; 0x1384 <__fixsfsi>
     bb2:	9b 01       	movw	r18, r22
     bb4:	ac 01       	movw	r20, r24
     bb6:	b9 01       	movw	r22, r18
     bb8:	ca 01       	movw	r24, r20
     bba:	1f 91       	pop	r17
     bbc:	0f 91       	pop	r16
     bbe:	ff 90       	pop	r15
     bc0:	ef 90       	pop	r14
     bc2:	08 95       	ret

00000bc4 <_fpadd_parts>:
     bc4:	a0 e0       	ldi	r26, 0x00	; 0
     bc6:	b0 e0       	ldi	r27, 0x00	; 0
     bc8:	e8 ee       	ldi	r30, 0xE8	; 232
     bca:	f5 e0       	ldi	r31, 0x05	; 5
     bcc:	0c 94 bc 0b 	jmp	0x1778	; 0x1778 <__prologue_saves__>
     bd0:	dc 01       	movw	r26, r24
     bd2:	2b 01       	movw	r4, r22
     bd4:	fa 01       	movw	r30, r20
     bd6:	9c 91       	ld	r25, X
     bd8:	92 30       	cpi	r25, 0x02	; 2
     bda:	08 f4       	brcc	.+2      	; 0xbde <_fpadd_parts+0x1a>
     bdc:	39 c1       	rjmp	.+626    	; 0xe50 <_fpadd_parts+0x28c>
     bde:	eb 01       	movw	r28, r22
     be0:	88 81       	ld	r24, Y
     be2:	82 30       	cpi	r24, 0x02	; 2
     be4:	08 f4       	brcc	.+2      	; 0xbe8 <_fpadd_parts+0x24>
     be6:	33 c1       	rjmp	.+614    	; 0xe4e <_fpadd_parts+0x28a>
     be8:	94 30       	cpi	r25, 0x04	; 4
     bea:	69 f4       	brne	.+26     	; 0xc06 <_fpadd_parts+0x42>
     bec:	84 30       	cpi	r24, 0x04	; 4
     bee:	09 f0       	breq	.+2      	; 0xbf2 <_fpadd_parts+0x2e>
     bf0:	2f c1       	rjmp	.+606    	; 0xe50 <_fpadd_parts+0x28c>
     bf2:	11 96       	adiw	r26, 0x01	; 1
     bf4:	9c 91       	ld	r25, X
     bf6:	11 97       	sbiw	r26, 0x01	; 1
     bf8:	89 81       	ldd	r24, Y+1	; 0x01
     bfa:	98 17       	cp	r25, r24
     bfc:	09 f4       	brne	.+2      	; 0xc00 <_fpadd_parts+0x3c>
     bfe:	28 c1       	rjmp	.+592    	; 0xe50 <_fpadd_parts+0x28c>
     c00:	a0 e0       	ldi	r26, 0x00	; 0
     c02:	b1 e0       	ldi	r27, 0x01	; 1
     c04:	25 c1       	rjmp	.+586    	; 0xe50 <_fpadd_parts+0x28c>
     c06:	84 30       	cpi	r24, 0x04	; 4
     c08:	09 f4       	brne	.+2      	; 0xc0c <_fpadd_parts+0x48>
     c0a:	21 c1       	rjmp	.+578    	; 0xe4e <_fpadd_parts+0x28a>
     c0c:	82 30       	cpi	r24, 0x02	; 2
     c0e:	a9 f4       	brne	.+42     	; 0xc3a <_fpadd_parts+0x76>
     c10:	92 30       	cpi	r25, 0x02	; 2
     c12:	09 f0       	breq	.+2      	; 0xc16 <_fpadd_parts+0x52>
     c14:	1d c1       	rjmp	.+570    	; 0xe50 <_fpadd_parts+0x28c>
     c16:	9a 01       	movw	r18, r20
     c18:	ad 01       	movw	r20, r26
     c1a:	88 e0       	ldi	r24, 0x08	; 8
     c1c:	ea 01       	movw	r28, r20
     c1e:	09 90       	ld	r0, Y+
     c20:	ae 01       	movw	r20, r28
     c22:	e9 01       	movw	r28, r18
     c24:	09 92       	st	Y+, r0
     c26:	9e 01       	movw	r18, r28
     c28:	81 50       	subi	r24, 0x01	; 1
     c2a:	c1 f7       	brne	.-16     	; 0xc1c <_fpadd_parts+0x58>
     c2c:	e2 01       	movw	r28, r4
     c2e:	89 81       	ldd	r24, Y+1	; 0x01
     c30:	11 96       	adiw	r26, 0x01	; 1
     c32:	9c 91       	ld	r25, X
     c34:	89 23       	and	r24, r25
     c36:	81 83       	std	Z+1, r24	; 0x01
     c38:	08 c1       	rjmp	.+528    	; 0xe4a <_fpadd_parts+0x286>
     c3a:	92 30       	cpi	r25, 0x02	; 2
     c3c:	09 f4       	brne	.+2      	; 0xc40 <_fpadd_parts+0x7c>
     c3e:	07 c1       	rjmp	.+526    	; 0xe4e <_fpadd_parts+0x28a>
     c40:	12 96       	adiw	r26, 0x02	; 2
     c42:	2d 90       	ld	r2, X+
     c44:	3c 90       	ld	r3, X
     c46:	13 97       	sbiw	r26, 0x03	; 3
     c48:	eb 01       	movw	r28, r22
     c4a:	8a 81       	ldd	r24, Y+2	; 0x02
     c4c:	9b 81       	ldd	r25, Y+3	; 0x03
     c4e:	14 96       	adiw	r26, 0x04	; 4
     c50:	ad 90       	ld	r10, X+
     c52:	bd 90       	ld	r11, X+
     c54:	cd 90       	ld	r12, X+
     c56:	dc 90       	ld	r13, X
     c58:	17 97       	sbiw	r26, 0x07	; 7
     c5a:	ec 80       	ldd	r14, Y+4	; 0x04
     c5c:	fd 80       	ldd	r15, Y+5	; 0x05
     c5e:	0e 81       	ldd	r16, Y+6	; 0x06
     c60:	1f 81       	ldd	r17, Y+7	; 0x07
     c62:	91 01       	movw	r18, r2
     c64:	28 1b       	sub	r18, r24
     c66:	39 0b       	sbc	r19, r25
     c68:	b9 01       	movw	r22, r18
     c6a:	37 ff       	sbrs	r19, 7
     c6c:	04 c0       	rjmp	.+8      	; 0xc76 <_fpadd_parts+0xb2>
     c6e:	66 27       	eor	r22, r22
     c70:	77 27       	eor	r23, r23
     c72:	62 1b       	sub	r22, r18
     c74:	73 0b       	sbc	r23, r19
     c76:	60 32       	cpi	r22, 0x20	; 32
     c78:	71 05       	cpc	r23, r1
     c7a:	0c f0       	brlt	.+2      	; 0xc7e <_fpadd_parts+0xba>
     c7c:	61 c0       	rjmp	.+194    	; 0xd40 <_fpadd_parts+0x17c>
     c7e:	12 16       	cp	r1, r18
     c80:	13 06       	cpc	r1, r19
     c82:	6c f5       	brge	.+90     	; 0xcde <_fpadd_parts+0x11a>
     c84:	37 01       	movw	r6, r14
     c86:	48 01       	movw	r8, r16
     c88:	06 2e       	mov	r0, r22
     c8a:	04 c0       	rjmp	.+8      	; 0xc94 <_fpadd_parts+0xd0>
     c8c:	96 94       	lsr	r9
     c8e:	87 94       	ror	r8
     c90:	77 94       	ror	r7
     c92:	67 94       	ror	r6
     c94:	0a 94       	dec	r0
     c96:	d2 f7       	brpl	.-12     	; 0xc8c <_fpadd_parts+0xc8>
     c98:	21 e0       	ldi	r18, 0x01	; 1
     c9a:	30 e0       	ldi	r19, 0x00	; 0
     c9c:	40 e0       	ldi	r20, 0x00	; 0
     c9e:	50 e0       	ldi	r21, 0x00	; 0
     ca0:	04 c0       	rjmp	.+8      	; 0xcaa <_fpadd_parts+0xe6>
     ca2:	22 0f       	add	r18, r18
     ca4:	33 1f       	adc	r19, r19
     ca6:	44 1f       	adc	r20, r20
     ca8:	55 1f       	adc	r21, r21
     caa:	6a 95       	dec	r22
     cac:	d2 f7       	brpl	.-12     	; 0xca2 <_fpadd_parts+0xde>
     cae:	21 50       	subi	r18, 0x01	; 1
     cb0:	30 40       	sbci	r19, 0x00	; 0
     cb2:	40 40       	sbci	r20, 0x00	; 0
     cb4:	50 40       	sbci	r21, 0x00	; 0
     cb6:	2e 21       	and	r18, r14
     cb8:	3f 21       	and	r19, r15
     cba:	40 23       	and	r20, r16
     cbc:	51 23       	and	r21, r17
     cbe:	21 15       	cp	r18, r1
     cc0:	31 05       	cpc	r19, r1
     cc2:	41 05       	cpc	r20, r1
     cc4:	51 05       	cpc	r21, r1
     cc6:	21 f0       	breq	.+8      	; 0xcd0 <_fpadd_parts+0x10c>
     cc8:	21 e0       	ldi	r18, 0x01	; 1
     cca:	30 e0       	ldi	r19, 0x00	; 0
     ccc:	40 e0       	ldi	r20, 0x00	; 0
     cce:	50 e0       	ldi	r21, 0x00	; 0
     cd0:	79 01       	movw	r14, r18
     cd2:	8a 01       	movw	r16, r20
     cd4:	e6 28       	or	r14, r6
     cd6:	f7 28       	or	r15, r7
     cd8:	08 29       	or	r16, r8
     cda:	19 29       	or	r17, r9
     cdc:	3c c0       	rjmp	.+120    	; 0xd56 <_fpadd_parts+0x192>
     cde:	23 2b       	or	r18, r19
     ce0:	d1 f1       	breq	.+116    	; 0xd56 <_fpadd_parts+0x192>
     ce2:	26 0e       	add	r2, r22
     ce4:	37 1e       	adc	r3, r23
     ce6:	35 01       	movw	r6, r10
     ce8:	46 01       	movw	r8, r12
     cea:	06 2e       	mov	r0, r22
     cec:	04 c0       	rjmp	.+8      	; 0xcf6 <_fpadd_parts+0x132>
     cee:	96 94       	lsr	r9
     cf0:	87 94       	ror	r8
     cf2:	77 94       	ror	r7
     cf4:	67 94       	ror	r6
     cf6:	0a 94       	dec	r0
     cf8:	d2 f7       	brpl	.-12     	; 0xcee <_fpadd_parts+0x12a>
     cfa:	21 e0       	ldi	r18, 0x01	; 1
     cfc:	30 e0       	ldi	r19, 0x00	; 0
     cfe:	40 e0       	ldi	r20, 0x00	; 0
     d00:	50 e0       	ldi	r21, 0x00	; 0
     d02:	04 c0       	rjmp	.+8      	; 0xd0c <_fpadd_parts+0x148>
     d04:	22 0f       	add	r18, r18
     d06:	33 1f       	adc	r19, r19
     d08:	44 1f       	adc	r20, r20
     d0a:	55 1f       	adc	r21, r21
     d0c:	6a 95       	dec	r22
     d0e:	d2 f7       	brpl	.-12     	; 0xd04 <_fpadd_parts+0x140>
     d10:	21 50       	subi	r18, 0x01	; 1
     d12:	30 40       	sbci	r19, 0x00	; 0
     d14:	40 40       	sbci	r20, 0x00	; 0
     d16:	50 40       	sbci	r21, 0x00	; 0
     d18:	2a 21       	and	r18, r10
     d1a:	3b 21       	and	r19, r11
     d1c:	4c 21       	and	r20, r12
     d1e:	5d 21       	and	r21, r13
     d20:	21 15       	cp	r18, r1
     d22:	31 05       	cpc	r19, r1
     d24:	41 05       	cpc	r20, r1
     d26:	51 05       	cpc	r21, r1
     d28:	21 f0       	breq	.+8      	; 0xd32 <_fpadd_parts+0x16e>
     d2a:	21 e0       	ldi	r18, 0x01	; 1
     d2c:	30 e0       	ldi	r19, 0x00	; 0
     d2e:	40 e0       	ldi	r20, 0x00	; 0
     d30:	50 e0       	ldi	r21, 0x00	; 0
     d32:	59 01       	movw	r10, r18
     d34:	6a 01       	movw	r12, r20
     d36:	a6 28       	or	r10, r6
     d38:	b7 28       	or	r11, r7
     d3a:	c8 28       	or	r12, r8
     d3c:	d9 28       	or	r13, r9
     d3e:	0b c0       	rjmp	.+22     	; 0xd56 <_fpadd_parts+0x192>
     d40:	82 15       	cp	r24, r2
     d42:	93 05       	cpc	r25, r3
     d44:	2c f0       	brlt	.+10     	; 0xd50 <_fpadd_parts+0x18c>
     d46:	1c 01       	movw	r2, r24
     d48:	aa 24       	eor	r10, r10
     d4a:	bb 24       	eor	r11, r11
     d4c:	65 01       	movw	r12, r10
     d4e:	03 c0       	rjmp	.+6      	; 0xd56 <_fpadd_parts+0x192>
     d50:	ee 24       	eor	r14, r14
     d52:	ff 24       	eor	r15, r15
     d54:	87 01       	movw	r16, r14
     d56:	11 96       	adiw	r26, 0x01	; 1
     d58:	9c 91       	ld	r25, X
     d5a:	d2 01       	movw	r26, r4
     d5c:	11 96       	adiw	r26, 0x01	; 1
     d5e:	8c 91       	ld	r24, X
     d60:	98 17       	cp	r25, r24
     d62:	09 f4       	brne	.+2      	; 0xd66 <_fpadd_parts+0x1a2>
     d64:	45 c0       	rjmp	.+138    	; 0xdf0 <_fpadd_parts+0x22c>
     d66:	99 23       	and	r25, r25
     d68:	39 f0       	breq	.+14     	; 0xd78 <_fpadd_parts+0x1b4>
     d6a:	a8 01       	movw	r20, r16
     d6c:	97 01       	movw	r18, r14
     d6e:	2a 19       	sub	r18, r10
     d70:	3b 09       	sbc	r19, r11
     d72:	4c 09       	sbc	r20, r12
     d74:	5d 09       	sbc	r21, r13
     d76:	06 c0       	rjmp	.+12     	; 0xd84 <_fpadd_parts+0x1c0>
     d78:	a6 01       	movw	r20, r12
     d7a:	95 01       	movw	r18, r10
     d7c:	2e 19       	sub	r18, r14
     d7e:	3f 09       	sbc	r19, r15
     d80:	40 0b       	sbc	r20, r16
     d82:	51 0b       	sbc	r21, r17
     d84:	57 fd       	sbrc	r21, 7
     d86:	08 c0       	rjmp	.+16     	; 0xd98 <_fpadd_parts+0x1d4>
     d88:	11 82       	std	Z+1, r1	; 0x01
     d8a:	33 82       	std	Z+3, r3	; 0x03
     d8c:	22 82       	std	Z+2, r2	; 0x02
     d8e:	24 83       	std	Z+4, r18	; 0x04
     d90:	35 83       	std	Z+5, r19	; 0x05
     d92:	46 83       	std	Z+6, r20	; 0x06
     d94:	57 83       	std	Z+7, r21	; 0x07
     d96:	1d c0       	rjmp	.+58     	; 0xdd2 <_fpadd_parts+0x20e>
     d98:	81 e0       	ldi	r24, 0x01	; 1
     d9a:	81 83       	std	Z+1, r24	; 0x01
     d9c:	33 82       	std	Z+3, r3	; 0x03
     d9e:	22 82       	std	Z+2, r2	; 0x02
     da0:	88 27       	eor	r24, r24
     da2:	99 27       	eor	r25, r25
     da4:	dc 01       	movw	r26, r24
     da6:	82 1b       	sub	r24, r18
     da8:	93 0b       	sbc	r25, r19
     daa:	a4 0b       	sbc	r26, r20
     dac:	b5 0b       	sbc	r27, r21
     dae:	84 83       	std	Z+4, r24	; 0x04
     db0:	95 83       	std	Z+5, r25	; 0x05
     db2:	a6 83       	std	Z+6, r26	; 0x06
     db4:	b7 83       	std	Z+7, r27	; 0x07
     db6:	0d c0       	rjmp	.+26     	; 0xdd2 <_fpadd_parts+0x20e>
     db8:	22 0f       	add	r18, r18
     dba:	33 1f       	adc	r19, r19
     dbc:	44 1f       	adc	r20, r20
     dbe:	55 1f       	adc	r21, r21
     dc0:	24 83       	std	Z+4, r18	; 0x04
     dc2:	35 83       	std	Z+5, r19	; 0x05
     dc4:	46 83       	std	Z+6, r20	; 0x06
     dc6:	57 83       	std	Z+7, r21	; 0x07
     dc8:	82 81       	ldd	r24, Z+2	; 0x02
     dca:	93 81       	ldd	r25, Z+3	; 0x03
     dcc:	01 97       	sbiw	r24, 0x01	; 1
     dce:	93 83       	std	Z+3, r25	; 0x03
     dd0:	82 83       	std	Z+2, r24	; 0x02
     dd2:	24 81       	ldd	r18, Z+4	; 0x04
     dd4:	35 81       	ldd	r19, Z+5	; 0x05
     dd6:	46 81       	ldd	r20, Z+6	; 0x06
     dd8:	57 81       	ldd	r21, Z+7	; 0x07
     dda:	da 01       	movw	r26, r20
     ddc:	c9 01       	movw	r24, r18
     dde:	01 97       	sbiw	r24, 0x01	; 1
     de0:	a1 09       	sbc	r26, r1
     de2:	b1 09       	sbc	r27, r1
     de4:	8f 5f       	subi	r24, 0xFF	; 255
     de6:	9f 4f       	sbci	r25, 0xFF	; 255
     de8:	af 4f       	sbci	r26, 0xFF	; 255
     dea:	bf 43       	sbci	r27, 0x3F	; 63
     dec:	28 f3       	brcs	.-54     	; 0xdb8 <_fpadd_parts+0x1f4>
     dee:	0b c0       	rjmp	.+22     	; 0xe06 <_fpadd_parts+0x242>
     df0:	91 83       	std	Z+1, r25	; 0x01
     df2:	33 82       	std	Z+3, r3	; 0x03
     df4:	22 82       	std	Z+2, r2	; 0x02
     df6:	ea 0c       	add	r14, r10
     df8:	fb 1c       	adc	r15, r11
     dfa:	0c 1d       	adc	r16, r12
     dfc:	1d 1d       	adc	r17, r13
     dfe:	e4 82       	std	Z+4, r14	; 0x04
     e00:	f5 82       	std	Z+5, r15	; 0x05
     e02:	06 83       	std	Z+6, r16	; 0x06
     e04:	17 83       	std	Z+7, r17	; 0x07
     e06:	83 e0       	ldi	r24, 0x03	; 3
     e08:	80 83       	st	Z, r24
     e0a:	24 81       	ldd	r18, Z+4	; 0x04
     e0c:	35 81       	ldd	r19, Z+5	; 0x05
     e0e:	46 81       	ldd	r20, Z+6	; 0x06
     e10:	57 81       	ldd	r21, Z+7	; 0x07
     e12:	57 ff       	sbrs	r21, 7
     e14:	1a c0       	rjmp	.+52     	; 0xe4a <_fpadd_parts+0x286>
     e16:	c9 01       	movw	r24, r18
     e18:	aa 27       	eor	r26, r26
     e1a:	97 fd       	sbrc	r25, 7
     e1c:	a0 95       	com	r26
     e1e:	ba 2f       	mov	r27, r26
     e20:	81 70       	andi	r24, 0x01	; 1
     e22:	90 70       	andi	r25, 0x00	; 0
     e24:	a0 70       	andi	r26, 0x00	; 0
     e26:	b0 70       	andi	r27, 0x00	; 0
     e28:	56 95       	lsr	r21
     e2a:	47 95       	ror	r20
     e2c:	37 95       	ror	r19
     e2e:	27 95       	ror	r18
     e30:	82 2b       	or	r24, r18
     e32:	93 2b       	or	r25, r19
     e34:	a4 2b       	or	r26, r20
     e36:	b5 2b       	or	r27, r21
     e38:	84 83       	std	Z+4, r24	; 0x04
     e3a:	95 83       	std	Z+5, r25	; 0x05
     e3c:	a6 83       	std	Z+6, r26	; 0x06
     e3e:	b7 83       	std	Z+7, r27	; 0x07
     e40:	82 81       	ldd	r24, Z+2	; 0x02
     e42:	93 81       	ldd	r25, Z+3	; 0x03
     e44:	01 96       	adiw	r24, 0x01	; 1
     e46:	93 83       	std	Z+3, r25	; 0x03
     e48:	82 83       	std	Z+2, r24	; 0x02
     e4a:	df 01       	movw	r26, r30
     e4c:	01 c0       	rjmp	.+2      	; 0xe50 <_fpadd_parts+0x28c>
     e4e:	d2 01       	movw	r26, r4
     e50:	cd 01       	movw	r24, r26
     e52:	cd b7       	in	r28, 0x3d	; 61
     e54:	de b7       	in	r29, 0x3e	; 62
     e56:	e2 e1       	ldi	r30, 0x12	; 18
     e58:	0c 94 d8 0b 	jmp	0x17b0	; 0x17b0 <__epilogue_restores__>

00000e5c <__subsf3>:
     e5c:	a0 e2       	ldi	r26, 0x20	; 32
     e5e:	b0 e0       	ldi	r27, 0x00	; 0
     e60:	e4 e3       	ldi	r30, 0x34	; 52
     e62:	f7 e0       	ldi	r31, 0x07	; 7
     e64:	0c 94 c8 0b 	jmp	0x1790	; 0x1790 <__prologue_saves__+0x18>
     e68:	69 83       	std	Y+1, r22	; 0x01
     e6a:	7a 83       	std	Y+2, r23	; 0x02
     e6c:	8b 83       	std	Y+3, r24	; 0x03
     e6e:	9c 83       	std	Y+4, r25	; 0x04
     e70:	2d 83       	std	Y+5, r18	; 0x05
     e72:	3e 83       	std	Y+6, r19	; 0x06
     e74:	4f 83       	std	Y+7, r20	; 0x07
     e76:	58 87       	std	Y+8, r21	; 0x08
     e78:	e9 e0       	ldi	r30, 0x09	; 9
     e7a:	ee 2e       	mov	r14, r30
     e7c:	f1 2c       	mov	r15, r1
     e7e:	ec 0e       	add	r14, r28
     e80:	fd 1e       	adc	r15, r29
     e82:	ce 01       	movw	r24, r28
     e84:	01 96       	adiw	r24, 0x01	; 1
     e86:	b7 01       	movw	r22, r14
     e88:	0e 94 eb 0a 	call	0x15d6	; 0x15d6 <__unpack_f>
     e8c:	8e 01       	movw	r16, r28
     e8e:	0f 5e       	subi	r16, 0xEF	; 239
     e90:	1f 4f       	sbci	r17, 0xFF	; 255
     e92:	ce 01       	movw	r24, r28
     e94:	05 96       	adiw	r24, 0x05	; 5
     e96:	b8 01       	movw	r22, r16
     e98:	0e 94 eb 0a 	call	0x15d6	; 0x15d6 <__unpack_f>
     e9c:	8a 89       	ldd	r24, Y+18	; 0x12
     e9e:	91 e0       	ldi	r25, 0x01	; 1
     ea0:	89 27       	eor	r24, r25
     ea2:	8a 8b       	std	Y+18, r24	; 0x12
     ea4:	c7 01       	movw	r24, r14
     ea6:	b8 01       	movw	r22, r16
     ea8:	ae 01       	movw	r20, r28
     eaa:	47 5e       	subi	r20, 0xE7	; 231
     eac:	5f 4f       	sbci	r21, 0xFF	; 255
     eae:	0e 94 e2 05 	call	0xbc4	; 0xbc4 <_fpadd_parts>
     eb2:	0e 94 16 0a 	call	0x142c	; 0x142c <__pack_f>
     eb6:	a0 96       	adiw	r28, 0x20	; 32
     eb8:	e6 e0       	ldi	r30, 0x06	; 6
     eba:	0c 94 e4 0b 	jmp	0x17c8	; 0x17c8 <__epilogue_restores__+0x18>

00000ebe <__addsf3>:
     ebe:	a0 e2       	ldi	r26, 0x20	; 32
     ec0:	b0 e0       	ldi	r27, 0x00	; 0
     ec2:	e5 e6       	ldi	r30, 0x65	; 101
     ec4:	f7 e0       	ldi	r31, 0x07	; 7
     ec6:	0c 94 c8 0b 	jmp	0x1790	; 0x1790 <__prologue_saves__+0x18>
     eca:	69 83       	std	Y+1, r22	; 0x01
     ecc:	7a 83       	std	Y+2, r23	; 0x02
     ece:	8b 83       	std	Y+3, r24	; 0x03
     ed0:	9c 83       	std	Y+4, r25	; 0x04
     ed2:	2d 83       	std	Y+5, r18	; 0x05
     ed4:	3e 83       	std	Y+6, r19	; 0x06
     ed6:	4f 83       	std	Y+7, r20	; 0x07
     ed8:	58 87       	std	Y+8, r21	; 0x08
     eda:	f9 e0       	ldi	r31, 0x09	; 9
     edc:	ef 2e       	mov	r14, r31
     ede:	f1 2c       	mov	r15, r1
     ee0:	ec 0e       	add	r14, r28
     ee2:	fd 1e       	adc	r15, r29
     ee4:	ce 01       	movw	r24, r28
     ee6:	01 96       	adiw	r24, 0x01	; 1
     ee8:	b7 01       	movw	r22, r14
     eea:	0e 94 eb 0a 	call	0x15d6	; 0x15d6 <__unpack_f>
     eee:	8e 01       	movw	r16, r28
     ef0:	0f 5e       	subi	r16, 0xEF	; 239
     ef2:	1f 4f       	sbci	r17, 0xFF	; 255
     ef4:	ce 01       	movw	r24, r28
     ef6:	05 96       	adiw	r24, 0x05	; 5
     ef8:	b8 01       	movw	r22, r16
     efa:	0e 94 eb 0a 	call	0x15d6	; 0x15d6 <__unpack_f>
     efe:	c7 01       	movw	r24, r14
     f00:	b8 01       	movw	r22, r16
     f02:	ae 01       	movw	r20, r28
     f04:	47 5e       	subi	r20, 0xE7	; 231
     f06:	5f 4f       	sbci	r21, 0xFF	; 255
     f08:	0e 94 e2 05 	call	0xbc4	; 0xbc4 <_fpadd_parts>
     f0c:	0e 94 16 0a 	call	0x142c	; 0x142c <__pack_f>
     f10:	a0 96       	adiw	r28, 0x20	; 32
     f12:	e6 e0       	ldi	r30, 0x06	; 6
     f14:	0c 94 e4 0b 	jmp	0x17c8	; 0x17c8 <__epilogue_restores__+0x18>

00000f18 <__mulsf3>:
     f18:	a0 e2       	ldi	r26, 0x20	; 32
     f1a:	b0 e0       	ldi	r27, 0x00	; 0
     f1c:	e2 e9       	ldi	r30, 0x92	; 146
     f1e:	f7 e0       	ldi	r31, 0x07	; 7
     f20:	0c 94 bc 0b 	jmp	0x1778	; 0x1778 <__prologue_saves__>
     f24:	69 83       	std	Y+1, r22	; 0x01
     f26:	7a 83       	std	Y+2, r23	; 0x02
     f28:	8b 83       	std	Y+3, r24	; 0x03
     f2a:	9c 83       	std	Y+4, r25	; 0x04
     f2c:	2d 83       	std	Y+5, r18	; 0x05
     f2e:	3e 83       	std	Y+6, r19	; 0x06
     f30:	4f 83       	std	Y+7, r20	; 0x07
     f32:	58 87       	std	Y+8, r21	; 0x08
     f34:	ce 01       	movw	r24, r28
     f36:	01 96       	adiw	r24, 0x01	; 1
     f38:	be 01       	movw	r22, r28
     f3a:	67 5f       	subi	r22, 0xF7	; 247
     f3c:	7f 4f       	sbci	r23, 0xFF	; 255
     f3e:	0e 94 eb 0a 	call	0x15d6	; 0x15d6 <__unpack_f>
     f42:	ce 01       	movw	r24, r28
     f44:	05 96       	adiw	r24, 0x05	; 5
     f46:	be 01       	movw	r22, r28
     f48:	6f 5e       	subi	r22, 0xEF	; 239
     f4a:	7f 4f       	sbci	r23, 0xFF	; 255
     f4c:	0e 94 eb 0a 	call	0x15d6	; 0x15d6 <__unpack_f>
     f50:	99 85       	ldd	r25, Y+9	; 0x09
     f52:	92 30       	cpi	r25, 0x02	; 2
     f54:	88 f0       	brcs	.+34     	; 0xf78 <__mulsf3+0x60>
     f56:	89 89       	ldd	r24, Y+17	; 0x11
     f58:	82 30       	cpi	r24, 0x02	; 2
     f5a:	c8 f0       	brcs	.+50     	; 0xf8e <__mulsf3+0x76>
     f5c:	94 30       	cpi	r25, 0x04	; 4
     f5e:	19 f4       	brne	.+6      	; 0xf66 <__mulsf3+0x4e>
     f60:	82 30       	cpi	r24, 0x02	; 2
     f62:	51 f4       	brne	.+20     	; 0xf78 <__mulsf3+0x60>
     f64:	04 c0       	rjmp	.+8      	; 0xf6e <__mulsf3+0x56>
     f66:	84 30       	cpi	r24, 0x04	; 4
     f68:	29 f4       	brne	.+10     	; 0xf74 <__mulsf3+0x5c>
     f6a:	92 30       	cpi	r25, 0x02	; 2
     f6c:	81 f4       	brne	.+32     	; 0xf8e <__mulsf3+0x76>
     f6e:	80 e0       	ldi	r24, 0x00	; 0
     f70:	91 e0       	ldi	r25, 0x01	; 1
     f72:	c6 c0       	rjmp	.+396    	; 0x1100 <__mulsf3+0x1e8>
     f74:	92 30       	cpi	r25, 0x02	; 2
     f76:	49 f4       	brne	.+18     	; 0xf8a <__mulsf3+0x72>
     f78:	20 e0       	ldi	r18, 0x00	; 0
     f7a:	9a 85       	ldd	r25, Y+10	; 0x0a
     f7c:	8a 89       	ldd	r24, Y+18	; 0x12
     f7e:	98 13       	cpse	r25, r24
     f80:	21 e0       	ldi	r18, 0x01	; 1
     f82:	2a 87       	std	Y+10, r18	; 0x0a
     f84:	ce 01       	movw	r24, r28
     f86:	09 96       	adiw	r24, 0x09	; 9
     f88:	bb c0       	rjmp	.+374    	; 0x1100 <__mulsf3+0x1e8>
     f8a:	82 30       	cpi	r24, 0x02	; 2
     f8c:	49 f4       	brne	.+18     	; 0xfa0 <__mulsf3+0x88>
     f8e:	20 e0       	ldi	r18, 0x00	; 0
     f90:	9a 85       	ldd	r25, Y+10	; 0x0a
     f92:	8a 89       	ldd	r24, Y+18	; 0x12
     f94:	98 13       	cpse	r25, r24
     f96:	21 e0       	ldi	r18, 0x01	; 1
     f98:	2a 8b       	std	Y+18, r18	; 0x12
     f9a:	ce 01       	movw	r24, r28
     f9c:	41 96       	adiw	r24, 0x11	; 17
     f9e:	b0 c0       	rjmp	.+352    	; 0x1100 <__mulsf3+0x1e8>
     fa0:	2d 84       	ldd	r2, Y+13	; 0x0d
     fa2:	3e 84       	ldd	r3, Y+14	; 0x0e
     fa4:	4f 84       	ldd	r4, Y+15	; 0x0f
     fa6:	58 88       	ldd	r5, Y+16	; 0x10
     fa8:	6d 88       	ldd	r6, Y+21	; 0x15
     faa:	7e 88       	ldd	r7, Y+22	; 0x16
     fac:	8f 88       	ldd	r8, Y+23	; 0x17
     fae:	98 8c       	ldd	r9, Y+24	; 0x18
     fb0:	ee 24       	eor	r14, r14
     fb2:	ff 24       	eor	r15, r15
     fb4:	87 01       	movw	r16, r14
     fb6:	aa 24       	eor	r10, r10
     fb8:	bb 24       	eor	r11, r11
     fba:	65 01       	movw	r12, r10
     fbc:	40 e0       	ldi	r20, 0x00	; 0
     fbe:	50 e0       	ldi	r21, 0x00	; 0
     fc0:	60 e0       	ldi	r22, 0x00	; 0
     fc2:	70 e0       	ldi	r23, 0x00	; 0
     fc4:	e0 e0       	ldi	r30, 0x00	; 0
     fc6:	f0 e0       	ldi	r31, 0x00	; 0
     fc8:	c1 01       	movw	r24, r2
     fca:	81 70       	andi	r24, 0x01	; 1
     fcc:	90 70       	andi	r25, 0x00	; 0
     fce:	89 2b       	or	r24, r25
     fd0:	e9 f0       	breq	.+58     	; 0x100c <__mulsf3+0xf4>
     fd2:	e6 0c       	add	r14, r6
     fd4:	f7 1c       	adc	r15, r7
     fd6:	08 1d       	adc	r16, r8
     fd8:	19 1d       	adc	r17, r9
     fda:	9a 01       	movw	r18, r20
     fdc:	ab 01       	movw	r20, r22
     fde:	2a 0d       	add	r18, r10
     fe0:	3b 1d       	adc	r19, r11
     fe2:	4c 1d       	adc	r20, r12
     fe4:	5d 1d       	adc	r21, r13
     fe6:	80 e0       	ldi	r24, 0x00	; 0
     fe8:	90 e0       	ldi	r25, 0x00	; 0
     fea:	a0 e0       	ldi	r26, 0x00	; 0
     fec:	b0 e0       	ldi	r27, 0x00	; 0
     fee:	e6 14       	cp	r14, r6
     ff0:	f7 04       	cpc	r15, r7
     ff2:	08 05       	cpc	r16, r8
     ff4:	19 05       	cpc	r17, r9
     ff6:	20 f4       	brcc	.+8      	; 0x1000 <__mulsf3+0xe8>
     ff8:	81 e0       	ldi	r24, 0x01	; 1
     ffa:	90 e0       	ldi	r25, 0x00	; 0
     ffc:	a0 e0       	ldi	r26, 0x00	; 0
     ffe:	b0 e0       	ldi	r27, 0x00	; 0
    1000:	ba 01       	movw	r22, r20
    1002:	a9 01       	movw	r20, r18
    1004:	48 0f       	add	r20, r24
    1006:	59 1f       	adc	r21, r25
    1008:	6a 1f       	adc	r22, r26
    100a:	7b 1f       	adc	r23, r27
    100c:	aa 0c       	add	r10, r10
    100e:	bb 1c       	adc	r11, r11
    1010:	cc 1c       	adc	r12, r12
    1012:	dd 1c       	adc	r13, r13
    1014:	97 fe       	sbrs	r9, 7
    1016:	08 c0       	rjmp	.+16     	; 0x1028 <__mulsf3+0x110>
    1018:	81 e0       	ldi	r24, 0x01	; 1
    101a:	90 e0       	ldi	r25, 0x00	; 0
    101c:	a0 e0       	ldi	r26, 0x00	; 0
    101e:	b0 e0       	ldi	r27, 0x00	; 0
    1020:	a8 2a       	or	r10, r24
    1022:	b9 2a       	or	r11, r25
    1024:	ca 2a       	or	r12, r26
    1026:	db 2a       	or	r13, r27
    1028:	31 96       	adiw	r30, 0x01	; 1
    102a:	e0 32       	cpi	r30, 0x20	; 32
    102c:	f1 05       	cpc	r31, r1
    102e:	49 f0       	breq	.+18     	; 0x1042 <__mulsf3+0x12a>
    1030:	66 0c       	add	r6, r6
    1032:	77 1c       	adc	r7, r7
    1034:	88 1c       	adc	r8, r8
    1036:	99 1c       	adc	r9, r9
    1038:	56 94       	lsr	r5
    103a:	47 94       	ror	r4
    103c:	37 94       	ror	r3
    103e:	27 94       	ror	r2
    1040:	c3 cf       	rjmp	.-122    	; 0xfc8 <__mulsf3+0xb0>
    1042:	fa 85       	ldd	r31, Y+10	; 0x0a
    1044:	ea 89       	ldd	r30, Y+18	; 0x12
    1046:	2b 89       	ldd	r18, Y+19	; 0x13
    1048:	3c 89       	ldd	r19, Y+20	; 0x14
    104a:	8b 85       	ldd	r24, Y+11	; 0x0b
    104c:	9c 85       	ldd	r25, Y+12	; 0x0c
    104e:	28 0f       	add	r18, r24
    1050:	39 1f       	adc	r19, r25
    1052:	2e 5f       	subi	r18, 0xFE	; 254
    1054:	3f 4f       	sbci	r19, 0xFF	; 255
    1056:	17 c0       	rjmp	.+46     	; 0x1086 <__mulsf3+0x16e>
    1058:	ca 01       	movw	r24, r20
    105a:	81 70       	andi	r24, 0x01	; 1
    105c:	90 70       	andi	r25, 0x00	; 0
    105e:	89 2b       	or	r24, r25
    1060:	61 f0       	breq	.+24     	; 0x107a <__mulsf3+0x162>
    1062:	16 95       	lsr	r17
    1064:	07 95       	ror	r16
    1066:	f7 94       	ror	r15
    1068:	e7 94       	ror	r14
    106a:	80 e0       	ldi	r24, 0x00	; 0
    106c:	90 e0       	ldi	r25, 0x00	; 0
    106e:	a0 e0       	ldi	r26, 0x00	; 0
    1070:	b0 e8       	ldi	r27, 0x80	; 128
    1072:	e8 2a       	or	r14, r24
    1074:	f9 2a       	or	r15, r25
    1076:	0a 2b       	or	r16, r26
    1078:	1b 2b       	or	r17, r27
    107a:	76 95       	lsr	r23
    107c:	67 95       	ror	r22
    107e:	57 95       	ror	r21
    1080:	47 95       	ror	r20
    1082:	2f 5f       	subi	r18, 0xFF	; 255
    1084:	3f 4f       	sbci	r19, 0xFF	; 255
    1086:	77 fd       	sbrc	r23, 7
    1088:	e7 cf       	rjmp	.-50     	; 0x1058 <__mulsf3+0x140>
    108a:	0c c0       	rjmp	.+24     	; 0x10a4 <__mulsf3+0x18c>
    108c:	44 0f       	add	r20, r20
    108e:	55 1f       	adc	r21, r21
    1090:	66 1f       	adc	r22, r22
    1092:	77 1f       	adc	r23, r23
    1094:	17 fd       	sbrc	r17, 7
    1096:	41 60       	ori	r20, 0x01	; 1
    1098:	ee 0c       	add	r14, r14
    109a:	ff 1c       	adc	r15, r15
    109c:	00 1f       	adc	r16, r16
    109e:	11 1f       	adc	r17, r17
    10a0:	21 50       	subi	r18, 0x01	; 1
    10a2:	30 40       	sbci	r19, 0x00	; 0
    10a4:	40 30       	cpi	r20, 0x00	; 0
    10a6:	90 e0       	ldi	r25, 0x00	; 0
    10a8:	59 07       	cpc	r21, r25
    10aa:	90 e0       	ldi	r25, 0x00	; 0
    10ac:	69 07       	cpc	r22, r25
    10ae:	90 e4       	ldi	r25, 0x40	; 64
    10b0:	79 07       	cpc	r23, r25
    10b2:	60 f3       	brcs	.-40     	; 0x108c <__mulsf3+0x174>
    10b4:	2b 8f       	std	Y+27, r18	; 0x1b
    10b6:	3c 8f       	std	Y+28, r19	; 0x1c
    10b8:	db 01       	movw	r26, r22
    10ba:	ca 01       	movw	r24, r20
    10bc:	8f 77       	andi	r24, 0x7F	; 127
    10be:	90 70       	andi	r25, 0x00	; 0
    10c0:	a0 70       	andi	r26, 0x00	; 0
    10c2:	b0 70       	andi	r27, 0x00	; 0
    10c4:	80 34       	cpi	r24, 0x40	; 64
    10c6:	91 05       	cpc	r25, r1
    10c8:	a1 05       	cpc	r26, r1
    10ca:	b1 05       	cpc	r27, r1
    10cc:	61 f4       	brne	.+24     	; 0x10e6 <__mulsf3+0x1ce>
    10ce:	47 fd       	sbrc	r20, 7
    10d0:	0a c0       	rjmp	.+20     	; 0x10e6 <__mulsf3+0x1ce>
    10d2:	e1 14       	cp	r14, r1
    10d4:	f1 04       	cpc	r15, r1
    10d6:	01 05       	cpc	r16, r1
    10d8:	11 05       	cpc	r17, r1
    10da:	29 f0       	breq	.+10     	; 0x10e6 <__mulsf3+0x1ce>
    10dc:	40 5c       	subi	r20, 0xC0	; 192
    10de:	5f 4f       	sbci	r21, 0xFF	; 255
    10e0:	6f 4f       	sbci	r22, 0xFF	; 255
    10e2:	7f 4f       	sbci	r23, 0xFF	; 255
    10e4:	40 78       	andi	r20, 0x80	; 128
    10e6:	1a 8e       	std	Y+26, r1	; 0x1a
    10e8:	fe 17       	cp	r31, r30
    10ea:	11 f0       	breq	.+4      	; 0x10f0 <__mulsf3+0x1d8>
    10ec:	81 e0       	ldi	r24, 0x01	; 1
    10ee:	8a 8f       	std	Y+26, r24	; 0x1a
    10f0:	4d 8f       	std	Y+29, r20	; 0x1d
    10f2:	5e 8f       	std	Y+30, r21	; 0x1e
    10f4:	6f 8f       	std	Y+31, r22	; 0x1f
    10f6:	78 a3       	std	Y+32, r23	; 0x20
    10f8:	83 e0       	ldi	r24, 0x03	; 3
    10fa:	89 8f       	std	Y+25, r24	; 0x19
    10fc:	ce 01       	movw	r24, r28
    10fe:	49 96       	adiw	r24, 0x19	; 25
    1100:	0e 94 16 0a 	call	0x142c	; 0x142c <__pack_f>
    1104:	a0 96       	adiw	r28, 0x20	; 32
    1106:	e2 e1       	ldi	r30, 0x12	; 18
    1108:	0c 94 d8 0b 	jmp	0x17b0	; 0x17b0 <__epilogue_restores__>

0000110c <__divsf3>:
    110c:	a8 e1       	ldi	r26, 0x18	; 24
    110e:	b0 e0       	ldi	r27, 0x00	; 0
    1110:	ec e8       	ldi	r30, 0x8C	; 140
    1112:	f8 e0       	ldi	r31, 0x08	; 8
    1114:	0c 94 c4 0b 	jmp	0x1788	; 0x1788 <__prologue_saves__+0x10>
    1118:	69 83       	std	Y+1, r22	; 0x01
    111a:	7a 83       	std	Y+2, r23	; 0x02
    111c:	8b 83       	std	Y+3, r24	; 0x03
    111e:	9c 83       	std	Y+4, r25	; 0x04
    1120:	2d 83       	std	Y+5, r18	; 0x05
    1122:	3e 83       	std	Y+6, r19	; 0x06
    1124:	4f 83       	std	Y+7, r20	; 0x07
    1126:	58 87       	std	Y+8, r21	; 0x08
    1128:	b9 e0       	ldi	r27, 0x09	; 9
    112a:	eb 2e       	mov	r14, r27
    112c:	f1 2c       	mov	r15, r1
    112e:	ec 0e       	add	r14, r28
    1130:	fd 1e       	adc	r15, r29
    1132:	ce 01       	movw	r24, r28
    1134:	01 96       	adiw	r24, 0x01	; 1
    1136:	b7 01       	movw	r22, r14
    1138:	0e 94 eb 0a 	call	0x15d6	; 0x15d6 <__unpack_f>
    113c:	8e 01       	movw	r16, r28
    113e:	0f 5e       	subi	r16, 0xEF	; 239
    1140:	1f 4f       	sbci	r17, 0xFF	; 255
    1142:	ce 01       	movw	r24, r28
    1144:	05 96       	adiw	r24, 0x05	; 5
    1146:	b8 01       	movw	r22, r16
    1148:	0e 94 eb 0a 	call	0x15d6	; 0x15d6 <__unpack_f>
    114c:	29 85       	ldd	r18, Y+9	; 0x09
    114e:	22 30       	cpi	r18, 0x02	; 2
    1150:	08 f4       	brcc	.+2      	; 0x1154 <__divsf3+0x48>
    1152:	7e c0       	rjmp	.+252    	; 0x1250 <__divsf3+0x144>
    1154:	39 89       	ldd	r19, Y+17	; 0x11
    1156:	32 30       	cpi	r19, 0x02	; 2
    1158:	10 f4       	brcc	.+4      	; 0x115e <__divsf3+0x52>
    115a:	b8 01       	movw	r22, r16
    115c:	7c c0       	rjmp	.+248    	; 0x1256 <__divsf3+0x14a>
    115e:	8a 85       	ldd	r24, Y+10	; 0x0a
    1160:	9a 89       	ldd	r25, Y+18	; 0x12
    1162:	89 27       	eor	r24, r25
    1164:	8a 87       	std	Y+10, r24	; 0x0a
    1166:	24 30       	cpi	r18, 0x04	; 4
    1168:	11 f0       	breq	.+4      	; 0x116e <__divsf3+0x62>
    116a:	22 30       	cpi	r18, 0x02	; 2
    116c:	31 f4       	brne	.+12     	; 0x117a <__divsf3+0x6e>
    116e:	23 17       	cp	r18, r19
    1170:	09 f0       	breq	.+2      	; 0x1174 <__divsf3+0x68>
    1172:	6e c0       	rjmp	.+220    	; 0x1250 <__divsf3+0x144>
    1174:	60 e0       	ldi	r22, 0x00	; 0
    1176:	71 e0       	ldi	r23, 0x01	; 1
    1178:	6e c0       	rjmp	.+220    	; 0x1256 <__divsf3+0x14a>
    117a:	34 30       	cpi	r19, 0x04	; 4
    117c:	39 f4       	brne	.+14     	; 0x118c <__divsf3+0x80>
    117e:	1d 86       	std	Y+13, r1	; 0x0d
    1180:	1e 86       	std	Y+14, r1	; 0x0e
    1182:	1f 86       	std	Y+15, r1	; 0x0f
    1184:	18 8a       	std	Y+16, r1	; 0x10
    1186:	1c 86       	std	Y+12, r1	; 0x0c
    1188:	1b 86       	std	Y+11, r1	; 0x0b
    118a:	04 c0       	rjmp	.+8      	; 0x1194 <__divsf3+0x88>
    118c:	32 30       	cpi	r19, 0x02	; 2
    118e:	21 f4       	brne	.+8      	; 0x1198 <__divsf3+0x8c>
    1190:	84 e0       	ldi	r24, 0x04	; 4
    1192:	89 87       	std	Y+9, r24	; 0x09
    1194:	b7 01       	movw	r22, r14
    1196:	5f c0       	rjmp	.+190    	; 0x1256 <__divsf3+0x14a>
    1198:	2b 85       	ldd	r18, Y+11	; 0x0b
    119a:	3c 85       	ldd	r19, Y+12	; 0x0c
    119c:	8b 89       	ldd	r24, Y+19	; 0x13
    119e:	9c 89       	ldd	r25, Y+20	; 0x14
    11a0:	28 1b       	sub	r18, r24
    11a2:	39 0b       	sbc	r19, r25
    11a4:	3c 87       	std	Y+12, r19	; 0x0c
    11a6:	2b 87       	std	Y+11, r18	; 0x0b
    11a8:	ed 84       	ldd	r14, Y+13	; 0x0d
    11aa:	fe 84       	ldd	r15, Y+14	; 0x0e
    11ac:	0f 85       	ldd	r16, Y+15	; 0x0f
    11ae:	18 89       	ldd	r17, Y+16	; 0x10
    11b0:	ad 88       	ldd	r10, Y+21	; 0x15
    11b2:	be 88       	ldd	r11, Y+22	; 0x16
    11b4:	cf 88       	ldd	r12, Y+23	; 0x17
    11b6:	d8 8c       	ldd	r13, Y+24	; 0x18
    11b8:	ea 14       	cp	r14, r10
    11ba:	fb 04       	cpc	r15, r11
    11bc:	0c 05       	cpc	r16, r12
    11be:	1d 05       	cpc	r17, r13
    11c0:	40 f4       	brcc	.+16     	; 0x11d2 <__divsf3+0xc6>
    11c2:	ee 0c       	add	r14, r14
    11c4:	ff 1c       	adc	r15, r15
    11c6:	00 1f       	adc	r16, r16
    11c8:	11 1f       	adc	r17, r17
    11ca:	21 50       	subi	r18, 0x01	; 1
    11cc:	30 40       	sbci	r19, 0x00	; 0
    11ce:	3c 87       	std	Y+12, r19	; 0x0c
    11d0:	2b 87       	std	Y+11, r18	; 0x0b
    11d2:	20 e0       	ldi	r18, 0x00	; 0
    11d4:	30 e0       	ldi	r19, 0x00	; 0
    11d6:	40 e0       	ldi	r20, 0x00	; 0
    11d8:	50 e0       	ldi	r21, 0x00	; 0
    11da:	80 e0       	ldi	r24, 0x00	; 0
    11dc:	90 e0       	ldi	r25, 0x00	; 0
    11de:	a0 e0       	ldi	r26, 0x00	; 0
    11e0:	b0 e4       	ldi	r27, 0x40	; 64
    11e2:	60 e0       	ldi	r22, 0x00	; 0
    11e4:	70 e0       	ldi	r23, 0x00	; 0
    11e6:	ea 14       	cp	r14, r10
    11e8:	fb 04       	cpc	r15, r11
    11ea:	0c 05       	cpc	r16, r12
    11ec:	1d 05       	cpc	r17, r13
    11ee:	40 f0       	brcs	.+16     	; 0x1200 <__divsf3+0xf4>
    11f0:	28 2b       	or	r18, r24
    11f2:	39 2b       	or	r19, r25
    11f4:	4a 2b       	or	r20, r26
    11f6:	5b 2b       	or	r21, r27
    11f8:	ea 18       	sub	r14, r10
    11fa:	fb 08       	sbc	r15, r11
    11fc:	0c 09       	sbc	r16, r12
    11fe:	1d 09       	sbc	r17, r13
    1200:	b6 95       	lsr	r27
    1202:	a7 95       	ror	r26
    1204:	97 95       	ror	r25
    1206:	87 95       	ror	r24
    1208:	ee 0c       	add	r14, r14
    120a:	ff 1c       	adc	r15, r15
    120c:	00 1f       	adc	r16, r16
    120e:	11 1f       	adc	r17, r17
    1210:	6f 5f       	subi	r22, 0xFF	; 255
    1212:	7f 4f       	sbci	r23, 0xFF	; 255
    1214:	6f 31       	cpi	r22, 0x1F	; 31
    1216:	71 05       	cpc	r23, r1
    1218:	31 f7       	brne	.-52     	; 0x11e6 <__divsf3+0xda>
    121a:	da 01       	movw	r26, r20
    121c:	c9 01       	movw	r24, r18
    121e:	8f 77       	andi	r24, 0x7F	; 127
    1220:	90 70       	andi	r25, 0x00	; 0
    1222:	a0 70       	andi	r26, 0x00	; 0
    1224:	b0 70       	andi	r27, 0x00	; 0
    1226:	80 34       	cpi	r24, 0x40	; 64
    1228:	91 05       	cpc	r25, r1
    122a:	a1 05       	cpc	r26, r1
    122c:	b1 05       	cpc	r27, r1
    122e:	61 f4       	brne	.+24     	; 0x1248 <__divsf3+0x13c>
    1230:	27 fd       	sbrc	r18, 7
    1232:	0a c0       	rjmp	.+20     	; 0x1248 <__divsf3+0x13c>
    1234:	e1 14       	cp	r14, r1
    1236:	f1 04       	cpc	r15, r1
    1238:	01 05       	cpc	r16, r1
    123a:	11 05       	cpc	r17, r1
    123c:	29 f0       	breq	.+10     	; 0x1248 <__divsf3+0x13c>
    123e:	20 5c       	subi	r18, 0xC0	; 192
    1240:	3f 4f       	sbci	r19, 0xFF	; 255
    1242:	4f 4f       	sbci	r20, 0xFF	; 255
    1244:	5f 4f       	sbci	r21, 0xFF	; 255
    1246:	20 78       	andi	r18, 0x80	; 128
    1248:	2d 87       	std	Y+13, r18	; 0x0d
    124a:	3e 87       	std	Y+14, r19	; 0x0e
    124c:	4f 87       	std	Y+15, r20	; 0x0f
    124e:	58 8b       	std	Y+16, r21	; 0x10
    1250:	be 01       	movw	r22, r28
    1252:	67 5f       	subi	r22, 0xF7	; 247
    1254:	7f 4f       	sbci	r23, 0xFF	; 255
    1256:	cb 01       	movw	r24, r22
    1258:	0e 94 16 0a 	call	0x142c	; 0x142c <__pack_f>
    125c:	68 96       	adiw	r28, 0x18	; 24
    125e:	ea e0       	ldi	r30, 0x0A	; 10
    1260:	0c 94 e0 0b 	jmp	0x17c0	; 0x17c0 <__epilogue_restores__+0x10>

00001264 <__gtsf2>:
    1264:	a8 e1       	ldi	r26, 0x18	; 24
    1266:	b0 e0       	ldi	r27, 0x00	; 0
    1268:	e8 e3       	ldi	r30, 0x38	; 56
    126a:	f9 e0       	ldi	r31, 0x09	; 9
    126c:	0c 94 c8 0b 	jmp	0x1790	; 0x1790 <__prologue_saves__+0x18>
    1270:	69 83       	std	Y+1, r22	; 0x01
    1272:	7a 83       	std	Y+2, r23	; 0x02
    1274:	8b 83       	std	Y+3, r24	; 0x03
    1276:	9c 83       	std	Y+4, r25	; 0x04
    1278:	2d 83       	std	Y+5, r18	; 0x05
    127a:	3e 83       	std	Y+6, r19	; 0x06
    127c:	4f 83       	std	Y+7, r20	; 0x07
    127e:	58 87       	std	Y+8, r21	; 0x08
    1280:	89 e0       	ldi	r24, 0x09	; 9
    1282:	e8 2e       	mov	r14, r24
    1284:	f1 2c       	mov	r15, r1
    1286:	ec 0e       	add	r14, r28
    1288:	fd 1e       	adc	r15, r29
    128a:	ce 01       	movw	r24, r28
    128c:	01 96       	adiw	r24, 0x01	; 1
    128e:	b7 01       	movw	r22, r14
    1290:	0e 94 eb 0a 	call	0x15d6	; 0x15d6 <__unpack_f>
    1294:	8e 01       	movw	r16, r28
    1296:	0f 5e       	subi	r16, 0xEF	; 239
    1298:	1f 4f       	sbci	r17, 0xFF	; 255
    129a:	ce 01       	movw	r24, r28
    129c:	05 96       	adiw	r24, 0x05	; 5
    129e:	b8 01       	movw	r22, r16
    12a0:	0e 94 eb 0a 	call	0x15d6	; 0x15d6 <__unpack_f>
    12a4:	89 85       	ldd	r24, Y+9	; 0x09
    12a6:	82 30       	cpi	r24, 0x02	; 2
    12a8:	40 f0       	brcs	.+16     	; 0x12ba <__gtsf2+0x56>
    12aa:	89 89       	ldd	r24, Y+17	; 0x11
    12ac:	82 30       	cpi	r24, 0x02	; 2
    12ae:	28 f0       	brcs	.+10     	; 0x12ba <__gtsf2+0x56>
    12b0:	c7 01       	movw	r24, r14
    12b2:	b8 01       	movw	r22, r16
    12b4:	0e 94 63 0b 	call	0x16c6	; 0x16c6 <__fpcmp_parts_f>
    12b8:	01 c0       	rjmp	.+2      	; 0x12bc <__gtsf2+0x58>
    12ba:	8f ef       	ldi	r24, 0xFF	; 255
    12bc:	68 96       	adiw	r28, 0x18	; 24
    12be:	e6 e0       	ldi	r30, 0x06	; 6
    12c0:	0c 94 e4 0b 	jmp	0x17c8	; 0x17c8 <__epilogue_restores__+0x18>

000012c4 <__gesf2>:
    12c4:	a8 e1       	ldi	r26, 0x18	; 24
    12c6:	b0 e0       	ldi	r27, 0x00	; 0
    12c8:	e8 e6       	ldi	r30, 0x68	; 104
    12ca:	f9 e0       	ldi	r31, 0x09	; 9
    12cc:	0c 94 c8 0b 	jmp	0x1790	; 0x1790 <__prologue_saves__+0x18>
    12d0:	69 83       	std	Y+1, r22	; 0x01
    12d2:	7a 83       	std	Y+2, r23	; 0x02
    12d4:	8b 83       	std	Y+3, r24	; 0x03
    12d6:	9c 83       	std	Y+4, r25	; 0x04
    12d8:	2d 83       	std	Y+5, r18	; 0x05
    12da:	3e 83       	std	Y+6, r19	; 0x06
    12dc:	4f 83       	std	Y+7, r20	; 0x07
    12de:	58 87       	std	Y+8, r21	; 0x08
    12e0:	89 e0       	ldi	r24, 0x09	; 9
    12e2:	e8 2e       	mov	r14, r24
    12e4:	f1 2c       	mov	r15, r1
    12e6:	ec 0e       	add	r14, r28
    12e8:	fd 1e       	adc	r15, r29
    12ea:	ce 01       	movw	r24, r28
    12ec:	01 96       	adiw	r24, 0x01	; 1
    12ee:	b7 01       	movw	r22, r14
    12f0:	0e 94 eb 0a 	call	0x15d6	; 0x15d6 <__unpack_f>
    12f4:	8e 01       	movw	r16, r28
    12f6:	0f 5e       	subi	r16, 0xEF	; 239
    12f8:	1f 4f       	sbci	r17, 0xFF	; 255
    12fa:	ce 01       	movw	r24, r28
    12fc:	05 96       	adiw	r24, 0x05	; 5
    12fe:	b8 01       	movw	r22, r16
    1300:	0e 94 eb 0a 	call	0x15d6	; 0x15d6 <__unpack_f>
    1304:	89 85       	ldd	r24, Y+9	; 0x09
    1306:	82 30       	cpi	r24, 0x02	; 2
    1308:	40 f0       	brcs	.+16     	; 0x131a <__gesf2+0x56>
    130a:	89 89       	ldd	r24, Y+17	; 0x11
    130c:	82 30       	cpi	r24, 0x02	; 2
    130e:	28 f0       	brcs	.+10     	; 0x131a <__gesf2+0x56>
    1310:	c7 01       	movw	r24, r14
    1312:	b8 01       	movw	r22, r16
    1314:	0e 94 63 0b 	call	0x16c6	; 0x16c6 <__fpcmp_parts_f>
    1318:	01 c0       	rjmp	.+2      	; 0x131c <__gesf2+0x58>
    131a:	8f ef       	ldi	r24, 0xFF	; 255
    131c:	68 96       	adiw	r28, 0x18	; 24
    131e:	e6 e0       	ldi	r30, 0x06	; 6
    1320:	0c 94 e4 0b 	jmp	0x17c8	; 0x17c8 <__epilogue_restores__+0x18>

00001324 <__ltsf2>:
    1324:	a8 e1       	ldi	r26, 0x18	; 24
    1326:	b0 e0       	ldi	r27, 0x00	; 0
    1328:	e8 e9       	ldi	r30, 0x98	; 152
    132a:	f9 e0       	ldi	r31, 0x09	; 9
    132c:	0c 94 c8 0b 	jmp	0x1790	; 0x1790 <__prologue_saves__+0x18>
    1330:	69 83       	std	Y+1, r22	; 0x01
    1332:	7a 83       	std	Y+2, r23	; 0x02
    1334:	8b 83       	std	Y+3, r24	; 0x03
    1336:	9c 83       	std	Y+4, r25	; 0x04
    1338:	2d 83       	std	Y+5, r18	; 0x05
    133a:	3e 83       	std	Y+6, r19	; 0x06
    133c:	4f 83       	std	Y+7, r20	; 0x07
    133e:	58 87       	std	Y+8, r21	; 0x08
    1340:	89 e0       	ldi	r24, 0x09	; 9
    1342:	e8 2e       	mov	r14, r24
    1344:	f1 2c       	mov	r15, r1
    1346:	ec 0e       	add	r14, r28
    1348:	fd 1e       	adc	r15, r29
    134a:	ce 01       	movw	r24, r28
    134c:	01 96       	adiw	r24, 0x01	; 1
    134e:	b7 01       	movw	r22, r14
    1350:	0e 94 eb 0a 	call	0x15d6	; 0x15d6 <__unpack_f>
    1354:	8e 01       	movw	r16, r28
    1356:	0f 5e       	subi	r16, 0xEF	; 239
    1358:	1f 4f       	sbci	r17, 0xFF	; 255
    135a:	ce 01       	movw	r24, r28
    135c:	05 96       	adiw	r24, 0x05	; 5
    135e:	b8 01       	movw	r22, r16
    1360:	0e 94 eb 0a 	call	0x15d6	; 0x15d6 <__unpack_f>
    1364:	89 85       	ldd	r24, Y+9	; 0x09
    1366:	82 30       	cpi	r24, 0x02	; 2
    1368:	40 f0       	brcs	.+16     	; 0x137a <__ltsf2+0x56>
    136a:	89 89       	ldd	r24, Y+17	; 0x11
    136c:	82 30       	cpi	r24, 0x02	; 2
    136e:	28 f0       	brcs	.+10     	; 0x137a <__ltsf2+0x56>
    1370:	c7 01       	movw	r24, r14
    1372:	b8 01       	movw	r22, r16
    1374:	0e 94 63 0b 	call	0x16c6	; 0x16c6 <__fpcmp_parts_f>
    1378:	01 c0       	rjmp	.+2      	; 0x137c <__ltsf2+0x58>
    137a:	81 e0       	ldi	r24, 0x01	; 1
    137c:	68 96       	adiw	r28, 0x18	; 24
    137e:	e6 e0       	ldi	r30, 0x06	; 6
    1380:	0c 94 e4 0b 	jmp	0x17c8	; 0x17c8 <__epilogue_restores__+0x18>

00001384 <__fixsfsi>:
    1384:	ac e0       	ldi	r26, 0x0C	; 12
    1386:	b0 e0       	ldi	r27, 0x00	; 0
    1388:	e8 ec       	ldi	r30, 0xC8	; 200
    138a:	f9 e0       	ldi	r31, 0x09	; 9
    138c:	0c 94 cc 0b 	jmp	0x1798	; 0x1798 <__prologue_saves__+0x20>
    1390:	69 83       	std	Y+1, r22	; 0x01
    1392:	7a 83       	std	Y+2, r23	; 0x02
    1394:	8b 83       	std	Y+3, r24	; 0x03
    1396:	9c 83       	std	Y+4, r25	; 0x04
    1398:	ce 01       	movw	r24, r28
    139a:	01 96       	adiw	r24, 0x01	; 1
    139c:	be 01       	movw	r22, r28
    139e:	6b 5f       	subi	r22, 0xFB	; 251
    13a0:	7f 4f       	sbci	r23, 0xFF	; 255
    13a2:	0e 94 eb 0a 	call	0x15d6	; 0x15d6 <__unpack_f>
    13a6:	8d 81       	ldd	r24, Y+5	; 0x05
    13a8:	82 30       	cpi	r24, 0x02	; 2
    13aa:	61 f1       	breq	.+88     	; 0x1404 <__fixsfsi+0x80>
    13ac:	82 30       	cpi	r24, 0x02	; 2
    13ae:	50 f1       	brcs	.+84     	; 0x1404 <__fixsfsi+0x80>
    13b0:	84 30       	cpi	r24, 0x04	; 4
    13b2:	21 f4       	brne	.+8      	; 0x13bc <__fixsfsi+0x38>
    13b4:	8e 81       	ldd	r24, Y+6	; 0x06
    13b6:	88 23       	and	r24, r24
    13b8:	51 f1       	breq	.+84     	; 0x140e <__fixsfsi+0x8a>
    13ba:	2e c0       	rjmp	.+92     	; 0x1418 <__fixsfsi+0x94>
    13bc:	2f 81       	ldd	r18, Y+7	; 0x07
    13be:	38 85       	ldd	r19, Y+8	; 0x08
    13c0:	37 fd       	sbrc	r19, 7
    13c2:	20 c0       	rjmp	.+64     	; 0x1404 <__fixsfsi+0x80>
    13c4:	6e 81       	ldd	r22, Y+6	; 0x06
    13c6:	2f 31       	cpi	r18, 0x1F	; 31
    13c8:	31 05       	cpc	r19, r1
    13ca:	1c f0       	brlt	.+6      	; 0x13d2 <__fixsfsi+0x4e>
    13cc:	66 23       	and	r22, r22
    13ce:	f9 f0       	breq	.+62     	; 0x140e <__fixsfsi+0x8a>
    13d0:	23 c0       	rjmp	.+70     	; 0x1418 <__fixsfsi+0x94>
    13d2:	8e e1       	ldi	r24, 0x1E	; 30
    13d4:	90 e0       	ldi	r25, 0x00	; 0
    13d6:	82 1b       	sub	r24, r18
    13d8:	93 0b       	sbc	r25, r19
    13da:	29 85       	ldd	r18, Y+9	; 0x09
    13dc:	3a 85       	ldd	r19, Y+10	; 0x0a
    13de:	4b 85       	ldd	r20, Y+11	; 0x0b
    13e0:	5c 85       	ldd	r21, Y+12	; 0x0c
    13e2:	04 c0       	rjmp	.+8      	; 0x13ec <__fixsfsi+0x68>
    13e4:	56 95       	lsr	r21
    13e6:	47 95       	ror	r20
    13e8:	37 95       	ror	r19
    13ea:	27 95       	ror	r18
    13ec:	8a 95       	dec	r24
    13ee:	d2 f7       	brpl	.-12     	; 0x13e4 <__fixsfsi+0x60>
    13f0:	66 23       	and	r22, r22
    13f2:	b1 f0       	breq	.+44     	; 0x1420 <__fixsfsi+0x9c>
    13f4:	50 95       	com	r21
    13f6:	40 95       	com	r20
    13f8:	30 95       	com	r19
    13fa:	21 95       	neg	r18
    13fc:	3f 4f       	sbci	r19, 0xFF	; 255
    13fe:	4f 4f       	sbci	r20, 0xFF	; 255
    1400:	5f 4f       	sbci	r21, 0xFF	; 255
    1402:	0e c0       	rjmp	.+28     	; 0x1420 <__fixsfsi+0x9c>
    1404:	20 e0       	ldi	r18, 0x00	; 0
    1406:	30 e0       	ldi	r19, 0x00	; 0
    1408:	40 e0       	ldi	r20, 0x00	; 0
    140a:	50 e0       	ldi	r21, 0x00	; 0
    140c:	09 c0       	rjmp	.+18     	; 0x1420 <__fixsfsi+0x9c>
    140e:	2f ef       	ldi	r18, 0xFF	; 255
    1410:	3f ef       	ldi	r19, 0xFF	; 255
    1412:	4f ef       	ldi	r20, 0xFF	; 255
    1414:	5f e7       	ldi	r21, 0x7F	; 127
    1416:	04 c0       	rjmp	.+8      	; 0x1420 <__fixsfsi+0x9c>
    1418:	20 e0       	ldi	r18, 0x00	; 0
    141a:	30 e0       	ldi	r19, 0x00	; 0
    141c:	40 e0       	ldi	r20, 0x00	; 0
    141e:	50 e8       	ldi	r21, 0x80	; 128
    1420:	b9 01       	movw	r22, r18
    1422:	ca 01       	movw	r24, r20
    1424:	2c 96       	adiw	r28, 0x0c	; 12
    1426:	e2 e0       	ldi	r30, 0x02	; 2
    1428:	0c 94 e8 0b 	jmp	0x17d0	; 0x17d0 <__epilogue_restores__+0x20>

0000142c <__pack_f>:
    142c:	df 92       	push	r13
    142e:	ef 92       	push	r14
    1430:	ff 92       	push	r15
    1432:	0f 93       	push	r16
    1434:	1f 93       	push	r17
    1436:	fc 01       	movw	r30, r24
    1438:	e4 80       	ldd	r14, Z+4	; 0x04
    143a:	f5 80       	ldd	r15, Z+5	; 0x05
    143c:	06 81       	ldd	r16, Z+6	; 0x06
    143e:	17 81       	ldd	r17, Z+7	; 0x07
    1440:	d1 80       	ldd	r13, Z+1	; 0x01
    1442:	80 81       	ld	r24, Z
    1444:	82 30       	cpi	r24, 0x02	; 2
    1446:	48 f4       	brcc	.+18     	; 0x145a <__pack_f+0x2e>
    1448:	80 e0       	ldi	r24, 0x00	; 0
    144a:	90 e0       	ldi	r25, 0x00	; 0
    144c:	a0 e1       	ldi	r26, 0x10	; 16
    144e:	b0 e0       	ldi	r27, 0x00	; 0
    1450:	e8 2a       	or	r14, r24
    1452:	f9 2a       	or	r15, r25
    1454:	0a 2b       	or	r16, r26
    1456:	1b 2b       	or	r17, r27
    1458:	a5 c0       	rjmp	.+330    	; 0x15a4 <__pack_f+0x178>
    145a:	84 30       	cpi	r24, 0x04	; 4
    145c:	09 f4       	brne	.+2      	; 0x1460 <__pack_f+0x34>
    145e:	9f c0       	rjmp	.+318    	; 0x159e <__pack_f+0x172>
    1460:	82 30       	cpi	r24, 0x02	; 2
    1462:	21 f4       	brne	.+8      	; 0x146c <__pack_f+0x40>
    1464:	ee 24       	eor	r14, r14
    1466:	ff 24       	eor	r15, r15
    1468:	87 01       	movw	r16, r14
    146a:	05 c0       	rjmp	.+10     	; 0x1476 <__pack_f+0x4a>
    146c:	e1 14       	cp	r14, r1
    146e:	f1 04       	cpc	r15, r1
    1470:	01 05       	cpc	r16, r1
    1472:	11 05       	cpc	r17, r1
    1474:	19 f4       	brne	.+6      	; 0x147c <__pack_f+0x50>
    1476:	e0 e0       	ldi	r30, 0x00	; 0
    1478:	f0 e0       	ldi	r31, 0x00	; 0
    147a:	96 c0       	rjmp	.+300    	; 0x15a8 <__pack_f+0x17c>
    147c:	62 81       	ldd	r22, Z+2	; 0x02
    147e:	73 81       	ldd	r23, Z+3	; 0x03
    1480:	9f ef       	ldi	r25, 0xFF	; 255
    1482:	62 38       	cpi	r22, 0x82	; 130
    1484:	79 07       	cpc	r23, r25
    1486:	0c f0       	brlt	.+2      	; 0x148a <__pack_f+0x5e>
    1488:	5b c0       	rjmp	.+182    	; 0x1540 <__pack_f+0x114>
    148a:	22 e8       	ldi	r18, 0x82	; 130
    148c:	3f ef       	ldi	r19, 0xFF	; 255
    148e:	26 1b       	sub	r18, r22
    1490:	37 0b       	sbc	r19, r23
    1492:	2a 31       	cpi	r18, 0x1A	; 26
    1494:	31 05       	cpc	r19, r1
    1496:	2c f0       	brlt	.+10     	; 0x14a2 <__pack_f+0x76>
    1498:	20 e0       	ldi	r18, 0x00	; 0
    149a:	30 e0       	ldi	r19, 0x00	; 0
    149c:	40 e0       	ldi	r20, 0x00	; 0
    149e:	50 e0       	ldi	r21, 0x00	; 0
    14a0:	2a c0       	rjmp	.+84     	; 0x14f6 <__pack_f+0xca>
    14a2:	b8 01       	movw	r22, r16
    14a4:	a7 01       	movw	r20, r14
    14a6:	02 2e       	mov	r0, r18
    14a8:	04 c0       	rjmp	.+8      	; 0x14b2 <__pack_f+0x86>
    14aa:	76 95       	lsr	r23
    14ac:	67 95       	ror	r22
    14ae:	57 95       	ror	r21
    14b0:	47 95       	ror	r20
    14b2:	0a 94       	dec	r0
    14b4:	d2 f7       	brpl	.-12     	; 0x14aa <__pack_f+0x7e>
    14b6:	81 e0       	ldi	r24, 0x01	; 1
    14b8:	90 e0       	ldi	r25, 0x00	; 0
    14ba:	a0 e0       	ldi	r26, 0x00	; 0
    14bc:	b0 e0       	ldi	r27, 0x00	; 0
    14be:	04 c0       	rjmp	.+8      	; 0x14c8 <__pack_f+0x9c>
    14c0:	88 0f       	add	r24, r24
    14c2:	99 1f       	adc	r25, r25
    14c4:	aa 1f       	adc	r26, r26
    14c6:	bb 1f       	adc	r27, r27
    14c8:	2a 95       	dec	r18
    14ca:	d2 f7       	brpl	.-12     	; 0x14c0 <__pack_f+0x94>
    14cc:	01 97       	sbiw	r24, 0x01	; 1
    14ce:	a1 09       	sbc	r26, r1
    14d0:	b1 09       	sbc	r27, r1
    14d2:	8e 21       	and	r24, r14
    14d4:	9f 21       	and	r25, r15
    14d6:	a0 23       	and	r26, r16
    14d8:	b1 23       	and	r27, r17
    14da:	00 97       	sbiw	r24, 0x00	; 0
    14dc:	a1 05       	cpc	r26, r1
    14de:	b1 05       	cpc	r27, r1
    14e0:	21 f0       	breq	.+8      	; 0x14ea <__pack_f+0xbe>
    14e2:	81 e0       	ldi	r24, 0x01	; 1
    14e4:	90 e0       	ldi	r25, 0x00	; 0
    14e6:	a0 e0       	ldi	r26, 0x00	; 0
    14e8:	b0 e0       	ldi	r27, 0x00	; 0
    14ea:	9a 01       	movw	r18, r20
    14ec:	ab 01       	movw	r20, r22
    14ee:	28 2b       	or	r18, r24
    14f0:	39 2b       	or	r19, r25
    14f2:	4a 2b       	or	r20, r26
    14f4:	5b 2b       	or	r21, r27
    14f6:	da 01       	movw	r26, r20
    14f8:	c9 01       	movw	r24, r18
    14fa:	8f 77       	andi	r24, 0x7F	; 127
    14fc:	90 70       	andi	r25, 0x00	; 0
    14fe:	a0 70       	andi	r26, 0x00	; 0
    1500:	b0 70       	andi	r27, 0x00	; 0
    1502:	80 34       	cpi	r24, 0x40	; 64
    1504:	91 05       	cpc	r25, r1
    1506:	a1 05       	cpc	r26, r1
    1508:	b1 05       	cpc	r27, r1
    150a:	39 f4       	brne	.+14     	; 0x151a <__pack_f+0xee>
    150c:	27 ff       	sbrs	r18, 7
    150e:	09 c0       	rjmp	.+18     	; 0x1522 <__pack_f+0xf6>
    1510:	20 5c       	subi	r18, 0xC0	; 192
    1512:	3f 4f       	sbci	r19, 0xFF	; 255
    1514:	4f 4f       	sbci	r20, 0xFF	; 255
    1516:	5f 4f       	sbci	r21, 0xFF	; 255
    1518:	04 c0       	rjmp	.+8      	; 0x1522 <__pack_f+0xf6>
    151a:	21 5c       	subi	r18, 0xC1	; 193
    151c:	3f 4f       	sbci	r19, 0xFF	; 255
    151e:	4f 4f       	sbci	r20, 0xFF	; 255
    1520:	5f 4f       	sbci	r21, 0xFF	; 255
    1522:	e0 e0       	ldi	r30, 0x00	; 0
    1524:	f0 e0       	ldi	r31, 0x00	; 0
    1526:	20 30       	cpi	r18, 0x00	; 0
    1528:	a0 e0       	ldi	r26, 0x00	; 0
    152a:	3a 07       	cpc	r19, r26
    152c:	a0 e0       	ldi	r26, 0x00	; 0
    152e:	4a 07       	cpc	r20, r26
    1530:	a0 e4       	ldi	r26, 0x40	; 64
    1532:	5a 07       	cpc	r21, r26
    1534:	10 f0       	brcs	.+4      	; 0x153a <__pack_f+0x10e>
    1536:	e1 e0       	ldi	r30, 0x01	; 1
    1538:	f0 e0       	ldi	r31, 0x00	; 0
    153a:	79 01       	movw	r14, r18
    153c:	8a 01       	movw	r16, r20
    153e:	27 c0       	rjmp	.+78     	; 0x158e <__pack_f+0x162>
    1540:	60 38       	cpi	r22, 0x80	; 128
    1542:	71 05       	cpc	r23, r1
    1544:	64 f5       	brge	.+88     	; 0x159e <__pack_f+0x172>
    1546:	fb 01       	movw	r30, r22
    1548:	e1 58       	subi	r30, 0x81	; 129
    154a:	ff 4f       	sbci	r31, 0xFF	; 255
    154c:	d8 01       	movw	r26, r16
    154e:	c7 01       	movw	r24, r14
    1550:	8f 77       	andi	r24, 0x7F	; 127
    1552:	90 70       	andi	r25, 0x00	; 0
    1554:	a0 70       	andi	r26, 0x00	; 0
    1556:	b0 70       	andi	r27, 0x00	; 0
    1558:	80 34       	cpi	r24, 0x40	; 64
    155a:	91 05       	cpc	r25, r1
    155c:	a1 05       	cpc	r26, r1
    155e:	b1 05       	cpc	r27, r1
    1560:	39 f4       	brne	.+14     	; 0x1570 <__pack_f+0x144>
    1562:	e7 fe       	sbrs	r14, 7
    1564:	0d c0       	rjmp	.+26     	; 0x1580 <__pack_f+0x154>
    1566:	80 e4       	ldi	r24, 0x40	; 64
    1568:	90 e0       	ldi	r25, 0x00	; 0
    156a:	a0 e0       	ldi	r26, 0x00	; 0
    156c:	b0 e0       	ldi	r27, 0x00	; 0
    156e:	04 c0       	rjmp	.+8      	; 0x1578 <__pack_f+0x14c>
    1570:	8f e3       	ldi	r24, 0x3F	; 63
    1572:	90 e0       	ldi	r25, 0x00	; 0
    1574:	a0 e0       	ldi	r26, 0x00	; 0
    1576:	b0 e0       	ldi	r27, 0x00	; 0
    1578:	e8 0e       	add	r14, r24
    157a:	f9 1e       	adc	r15, r25
    157c:	0a 1f       	adc	r16, r26
    157e:	1b 1f       	adc	r17, r27
    1580:	17 ff       	sbrs	r17, 7
    1582:	05 c0       	rjmp	.+10     	; 0x158e <__pack_f+0x162>
    1584:	16 95       	lsr	r17
    1586:	07 95       	ror	r16
    1588:	f7 94       	ror	r15
    158a:	e7 94       	ror	r14
    158c:	31 96       	adiw	r30, 0x01	; 1
    158e:	87 e0       	ldi	r24, 0x07	; 7
    1590:	16 95       	lsr	r17
    1592:	07 95       	ror	r16
    1594:	f7 94       	ror	r15
    1596:	e7 94       	ror	r14
    1598:	8a 95       	dec	r24
    159a:	d1 f7       	brne	.-12     	; 0x1590 <__pack_f+0x164>
    159c:	05 c0       	rjmp	.+10     	; 0x15a8 <__pack_f+0x17c>
    159e:	ee 24       	eor	r14, r14
    15a0:	ff 24       	eor	r15, r15
    15a2:	87 01       	movw	r16, r14
    15a4:	ef ef       	ldi	r30, 0xFF	; 255
    15a6:	f0 e0       	ldi	r31, 0x00	; 0
    15a8:	6e 2f       	mov	r22, r30
    15aa:	67 95       	ror	r22
    15ac:	66 27       	eor	r22, r22
    15ae:	67 95       	ror	r22
    15b0:	90 2f       	mov	r25, r16
    15b2:	9f 77       	andi	r25, 0x7F	; 127
    15b4:	d7 94       	ror	r13
    15b6:	dd 24       	eor	r13, r13
    15b8:	d7 94       	ror	r13
    15ba:	8e 2f       	mov	r24, r30
    15bc:	86 95       	lsr	r24
    15be:	49 2f       	mov	r20, r25
    15c0:	46 2b       	or	r20, r22
    15c2:	58 2f       	mov	r21, r24
    15c4:	5d 29       	or	r21, r13
    15c6:	b7 01       	movw	r22, r14
    15c8:	ca 01       	movw	r24, r20
    15ca:	1f 91       	pop	r17
    15cc:	0f 91       	pop	r16
    15ce:	ff 90       	pop	r15
    15d0:	ef 90       	pop	r14
    15d2:	df 90       	pop	r13
    15d4:	08 95       	ret

000015d6 <__unpack_f>:
    15d6:	fc 01       	movw	r30, r24
    15d8:	db 01       	movw	r26, r22
    15da:	40 81       	ld	r20, Z
    15dc:	51 81       	ldd	r21, Z+1	; 0x01
    15de:	22 81       	ldd	r18, Z+2	; 0x02
    15e0:	62 2f       	mov	r22, r18
    15e2:	6f 77       	andi	r22, 0x7F	; 127
    15e4:	70 e0       	ldi	r23, 0x00	; 0
    15e6:	22 1f       	adc	r18, r18
    15e8:	22 27       	eor	r18, r18
    15ea:	22 1f       	adc	r18, r18
    15ec:	93 81       	ldd	r25, Z+3	; 0x03
    15ee:	89 2f       	mov	r24, r25
    15f0:	88 0f       	add	r24, r24
    15f2:	82 2b       	or	r24, r18
    15f4:	28 2f       	mov	r18, r24
    15f6:	30 e0       	ldi	r19, 0x00	; 0
    15f8:	99 1f       	adc	r25, r25
    15fa:	99 27       	eor	r25, r25
    15fc:	99 1f       	adc	r25, r25
    15fe:	11 96       	adiw	r26, 0x01	; 1
    1600:	9c 93       	st	X, r25
    1602:	11 97       	sbiw	r26, 0x01	; 1
    1604:	21 15       	cp	r18, r1
    1606:	31 05       	cpc	r19, r1
    1608:	a9 f5       	brne	.+106    	; 0x1674 <__unpack_f+0x9e>
    160a:	41 15       	cp	r20, r1
    160c:	51 05       	cpc	r21, r1
    160e:	61 05       	cpc	r22, r1
    1610:	71 05       	cpc	r23, r1
    1612:	11 f4       	brne	.+4      	; 0x1618 <__unpack_f+0x42>
    1614:	82 e0       	ldi	r24, 0x02	; 2
    1616:	37 c0       	rjmp	.+110    	; 0x1686 <__unpack_f+0xb0>
    1618:	82 e8       	ldi	r24, 0x82	; 130
    161a:	9f ef       	ldi	r25, 0xFF	; 255
    161c:	13 96       	adiw	r26, 0x03	; 3
    161e:	9c 93       	st	X, r25
    1620:	8e 93       	st	-X, r24
    1622:	12 97       	sbiw	r26, 0x02	; 2
    1624:	9a 01       	movw	r18, r20
    1626:	ab 01       	movw	r20, r22
    1628:	67 e0       	ldi	r22, 0x07	; 7
    162a:	22 0f       	add	r18, r18
    162c:	33 1f       	adc	r19, r19
    162e:	44 1f       	adc	r20, r20
    1630:	55 1f       	adc	r21, r21
    1632:	6a 95       	dec	r22
    1634:	d1 f7       	brne	.-12     	; 0x162a <__unpack_f+0x54>
    1636:	83 e0       	ldi	r24, 0x03	; 3
    1638:	8c 93       	st	X, r24
    163a:	0d c0       	rjmp	.+26     	; 0x1656 <__unpack_f+0x80>
    163c:	22 0f       	add	r18, r18
    163e:	33 1f       	adc	r19, r19
    1640:	44 1f       	adc	r20, r20
    1642:	55 1f       	adc	r21, r21
    1644:	12 96       	adiw	r26, 0x02	; 2
    1646:	8d 91       	ld	r24, X+
    1648:	9c 91       	ld	r25, X
    164a:	13 97       	sbiw	r26, 0x03	; 3
    164c:	01 97       	sbiw	r24, 0x01	; 1
    164e:	13 96       	adiw	r26, 0x03	; 3
    1650:	9c 93       	st	X, r25
    1652:	8e 93       	st	-X, r24
    1654:	12 97       	sbiw	r26, 0x02	; 2
    1656:	20 30       	cpi	r18, 0x00	; 0
    1658:	80 e0       	ldi	r24, 0x00	; 0
    165a:	38 07       	cpc	r19, r24
    165c:	80 e0       	ldi	r24, 0x00	; 0
    165e:	48 07       	cpc	r20, r24
    1660:	80 e4       	ldi	r24, 0x40	; 64
    1662:	58 07       	cpc	r21, r24
    1664:	58 f3       	brcs	.-42     	; 0x163c <__unpack_f+0x66>
    1666:	14 96       	adiw	r26, 0x04	; 4
    1668:	2d 93       	st	X+, r18
    166a:	3d 93       	st	X+, r19
    166c:	4d 93       	st	X+, r20
    166e:	5c 93       	st	X, r21
    1670:	17 97       	sbiw	r26, 0x07	; 7
    1672:	08 95       	ret
    1674:	2f 3f       	cpi	r18, 0xFF	; 255
    1676:	31 05       	cpc	r19, r1
    1678:	79 f4       	brne	.+30     	; 0x1698 <__unpack_f+0xc2>
    167a:	41 15       	cp	r20, r1
    167c:	51 05       	cpc	r21, r1
    167e:	61 05       	cpc	r22, r1
    1680:	71 05       	cpc	r23, r1
    1682:	19 f4       	brne	.+6      	; 0x168a <__unpack_f+0xb4>
    1684:	84 e0       	ldi	r24, 0x04	; 4
    1686:	8c 93       	st	X, r24
    1688:	08 95       	ret
    168a:	64 ff       	sbrs	r22, 4
    168c:	03 c0       	rjmp	.+6      	; 0x1694 <__unpack_f+0xbe>
    168e:	81 e0       	ldi	r24, 0x01	; 1
    1690:	8c 93       	st	X, r24
    1692:	12 c0       	rjmp	.+36     	; 0x16b8 <__unpack_f+0xe2>
    1694:	1c 92       	st	X, r1
    1696:	10 c0       	rjmp	.+32     	; 0x16b8 <__unpack_f+0xe2>
    1698:	2f 57       	subi	r18, 0x7F	; 127
    169a:	30 40       	sbci	r19, 0x00	; 0
    169c:	13 96       	adiw	r26, 0x03	; 3
    169e:	3c 93       	st	X, r19
    16a0:	2e 93       	st	-X, r18
    16a2:	12 97       	sbiw	r26, 0x02	; 2
    16a4:	83 e0       	ldi	r24, 0x03	; 3
    16a6:	8c 93       	st	X, r24
    16a8:	87 e0       	ldi	r24, 0x07	; 7
    16aa:	44 0f       	add	r20, r20
    16ac:	55 1f       	adc	r21, r21
    16ae:	66 1f       	adc	r22, r22
    16b0:	77 1f       	adc	r23, r23
    16b2:	8a 95       	dec	r24
    16b4:	d1 f7       	brne	.-12     	; 0x16aa <__unpack_f+0xd4>
    16b6:	70 64       	ori	r23, 0x40	; 64
    16b8:	14 96       	adiw	r26, 0x04	; 4
    16ba:	4d 93       	st	X+, r20
    16bc:	5d 93       	st	X+, r21
    16be:	6d 93       	st	X+, r22
    16c0:	7c 93       	st	X, r23
    16c2:	17 97       	sbiw	r26, 0x07	; 7
    16c4:	08 95       	ret

000016c6 <__fpcmp_parts_f>:
    16c6:	1f 93       	push	r17
    16c8:	dc 01       	movw	r26, r24
    16ca:	fb 01       	movw	r30, r22
    16cc:	9c 91       	ld	r25, X
    16ce:	92 30       	cpi	r25, 0x02	; 2
    16d0:	08 f4       	brcc	.+2      	; 0x16d4 <__fpcmp_parts_f+0xe>
    16d2:	47 c0       	rjmp	.+142    	; 0x1762 <__fpcmp_parts_f+0x9c>
    16d4:	80 81       	ld	r24, Z
    16d6:	82 30       	cpi	r24, 0x02	; 2
    16d8:	08 f4       	brcc	.+2      	; 0x16dc <__fpcmp_parts_f+0x16>
    16da:	43 c0       	rjmp	.+134    	; 0x1762 <__fpcmp_parts_f+0x9c>
    16dc:	94 30       	cpi	r25, 0x04	; 4
    16de:	51 f4       	brne	.+20     	; 0x16f4 <__fpcmp_parts_f+0x2e>
    16e0:	11 96       	adiw	r26, 0x01	; 1
    16e2:	1c 91       	ld	r17, X
    16e4:	84 30       	cpi	r24, 0x04	; 4
    16e6:	99 f5       	brne	.+102    	; 0x174e <__fpcmp_parts_f+0x88>
    16e8:	81 81       	ldd	r24, Z+1	; 0x01
    16ea:	68 2f       	mov	r22, r24
    16ec:	70 e0       	ldi	r23, 0x00	; 0
    16ee:	61 1b       	sub	r22, r17
    16f0:	71 09       	sbc	r23, r1
    16f2:	3f c0       	rjmp	.+126    	; 0x1772 <__fpcmp_parts_f+0xac>
    16f4:	84 30       	cpi	r24, 0x04	; 4
    16f6:	21 f0       	breq	.+8      	; 0x1700 <__fpcmp_parts_f+0x3a>
    16f8:	92 30       	cpi	r25, 0x02	; 2
    16fa:	31 f4       	brne	.+12     	; 0x1708 <__fpcmp_parts_f+0x42>
    16fc:	82 30       	cpi	r24, 0x02	; 2
    16fe:	b9 f1       	breq	.+110    	; 0x176e <__fpcmp_parts_f+0xa8>
    1700:	81 81       	ldd	r24, Z+1	; 0x01
    1702:	88 23       	and	r24, r24
    1704:	89 f1       	breq	.+98     	; 0x1768 <__fpcmp_parts_f+0xa2>
    1706:	2d c0       	rjmp	.+90     	; 0x1762 <__fpcmp_parts_f+0x9c>
    1708:	11 96       	adiw	r26, 0x01	; 1
    170a:	1c 91       	ld	r17, X
    170c:	11 97       	sbiw	r26, 0x01	; 1
    170e:	82 30       	cpi	r24, 0x02	; 2
    1710:	f1 f0       	breq	.+60     	; 0x174e <__fpcmp_parts_f+0x88>
    1712:	81 81       	ldd	r24, Z+1	; 0x01
    1714:	18 17       	cp	r17, r24
    1716:	d9 f4       	brne	.+54     	; 0x174e <__fpcmp_parts_f+0x88>
    1718:	12 96       	adiw	r26, 0x02	; 2
    171a:	2d 91       	ld	r18, X+
    171c:	3c 91       	ld	r19, X
    171e:	13 97       	sbiw	r26, 0x03	; 3
    1720:	82 81       	ldd	r24, Z+2	; 0x02
    1722:	93 81       	ldd	r25, Z+3	; 0x03
    1724:	82 17       	cp	r24, r18
    1726:	93 07       	cpc	r25, r19
    1728:	94 f0       	brlt	.+36     	; 0x174e <__fpcmp_parts_f+0x88>
    172a:	28 17       	cp	r18, r24
    172c:	39 07       	cpc	r19, r25
    172e:	bc f0       	brlt	.+46     	; 0x175e <__fpcmp_parts_f+0x98>
    1730:	14 96       	adiw	r26, 0x04	; 4
    1732:	8d 91       	ld	r24, X+
    1734:	9d 91       	ld	r25, X+
    1736:	0d 90       	ld	r0, X+
    1738:	bc 91       	ld	r27, X
    173a:	a0 2d       	mov	r26, r0
    173c:	24 81       	ldd	r18, Z+4	; 0x04
    173e:	35 81       	ldd	r19, Z+5	; 0x05
    1740:	46 81       	ldd	r20, Z+6	; 0x06
    1742:	57 81       	ldd	r21, Z+7	; 0x07
    1744:	28 17       	cp	r18, r24
    1746:	39 07       	cpc	r19, r25
    1748:	4a 07       	cpc	r20, r26
    174a:	5b 07       	cpc	r21, r27
    174c:	18 f4       	brcc	.+6      	; 0x1754 <__fpcmp_parts_f+0x8e>
    174e:	11 23       	and	r17, r17
    1750:	41 f0       	breq	.+16     	; 0x1762 <__fpcmp_parts_f+0x9c>
    1752:	0a c0       	rjmp	.+20     	; 0x1768 <__fpcmp_parts_f+0xa2>
    1754:	82 17       	cp	r24, r18
    1756:	93 07       	cpc	r25, r19
    1758:	a4 07       	cpc	r26, r20
    175a:	b5 07       	cpc	r27, r21
    175c:	40 f4       	brcc	.+16     	; 0x176e <__fpcmp_parts_f+0xa8>
    175e:	11 23       	and	r17, r17
    1760:	19 f0       	breq	.+6      	; 0x1768 <__fpcmp_parts_f+0xa2>
    1762:	61 e0       	ldi	r22, 0x01	; 1
    1764:	70 e0       	ldi	r23, 0x00	; 0
    1766:	05 c0       	rjmp	.+10     	; 0x1772 <__fpcmp_parts_f+0xac>
    1768:	6f ef       	ldi	r22, 0xFF	; 255
    176a:	7f ef       	ldi	r23, 0xFF	; 255
    176c:	02 c0       	rjmp	.+4      	; 0x1772 <__fpcmp_parts_f+0xac>
    176e:	60 e0       	ldi	r22, 0x00	; 0
    1770:	70 e0       	ldi	r23, 0x00	; 0
    1772:	cb 01       	movw	r24, r22
    1774:	1f 91       	pop	r17
    1776:	08 95       	ret

00001778 <__prologue_saves__>:
    1778:	2f 92       	push	r2
    177a:	3f 92       	push	r3
    177c:	4f 92       	push	r4
    177e:	5f 92       	push	r5
    1780:	6f 92       	push	r6
    1782:	7f 92       	push	r7
    1784:	8f 92       	push	r8
    1786:	9f 92       	push	r9
    1788:	af 92       	push	r10
    178a:	bf 92       	push	r11
    178c:	cf 92       	push	r12
    178e:	df 92       	push	r13
    1790:	ef 92       	push	r14
    1792:	ff 92       	push	r15
    1794:	0f 93       	push	r16
    1796:	1f 93       	push	r17
    1798:	cf 93       	push	r28
    179a:	df 93       	push	r29
    179c:	cd b7       	in	r28, 0x3d	; 61
    179e:	de b7       	in	r29, 0x3e	; 62
    17a0:	ca 1b       	sub	r28, r26
    17a2:	db 0b       	sbc	r29, r27
    17a4:	0f b6       	in	r0, 0x3f	; 63
    17a6:	f8 94       	cli
    17a8:	de bf       	out	0x3e, r29	; 62
    17aa:	0f be       	out	0x3f, r0	; 63
    17ac:	cd bf       	out	0x3d, r28	; 61
    17ae:	09 94       	ijmp

000017b0 <__epilogue_restores__>:
    17b0:	2a 88       	ldd	r2, Y+18	; 0x12
    17b2:	39 88       	ldd	r3, Y+17	; 0x11
    17b4:	48 88       	ldd	r4, Y+16	; 0x10
    17b6:	5f 84       	ldd	r5, Y+15	; 0x0f
    17b8:	6e 84       	ldd	r6, Y+14	; 0x0e
    17ba:	7d 84       	ldd	r7, Y+13	; 0x0d
    17bc:	8c 84       	ldd	r8, Y+12	; 0x0c
    17be:	9b 84       	ldd	r9, Y+11	; 0x0b
    17c0:	aa 84       	ldd	r10, Y+10	; 0x0a
    17c2:	b9 84       	ldd	r11, Y+9	; 0x09
    17c4:	c8 84       	ldd	r12, Y+8	; 0x08
    17c6:	df 80       	ldd	r13, Y+7	; 0x07
    17c8:	ee 80       	ldd	r14, Y+6	; 0x06
    17ca:	fd 80       	ldd	r15, Y+5	; 0x05
    17cc:	0c 81       	ldd	r16, Y+4	; 0x04
    17ce:	1b 81       	ldd	r17, Y+3	; 0x03
    17d0:	aa 81       	ldd	r26, Y+2	; 0x02
    17d2:	b9 81       	ldd	r27, Y+1	; 0x01
    17d4:	ce 0f       	add	r28, r30
    17d6:	d1 1d       	adc	r29, r1
    17d8:	0f b6       	in	r0, 0x3f	; 63
    17da:	f8 94       	cli
    17dc:	de bf       	out	0x3e, r29	; 62
    17de:	0f be       	out	0x3f, r0	; 63
    17e0:	cd bf       	out	0x3d, r28	; 61
    17e2:	ed 01       	movw	r28, r26
    17e4:	08 95       	ret

000017e6 <_exit>:
    17e6:	f8 94       	cli

000017e8 <__stop_program>:
    17e8:	ff cf       	rjmp	.-2      	; 0x17e8 <__stop_program>
