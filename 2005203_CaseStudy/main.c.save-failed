#include"GPIO.h"

volatile uint8_t isr0=0;
volatile uint8_t isr1=0;


void adc_init()
{
    ADMUX=0x00;
    ADMUX |= (1 << REFS0);
    ADCSRA|=(1<<ADEN);
}

uint16_t adc_read()
{
    int a,al;
    ADCSRA |= (1 << ADSC);
    while((ADCSRA&(1<<ADSC))==0);
    _delay_us(100);
    al=(int)ADCL;
    a=(int)ADCH*256;
    a=a+al;
    return a;
}

void PWM_init()
{
    GPIOConfig(PD6,OUTPUT);
    TCCR0A|=((1<<WGM01)|(1<<WGM00));
    TCCR0A|=(1<<COM0A1);
    TCCR0A&=~(1<<COM0A0);
    TCNT0=0x00;
    TCCR0B |= ((1 << CS00) | (1 << CS02));
    TCCR0B &= ~(1 << CS01);
}

void standby()
{
    GPIOPinWrite(PD6,LOW);
}

void manual()
{
    ADCSRA &=~ (1 << ADSC);
    OCR0A=127;
}

void auto_mode()
{
    adc_init();
    uint16_t x=adc_read();
    if(x<=50&&x>0)
    {
        OCR0A=0;
    }
    else if(x>50&&x<=200)
    {
        OCR0A=63;
    }
    else if(x>200&&x<=500)
    {
        OCR0A=127;
    }
    else if(x>500&&x<=1000)
    {
        OCR0A=190;
    }
    else if(x>1000)
    {
        OCR0A=254;
    }
}

void app()
{
    if(isr1==1&&isr0==1)
    {
        auto_mode();
    }
    else if(isr1==0&&isr0==1)
    {
        manual();
    }
    else
    {
        standby();
    }
}

int main()
{
    sei();
    PORTC=0x00;
    GPIOConfig(PD2,INPUT);
    GPIOConfig(PD3,INPUT);
    GPIOConfig(PD6,OUTPUT);

    EIMSK|=(1<<INT1)|(1<<INT0);
    EICRA|=(1<<ISC00);
    EICRA&=~(1<<ISC01);
    EICRA|=(1<<ISC10);
    EICRA&=~(1<<ISC11);

    adc_init();
    PWM_init();

    while(1)
    {
        app();
    }
}

ISR(INT0_vect)
{
     isr0=isr0^1;
}

ISR(INT1_vect)
{
    isr1=isr1^1;
}
