
bin\Debug\2005203_Lab_activity_5.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000108  00800100  00001260  00001314  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001260  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000005  00800208  00800208  0000141c  2**0
                  ALLOC
  3 .fuse         00000003  00820000  00820000  0000141c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .debug_aranges 000001c0  00000000  00000000  0000141f  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 000002f6  00000000  00000000  000015df  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001c6c  00000000  00000000  000018d5  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001037  00000000  00000000  00003541  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000011f8  00000000  00000000  00004578  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000220  00000000  00000000  00005770  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000441  00000000  00000000  00005990  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000496  00000000  00000000  00005dd1  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  00006267  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 a1 04 	jmp	0x942	; 0x942 <__vector_1>
       8:	0c 94 8a 04 	jmp	0x914	; 0x914 <__vector_2>
       c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      40:	0c 94 5d 04 	jmp	0x8ba	; 0x8ba <__vector_16>
      44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
      74:	12 e0       	ldi	r17, 0x02	; 2
      76:	a8 e0       	ldi	r26, 0x08	; 8
      78:	b2 e0       	ldi	r27, 0x02	; 2
      7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
      7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
      7e:	ad 30       	cpi	r26, 0x0D	; 13
      80:	b1 07       	cpc	r27, r17
      82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>

00000084 <__do_copy_data>:
      84:	12 e0       	ldi	r17, 0x02	; 2
      86:	a0 e0       	ldi	r26, 0x00	; 0
      88:	b1 e0       	ldi	r27, 0x01	; 1
      8a:	e0 e6       	ldi	r30, 0x60	; 96
      8c:	f2 e1       	ldi	r31, 0x12	; 18
      8e:	02 c0       	rjmp	.+4      	; 0x94 <.do_copy_data_start>

00000090 <.do_copy_data_loop>:
      90:	05 90       	lpm	r0, Z+
      92:	0d 92       	st	X+, r0

00000094 <.do_copy_data_start>:
      94:	a8 30       	cpi	r26, 0x08	; 8
      96:	b1 07       	cpc	r27, r17
      98:	d9 f7       	brne	.-10     	; 0x90 <.do_copy_data_loop>
      9a:	0e 94 29 04 	call	0x852	; 0x852 <main>
      9e:	0c 94 2e 09 	jmp	0x125c	; 0x125c <_exit>

000000a2 <__bad_interrupt>:
      a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <adc_init>:
* Arguments: NA
* Returns: None
******************************************************************************/

void adc_init()
{
      a6:	df 93       	push	r29
      a8:	cf 93       	push	r28
      aa:	00 d0       	rcall	.+0      	; 0xac <adc_init+0x6>
      ac:	0f 92       	push	r0
      ae:	cd b7       	in	r28, 0x3d	; 61
      b0:	de b7       	in	r29, 0x3e	; 62
uint16_t ADC_value;
ADMUX &= 0x00;
      b2:	ec e7       	ldi	r30, 0x7C	; 124
      b4:	f0 e0       	ldi	r31, 0x00	; 0
      b6:	80 81       	ld	r24, Z
      b8:	ec e7       	ldi	r30, 0x7C	; 124
      ba:	f0 e0       	ldi	r31, 0x00	; 0
      bc:	10 82       	st	Z, r1
ADMUX |= (1 << REFS0);
      be:	ac e7       	ldi	r26, 0x7C	; 124
      c0:	b0 e0       	ldi	r27, 0x00	; 0
      c2:	ec e7       	ldi	r30, 0x7C	; 124
      c4:	f0 e0       	ldi	r31, 0x00	; 0
      c6:	80 81       	ld	r24, Z
      c8:	80 64       	ori	r24, 0x40	; 64
      ca:	8c 93       	st	X, r24
ADCSRA |= (1 << ADEN);
      cc:	aa e7       	ldi	r26, 0x7A	; 122
      ce:	b0 e0       	ldi	r27, 0x00	; 0
      d0:	ea e7       	ldi	r30, 0x7A	; 122
      d2:	f0 e0       	ldi	r31, 0x00	; 0
      d4:	80 81       	ld	r24, Z
      d6:	80 68       	ori	r24, 0x80	; 128
      d8:	8c 93       	st	X, r24

}
      da:	0f 90       	pop	r0
      dc:	0f 90       	pop	r0
      de:	0f 90       	pop	r0
      e0:	cf 91       	pop	r28
      e2:	df 91       	pop	r29
      e4:	08 95       	ret

000000e6 <AppMode>:
******************************************************************************/
/******************************************************************************
* Internal functions
******************************************************************************/
void AppMode()
{
      e6:	df 93       	push	r29
      e8:	cf 93       	push	r28
      ea:	cd b7       	in	r28, 0x3d	; 61
      ec:	de b7       	in	r29, 0x3e	; 62
      ee:	2a 97       	sbiw	r28, 0x0a	; 10
      f0:	0f b6       	in	r0, 0x3f	; 63
      f2:	f8 94       	cli
      f4:	de bf       	out	0x3e, r29	; 62
      f6:	0f be       	out	0x3f, r0	; 63
      f8:	cd bf       	out	0x3d, r28	; 61
ADCSRA |= (1 << ADSC);
      fa:	aa e7       	ldi	r26, 0x7A	; 122
      fc:	b0 e0       	ldi	r27, 0x00	; 0
      fe:	ea e7       	ldi	r30, 0x7A	; 122
     100:	f0 e0       	ldi	r31, 0x00	; 0
     102:	80 81       	ld	r24, Z
     104:	80 64       	ori	r24, 0x40	; 64
     106:	8c 93       	st	X, r24
while (ADCSRA & (1 << ADSC));
     108:	ea e7       	ldi	r30, 0x7A	; 122
     10a:	f0 e0       	ldi	r31, 0x00	; 0
     10c:	80 81       	ld	r24, Z
     10e:	88 2f       	mov	r24, r24
     110:	90 e0       	ldi	r25, 0x00	; 0
     112:	80 74       	andi	r24, 0x40	; 64
     114:	90 70       	andi	r25, 0x00	; 0
     116:	00 97       	sbiw	r24, 0x00	; 0
     118:	b9 f7       	brne	.-18     	; 0x108 <AppMode+0x22>
ADC_value = ADC;
     11a:	e8 e7       	ldi	r30, 0x78	; 120
     11c:	f0 e0       	ldi	r31, 0x00	; 0
     11e:	80 81       	ld	r24, Z
     120:	91 81       	ldd	r25, Z+1	; 0x01
     122:	90 93 0c 02 	sts	0x020C, r25
     126:	80 93 0b 02 	sts	0x020B, r24
float voltage = (5.0/1023.0)*((float)ADC_value);
     12a:	80 91 0b 02 	lds	r24, 0x020B
     12e:	90 91 0c 02 	lds	r25, 0x020C
     132:	cc 01       	movw	r24, r24
     134:	a0 e0       	ldi	r26, 0x00	; 0
     136:	b0 e0       	ldi	r27, 0x00	; 0
     138:	bc 01       	movw	r22, r24
     13a:	cd 01       	movw	r24, r26
     13c:	0e 94 89 06 	call	0xd12	; 0xd12 <__floatunsisf>
     140:	dc 01       	movw	r26, r24
     142:	cb 01       	movw	r24, r22
     144:	bc 01       	movw	r22, r24
     146:	cd 01       	movw	r24, r26
     148:	2a e0       	ldi	r18, 0x0A	; 10
     14a:	38 e2       	ldi	r19, 0x28	; 40
     14c:	40 ea       	ldi	r20, 0xA0	; 160
     14e:	5b e3       	ldi	r21, 0x3B	; 59
     150:	0e 94 2f 05 	call	0xa5e	; 0xa5e <__mulsf3>
     154:	dc 01       	movw	r26, r24
     156:	cb 01       	movw	r24, r22
     158:	89 83       	std	Y+1, r24	; 0x01
     15a:	9a 83       	std	Y+2, r25	; 0x02
     15c:	ab 83       	std	Y+3, r26	; 0x03
     15e:	bc 83       	std	Y+4, r27	; 0x04


////if(PIN_READ & (1<<PD0))
if(GPIOPinRead(PD0))
     160:	80 e0       	ldi	r24, 0x00	; 0
     162:	0e 94 8b 03 	call	0x716	; 0x716 <GPIOPinRead>
     166:	88 23       	and	r24, r24
     168:	71 f0       	breq	.+28     	; 0x186 <AppMode+0xa0>
{
////Stand-by mode:

//CLR_BIT(PORTD,PD6);
if(FLAG_BIT.FLAG_TIMER==1)
     16a:	80 91 0a 02 	lds	r24, 0x020A
     16e:	81 70       	andi	r24, 0x01	; 1
     170:	88 23       	and	r24, r24
     172:	09 f4       	brne	.+2      	; 0x176 <AppMode+0x90>
     174:	a6 c0       	rjmp	.+332    	; 0x2c2 <AppMode+0x1dc>
{
FLAG_BIT.FLAG_TIMER = 0;
     176:	80 91 0a 02 	lds	r24, 0x020A
     17a:	8e 7f       	andi	r24, 0xFE	; 254
     17c:	80 93 0a 02 	sts	0x020A, r24

////GPIOPinWrite(PB7,LOW);
standymode();
     180:	0e 94 b8 04 	call	0x970	; 0x970 <standymode>
     184:	9e c0       	rjmp	.+316    	; 0x2c2 <AppMode+0x1dc>
}

else
{
 ////Sampling mode:
SET_BIT(PORTB,PB7);
     186:	a5 e2       	ldi	r26, 0x25	; 37
     188:	b0 e0       	ldi	r27, 0x00	; 0
     18a:	e5 e2       	ldi	r30, 0x25	; 37
     18c:	f0 e0       	ldi	r31, 0x00	; 0
     18e:	80 81       	ld	r24, Z
     190:	80 68       	ori	r24, 0x80	; 128
     192:	8c 93       	st	X, r24
///GPIOPinWrite(PB7,HIGH);


if(0.0 <= voltage && voltage < 1.0)
     194:	1a 86       	std	Y+10, r1	; 0x0a
     196:	69 81       	ldd	r22, Y+1	; 0x01
     198:	7a 81       	ldd	r23, Y+2	; 0x02
     19a:	8b 81       	ldd	r24, Y+3	; 0x03
     19c:	9c 81       	ldd	r25, Y+4	; 0x04
     19e:	20 e0       	ldi	r18, 0x00	; 0
     1a0:	30 e0       	ldi	r19, 0x00	; 0
     1a2:	40 e0       	ldi	r20, 0x00	; 0
     1a4:	50 e0       	ldi	r21, 0x00	; 0
     1a6:	0e 94 29 06 	call	0xc52	; 0xc52 <__gesf2>
     1aa:	88 23       	and	r24, r24
     1ac:	14 f0       	brlt	.+4      	; 0x1b2 <AppMode+0xcc>
     1ae:	81 e0       	ldi	r24, 0x01	; 1
     1b0:	8a 87       	std	Y+10, r24	; 0x0a
     1b2:	81 e0       	ldi	r24, 0x01	; 1
     1b4:	9a 85       	ldd	r25, Y+10	; 0x0a
     1b6:	89 27       	eor	r24, r25
     1b8:	88 23       	and	r24, r24
     1ba:	c9 f4       	brne	.+50     	; 0x1ee <AppMode+0x108>
     1bc:	19 86       	std	Y+9, r1	; 0x09
     1be:	69 81       	ldd	r22, Y+1	; 0x01
     1c0:	7a 81       	ldd	r23, Y+2	; 0x02
     1c2:	8b 81       	ldd	r24, Y+3	; 0x03
     1c4:	9c 81       	ldd	r25, Y+4	; 0x04
     1c6:	20 e0       	ldi	r18, 0x00	; 0
     1c8:	30 e0       	ldi	r19, 0x00	; 0
     1ca:	40 e8       	ldi	r20, 0x80	; 128
     1cc:	5f e3       	ldi	r21, 0x3F	; 63
     1ce:	0e 94 59 06 	call	0xcb2	; 0xcb2 <__ltsf2>
     1d2:	88 23       	and	r24, r24
     1d4:	14 f4       	brge	.+4      	; 0x1da <AppMode+0xf4>
     1d6:	81 e0       	ldi	r24, 0x01	; 1
     1d8:	89 87       	std	Y+9, r24	; 0x09
     1da:	81 e0       	ldi	r24, 0x01	; 1
     1dc:	99 85       	ldd	r25, Y+9	; 0x09
     1de:	89 27       	eor	r24, r25
     1e0:	88 23       	and	r24, r24
     1e2:	29 f4       	brne	.+10     	; 0x1ee <AppMode+0x108>
{
OCR0A=64.0;
     1e4:	e7 e4       	ldi	r30, 0x47	; 71
     1e6:	f0 e0       	ldi	r31, 0x00	; 0
     1e8:	80 e4       	ldi	r24, 0x40	; 64
     1ea:	80 83       	st	Z, r24
     1ec:	6a c0       	rjmp	.+212    	; 0x2c2 <AppMode+0x1dc>
}
else if(1.0 <= voltage && voltage < 2.0)
     1ee:	18 86       	std	Y+8, r1	; 0x08
     1f0:	69 81       	ldd	r22, Y+1	; 0x01
     1f2:	7a 81       	ldd	r23, Y+2	; 0x02
     1f4:	8b 81       	ldd	r24, Y+3	; 0x03
     1f6:	9c 81       	ldd	r25, Y+4	; 0x04
     1f8:	20 e0       	ldi	r18, 0x00	; 0
     1fa:	30 e0       	ldi	r19, 0x00	; 0
     1fc:	40 e8       	ldi	r20, 0x80	; 128
     1fe:	5f e3       	ldi	r21, 0x3F	; 63
     200:	0e 94 29 06 	call	0xc52	; 0xc52 <__gesf2>
     204:	88 23       	and	r24, r24
     206:	14 f0       	brlt	.+4      	; 0x20c <AppMode+0x126>
     208:	81 e0       	ldi	r24, 0x01	; 1
     20a:	88 87       	std	Y+8, r24	; 0x08
     20c:	81 e0       	ldi	r24, 0x01	; 1
     20e:	98 85       	ldd	r25, Y+8	; 0x08
     210:	89 27       	eor	r24, r25
     212:	88 23       	and	r24, r24
     214:	c9 f4       	brne	.+50     	; 0x248 <AppMode+0x162>
     216:	1f 82       	std	Y+7, r1	; 0x07
     218:	69 81       	ldd	r22, Y+1	; 0x01
     21a:	7a 81       	ldd	r23, Y+2	; 0x02
     21c:	8b 81       	ldd	r24, Y+3	; 0x03
     21e:	9c 81       	ldd	r25, Y+4	; 0x04
     220:	20 e0       	ldi	r18, 0x00	; 0
     222:	30 e0       	ldi	r19, 0x00	; 0
     224:	40 e0       	ldi	r20, 0x00	; 0
     226:	50 e4       	ldi	r21, 0x40	; 64
     228:	0e 94 59 06 	call	0xcb2	; 0xcb2 <__ltsf2>
     22c:	88 23       	and	r24, r24
     22e:	14 f4       	brge	.+4      	; 0x234 <AppMode+0x14e>
     230:	81 e0       	ldi	r24, 0x01	; 1
     232:	8f 83       	std	Y+7, r24	; 0x07
     234:	81 e0       	ldi	r24, 0x01	; 1
     236:	9f 81       	ldd	r25, Y+7	; 0x07
     238:	89 27       	eor	r24, r25
     23a:	88 23       	and	r24, r24
     23c:	29 f4       	brne	.+10     	; 0x248 <AppMode+0x162>
{
OCR0A=128.0;
     23e:	e7 e4       	ldi	r30, 0x47	; 71
     240:	f0 e0       	ldi	r31, 0x00	; 0
     242:	80 e8       	ldi	r24, 0x80	; 128
     244:	80 83       	st	Z, r24
     246:	3d c0       	rjmp	.+122    	; 0x2c2 <AppMode+0x1dc>
}
else if(2.0 <= voltage && voltage < 3.0)
     248:	1e 82       	std	Y+6, r1	; 0x06
     24a:	69 81       	ldd	r22, Y+1	; 0x01
     24c:	7a 81       	ldd	r23, Y+2	; 0x02
     24e:	8b 81       	ldd	r24, Y+3	; 0x03
     250:	9c 81       	ldd	r25, Y+4	; 0x04
     252:	20 e0       	ldi	r18, 0x00	; 0
     254:	30 e0       	ldi	r19, 0x00	; 0
     256:	40 e0       	ldi	r20, 0x00	; 0
     258:	50 e4       	ldi	r21, 0x40	; 64
     25a:	0e 94 29 06 	call	0xc52	; 0xc52 <__gesf2>
     25e:	88 23       	and	r24, r24
     260:	14 f0       	brlt	.+4      	; 0x266 <AppMode+0x180>
     262:	81 e0       	ldi	r24, 0x01	; 1
     264:	8e 83       	std	Y+6, r24	; 0x06
     266:	81 e0       	ldi	r24, 0x01	; 1
     268:	9e 81       	ldd	r25, Y+6	; 0x06
     26a:	89 27       	eor	r24, r25
     26c:	88 23       	and	r24, r24
     26e:	c9 f4       	brne	.+50     	; 0x2a2 <AppMode+0x1bc>
     270:	1d 82       	std	Y+5, r1	; 0x05
     272:	69 81       	ldd	r22, Y+1	; 0x01
     274:	7a 81       	ldd	r23, Y+2	; 0x02
     276:	8b 81       	ldd	r24, Y+3	; 0x03
     278:	9c 81       	ldd	r25, Y+4	; 0x04
     27a:	20 e0       	ldi	r18, 0x00	; 0
     27c:	30 e0       	ldi	r19, 0x00	; 0
     27e:	40 e4       	ldi	r20, 0x40	; 64
     280:	50 e4       	ldi	r21, 0x40	; 64
     282:	0e 94 59 06 	call	0xcb2	; 0xcb2 <__ltsf2>
     286:	88 23       	and	r24, r24
     288:	14 f4       	brge	.+4      	; 0x28e <AppMode+0x1a8>
     28a:	81 e0       	ldi	r24, 0x01	; 1
     28c:	8d 83       	std	Y+5, r24	; 0x05
     28e:	81 e0       	ldi	r24, 0x01	; 1
     290:	9d 81       	ldd	r25, Y+5	; 0x05
     292:	89 27       	eor	r24, r25
     294:	88 23       	and	r24, r24
     296:	29 f4       	brne	.+10     	; 0x2a2 <AppMode+0x1bc>
{
OCR0A=192.0;
     298:	e7 e4       	ldi	r30, 0x47	; 71
     29a:	f0 e0       	ldi	r31, 0x00	; 0
     29c:	80 ec       	ldi	r24, 0xC0	; 192
     29e:	80 83       	st	Z, r24
     2a0:	10 c0       	rjmp	.+32     	; 0x2c2 <AppMode+0x1dc>
}
else if(voltage >= 3.0)
     2a2:	69 81       	ldd	r22, Y+1	; 0x01
     2a4:	7a 81       	ldd	r23, Y+2	; 0x02
     2a6:	8b 81       	ldd	r24, Y+3	; 0x03
     2a8:	9c 81       	ldd	r25, Y+4	; 0x04
     2aa:	20 e0       	ldi	r18, 0x00	; 0
     2ac:	30 e0       	ldi	r19, 0x00	; 0
     2ae:	40 e4       	ldi	r20, 0x40	; 64
     2b0:	50 e4       	ldi	r21, 0x40	; 64
     2b2:	0e 94 29 06 	call	0xc52	; 0xc52 <__gesf2>
     2b6:	88 23       	and	r24, r24
     2b8:	24 f0       	brlt	.+8      	; 0x2c2 <AppMode+0x1dc>
{
OCR0A=255.0;
     2ba:	e7 e4       	ldi	r30, 0x47	; 71
     2bc:	f0 e0       	ldi	r31, 0x00	; 0
     2be:	8f ef       	ldi	r24, 0xFF	; 255
     2c0:	80 83       	st	Z, r24
}


}

}
     2c2:	2a 96       	adiw	r28, 0x0a	; 10
     2c4:	0f b6       	in	r0, 0x3f	; 63
     2c6:	f8 94       	cli
     2c8:	de bf       	out	0x3e, r29	; 62
     2ca:	0f be       	out	0x3f, r0	; 63
     2cc:	cd bf       	out	0x3d, r28	; 61
     2ce:	cf 91       	pop	r28
     2d0:	df 91       	pop	r29
     2d2:	08 95       	ret

000002d4 <GPIOConfig>:
* Description: Configures the mode of the pin as INPUT/PULLUP or OUTPUT
* Arguments: pin and mode
* Returns: None
******************************************************************************/
void GPIOConfig(uint8_t pin,uint8_t mode)
{
     2d4:	df 93       	push	r29
     2d6:	cf 93       	push	r28
     2d8:	00 d0       	rcall	.+0      	; 0x2da <GPIOConfig+0x6>
     2da:	cd b7       	in	r28, 0x3d	; 61
     2dc:	de b7       	in	r29, 0x3e	; 62
     2de:	89 83       	std	Y+1, r24	; 0x01
     2e0:	6a 83       	std	Y+2, r22	; 0x02
    if(mode==INPUT)
     2e2:	8a 81       	ldd	r24, Y+2	; 0x02
     2e4:	88 23       	and	r24, r24
     2e6:	09 f0       	breq	.+2      	; 0x2ea <GPIOConfig+0x16>
     2e8:	b7 c0       	rjmp	.+366    	; 0x458 <GPIOConfig+0x184>
    {
        if(pin==PD7||pin==PD6||pin==PD5||pin==PD4||pin==PD3||pin==PD2||pin==PD1||pin==PD0)
     2ea:	89 81       	ldd	r24, Y+1	; 0x01
     2ec:	87 30       	cpi	r24, 0x07	; 7
     2ee:	a9 f0       	breq	.+42     	; 0x31a <GPIOConfig+0x46>
     2f0:	89 81       	ldd	r24, Y+1	; 0x01
     2f2:	86 30       	cpi	r24, 0x06	; 6
     2f4:	91 f0       	breq	.+36     	; 0x31a <GPIOConfig+0x46>
     2f6:	89 81       	ldd	r24, Y+1	; 0x01
     2f8:	85 30       	cpi	r24, 0x05	; 5
     2fa:	79 f0       	breq	.+30     	; 0x31a <GPIOConfig+0x46>
     2fc:	89 81       	ldd	r24, Y+1	; 0x01
     2fe:	84 30       	cpi	r24, 0x04	; 4
     300:	61 f0       	breq	.+24     	; 0x31a <GPIOConfig+0x46>
     302:	89 81       	ldd	r24, Y+1	; 0x01
     304:	83 30       	cpi	r24, 0x03	; 3
     306:	49 f0       	breq	.+18     	; 0x31a <GPIOConfig+0x46>
     308:	89 81       	ldd	r24, Y+1	; 0x01
     30a:	82 30       	cpi	r24, 0x02	; 2
     30c:	31 f0       	breq	.+12     	; 0x31a <GPIOConfig+0x46>
     30e:	89 81       	ldd	r24, Y+1	; 0x01
     310:	81 30       	cpi	r24, 0x01	; 1
     312:	19 f0       	breq	.+6      	; 0x31a <GPIOConfig+0x46>
     314:	89 81       	ldd	r24, Y+1	; 0x01
     316:	88 23       	and	r24, r24
     318:	31 f5       	brne	.+76     	; 0x366 <GPIOConfig+0x92>
        {
            CLR_BIT(DDRD,pin);
     31a:	aa e2       	ldi	r26, 0x2A	; 42
     31c:	b0 e0       	ldi	r27, 0x00	; 0
     31e:	ea e2       	ldi	r30, 0x2A	; 42
     320:	f0 e0       	ldi	r31, 0x00	; 0
     322:	80 81       	ld	r24, Z
     324:	48 2f       	mov	r20, r24
     326:	89 81       	ldd	r24, Y+1	; 0x01
     328:	28 2f       	mov	r18, r24
     32a:	30 e0       	ldi	r19, 0x00	; 0
     32c:	81 e0       	ldi	r24, 0x01	; 1
     32e:	90 e0       	ldi	r25, 0x00	; 0
     330:	02 c0       	rjmp	.+4      	; 0x336 <GPIOConfig+0x62>
     332:	88 0f       	add	r24, r24
     334:	99 1f       	adc	r25, r25
     336:	2a 95       	dec	r18
     338:	e2 f7       	brpl	.-8      	; 0x332 <GPIOConfig+0x5e>
     33a:	80 95       	com	r24
     33c:	84 23       	and	r24, r20
     33e:	8c 93       	st	X, r24
            SET_BIT(PORTD,pin);
     340:	ab e2       	ldi	r26, 0x2B	; 43
     342:	b0 e0       	ldi	r27, 0x00	; 0
     344:	eb e2       	ldi	r30, 0x2B	; 43
     346:	f0 e0       	ldi	r31, 0x00	; 0
     348:	80 81       	ld	r24, Z
     34a:	48 2f       	mov	r20, r24
     34c:	89 81       	ldd	r24, Y+1	; 0x01
     34e:	28 2f       	mov	r18, r24
     350:	30 e0       	ldi	r19, 0x00	; 0
     352:	81 e0       	ldi	r24, 0x01	; 1
     354:	90 e0       	ldi	r25, 0x00	; 0
     356:	02 2e       	mov	r0, r18
     358:	02 c0       	rjmp	.+4      	; 0x35e <GPIOConfig+0x8a>
     35a:	88 0f       	add	r24, r24
     35c:	99 1f       	adc	r25, r25
     35e:	0a 94       	dec	r0
     360:	e2 f7       	brpl	.-8      	; 0x35a <GPIOConfig+0x86>
     362:	84 2b       	or	r24, r20
     364:	8c 93       	st	X, r24
        }
        if(pin==PB7||pin==PB6||pin==PB5||pin==PB4||pin==PB3||pin==PB2||pin==PB1||pin==PB0)
     366:	89 81       	ldd	r24, Y+1	; 0x01
     368:	87 30       	cpi	r24, 0x07	; 7
     36a:	a9 f0       	breq	.+42     	; 0x396 <GPIOConfig+0xc2>
     36c:	89 81       	ldd	r24, Y+1	; 0x01
     36e:	86 30       	cpi	r24, 0x06	; 6
     370:	91 f0       	breq	.+36     	; 0x396 <GPIOConfig+0xc2>
     372:	89 81       	ldd	r24, Y+1	; 0x01
     374:	85 30       	cpi	r24, 0x05	; 5
     376:	79 f0       	breq	.+30     	; 0x396 <GPIOConfig+0xc2>
     378:	89 81       	ldd	r24, Y+1	; 0x01
     37a:	84 30       	cpi	r24, 0x04	; 4
     37c:	61 f0       	breq	.+24     	; 0x396 <GPIOConfig+0xc2>
     37e:	89 81       	ldd	r24, Y+1	; 0x01
     380:	83 30       	cpi	r24, 0x03	; 3
     382:	49 f0       	breq	.+18     	; 0x396 <GPIOConfig+0xc2>
     384:	89 81       	ldd	r24, Y+1	; 0x01
     386:	82 30       	cpi	r24, 0x02	; 2
     388:	31 f0       	breq	.+12     	; 0x396 <GPIOConfig+0xc2>
     38a:	89 81       	ldd	r24, Y+1	; 0x01
     38c:	81 30       	cpi	r24, 0x01	; 1
     38e:	19 f0       	breq	.+6      	; 0x396 <GPIOConfig+0xc2>
     390:	89 81       	ldd	r24, Y+1	; 0x01
     392:	88 23       	and	r24, r24
     394:	31 f5       	brne	.+76     	; 0x3e2 <GPIOConfig+0x10e>
        {
            CLR_BIT(DDRB,pin);
     396:	a4 e2       	ldi	r26, 0x24	; 36
     398:	b0 e0       	ldi	r27, 0x00	; 0
     39a:	e4 e2       	ldi	r30, 0x24	; 36
     39c:	f0 e0       	ldi	r31, 0x00	; 0
     39e:	80 81       	ld	r24, Z
     3a0:	48 2f       	mov	r20, r24
     3a2:	89 81       	ldd	r24, Y+1	; 0x01
     3a4:	28 2f       	mov	r18, r24
     3a6:	30 e0       	ldi	r19, 0x00	; 0
     3a8:	81 e0       	ldi	r24, 0x01	; 1
     3aa:	90 e0       	ldi	r25, 0x00	; 0
     3ac:	02 c0       	rjmp	.+4      	; 0x3b2 <GPIOConfig+0xde>
     3ae:	88 0f       	add	r24, r24
     3b0:	99 1f       	adc	r25, r25
     3b2:	2a 95       	dec	r18
     3b4:	e2 f7       	brpl	.-8      	; 0x3ae <GPIOConfig+0xda>
     3b6:	80 95       	com	r24
     3b8:	84 23       	and	r24, r20
     3ba:	8c 93       	st	X, r24
            SET_BIT(PORTB,pin);
     3bc:	a5 e2       	ldi	r26, 0x25	; 37
     3be:	b0 e0       	ldi	r27, 0x00	; 0
     3c0:	e5 e2       	ldi	r30, 0x25	; 37
     3c2:	f0 e0       	ldi	r31, 0x00	; 0
     3c4:	80 81       	ld	r24, Z
     3c6:	48 2f       	mov	r20, r24
     3c8:	89 81       	ldd	r24, Y+1	; 0x01
     3ca:	28 2f       	mov	r18, r24
     3cc:	30 e0       	ldi	r19, 0x00	; 0
     3ce:	81 e0       	ldi	r24, 0x01	; 1
     3d0:	90 e0       	ldi	r25, 0x00	; 0
     3d2:	02 2e       	mov	r0, r18
     3d4:	02 c0       	rjmp	.+4      	; 0x3da <GPIOConfig+0x106>
     3d6:	88 0f       	add	r24, r24
     3d8:	99 1f       	adc	r25, r25
     3da:	0a 94       	dec	r0
     3dc:	e2 f7       	brpl	.-8      	; 0x3d6 <GPIOConfig+0x102>
     3de:	84 2b       	or	r24, r20
     3e0:	8c 93       	st	X, r24
        }
        if(pin==PC6||pin==PC5||pin==PC4||pin==PC3||pin==PC2||pin==PC1||pin==PC0)
     3e2:	89 81       	ldd	r24, Y+1	; 0x01
     3e4:	86 30       	cpi	r24, 0x06	; 6
     3e6:	91 f0       	breq	.+36     	; 0x40c <GPIOConfig+0x138>
     3e8:	89 81       	ldd	r24, Y+1	; 0x01
     3ea:	85 30       	cpi	r24, 0x05	; 5
     3ec:	79 f0       	breq	.+30     	; 0x40c <GPIOConfig+0x138>
     3ee:	89 81       	ldd	r24, Y+1	; 0x01
     3f0:	84 30       	cpi	r24, 0x04	; 4
     3f2:	61 f0       	breq	.+24     	; 0x40c <GPIOConfig+0x138>
     3f4:	89 81       	ldd	r24, Y+1	; 0x01
     3f6:	83 30       	cpi	r24, 0x03	; 3
     3f8:	49 f0       	breq	.+18     	; 0x40c <GPIOConfig+0x138>
     3fa:	89 81       	ldd	r24, Y+1	; 0x01
     3fc:	82 30       	cpi	r24, 0x02	; 2
     3fe:	31 f0       	breq	.+12     	; 0x40c <GPIOConfig+0x138>
     400:	89 81       	ldd	r24, Y+1	; 0x01
     402:	81 30       	cpi	r24, 0x01	; 1
     404:	19 f0       	breq	.+6      	; 0x40c <GPIOConfig+0x138>
     406:	89 81       	ldd	r24, Y+1	; 0x01
     408:	88 23       	and	r24, r24
     40a:	31 f5       	brne	.+76     	; 0x458 <GPIOConfig+0x184>
        {
            CLR_BIT(DDRC,pin);
     40c:	a7 e2       	ldi	r26, 0x27	; 39
     40e:	b0 e0       	ldi	r27, 0x00	; 0
     410:	e7 e2       	ldi	r30, 0x27	; 39
     412:	f0 e0       	ldi	r31, 0x00	; 0
     414:	80 81       	ld	r24, Z
     416:	48 2f       	mov	r20, r24
     418:	89 81       	ldd	r24, Y+1	; 0x01
     41a:	28 2f       	mov	r18, r24
     41c:	30 e0       	ldi	r19, 0x00	; 0
     41e:	81 e0       	ldi	r24, 0x01	; 1
     420:	90 e0       	ldi	r25, 0x00	; 0
     422:	02 c0       	rjmp	.+4      	; 0x428 <GPIOConfig+0x154>
     424:	88 0f       	add	r24, r24
     426:	99 1f       	adc	r25, r25
     428:	2a 95       	dec	r18
     42a:	e2 f7       	brpl	.-8      	; 0x424 <GPIOConfig+0x150>
     42c:	80 95       	com	r24
     42e:	84 23       	and	r24, r20
     430:	8c 93       	st	X, r24
            SET_BIT(PORTC,pin);
     432:	a8 e2       	ldi	r26, 0x28	; 40
     434:	b0 e0       	ldi	r27, 0x00	; 0
     436:	e8 e2       	ldi	r30, 0x28	; 40
     438:	f0 e0       	ldi	r31, 0x00	; 0
     43a:	80 81       	ld	r24, Z
     43c:	48 2f       	mov	r20, r24
     43e:	89 81       	ldd	r24, Y+1	; 0x01
     440:	28 2f       	mov	r18, r24
     442:	30 e0       	ldi	r19, 0x00	; 0
     444:	81 e0       	ldi	r24, 0x01	; 1
     446:	90 e0       	ldi	r25, 0x00	; 0
     448:	02 2e       	mov	r0, r18
     44a:	02 c0       	rjmp	.+4      	; 0x450 <GPIOConfig+0x17c>
     44c:	88 0f       	add	r24, r24
     44e:	99 1f       	adc	r25, r25
     450:	0a 94       	dec	r0
     452:	e2 f7       	brpl	.-8      	; 0x44c <GPIOConfig+0x178>
     454:	84 2b       	or	r24, r20
     456:	8c 93       	st	X, r24
        }
    }
    if(mode==OUTPUT)
     458:	8a 81       	ldd	r24, Y+2	; 0x02
     45a:	81 30       	cpi	r24, 0x01	; 1
     45c:	09 f0       	breq	.+2      	; 0x460 <GPIOConfig+0x18c>
     45e:	7e c0       	rjmp	.+252    	; 0x55c <GPIOConfig+0x288>
    {
        if(pin==PD7||pin==PD6||pin==PD5||pin==PD4||pin==PD3||pin==PD2||pin==PD1||pin==PD0)
     460:	89 81       	ldd	r24, Y+1	; 0x01
     462:	87 30       	cpi	r24, 0x07	; 7
     464:	a9 f0       	breq	.+42     	; 0x490 <GPIOConfig+0x1bc>
     466:	89 81       	ldd	r24, Y+1	; 0x01
     468:	86 30       	cpi	r24, 0x06	; 6
     46a:	91 f0       	breq	.+36     	; 0x490 <GPIOConfig+0x1bc>
     46c:	89 81       	ldd	r24, Y+1	; 0x01
     46e:	85 30       	cpi	r24, 0x05	; 5
     470:	79 f0       	breq	.+30     	; 0x490 <GPIOConfig+0x1bc>
     472:	89 81       	ldd	r24, Y+1	; 0x01
     474:	84 30       	cpi	r24, 0x04	; 4
     476:	61 f0       	breq	.+24     	; 0x490 <GPIOConfig+0x1bc>
     478:	89 81       	ldd	r24, Y+1	; 0x01
     47a:	83 30       	cpi	r24, 0x03	; 3
     47c:	49 f0       	breq	.+18     	; 0x490 <GPIOConfig+0x1bc>
     47e:	89 81       	ldd	r24, Y+1	; 0x01
     480:	82 30       	cpi	r24, 0x02	; 2
     482:	31 f0       	breq	.+12     	; 0x490 <GPIOConfig+0x1bc>
     484:	89 81       	ldd	r24, Y+1	; 0x01
     486:	81 30       	cpi	r24, 0x01	; 1
     488:	19 f0       	breq	.+6      	; 0x490 <GPIOConfig+0x1bc>
     48a:	89 81       	ldd	r24, Y+1	; 0x01
     48c:	88 23       	and	r24, r24
     48e:	99 f4       	brne	.+38     	; 0x4b6 <GPIOConfig+0x1e2>
        {
            SET_BIT(DDRD,pin);
     490:	aa e2       	ldi	r26, 0x2A	; 42
     492:	b0 e0       	ldi	r27, 0x00	; 0
     494:	ea e2       	ldi	r30, 0x2A	; 42
     496:	f0 e0       	ldi	r31, 0x00	; 0
     498:	80 81       	ld	r24, Z
     49a:	48 2f       	mov	r20, r24
     49c:	89 81       	ldd	r24, Y+1	; 0x01
     49e:	28 2f       	mov	r18, r24
     4a0:	30 e0       	ldi	r19, 0x00	; 0
     4a2:	81 e0       	ldi	r24, 0x01	; 1
     4a4:	90 e0       	ldi	r25, 0x00	; 0
     4a6:	02 2e       	mov	r0, r18
     4a8:	02 c0       	rjmp	.+4      	; 0x4ae <GPIOConfig+0x1da>
     4aa:	88 0f       	add	r24, r24
     4ac:	99 1f       	adc	r25, r25
     4ae:	0a 94       	dec	r0
     4b0:	e2 f7       	brpl	.-8      	; 0x4aa <GPIOConfig+0x1d6>
     4b2:	84 2b       	or	r24, r20
     4b4:	8c 93       	st	X, r24
        }
        if(pin==PB7||pin==PB6||pin==PB5||pin==PB4||pin==PB3||pin==PB2||pin==PB1||pin==PB0)
     4b6:	89 81       	ldd	r24, Y+1	; 0x01
     4b8:	87 30       	cpi	r24, 0x07	; 7
     4ba:	a9 f0       	breq	.+42     	; 0x4e6 <GPIOConfig+0x212>
     4bc:	89 81       	ldd	r24, Y+1	; 0x01
     4be:	86 30       	cpi	r24, 0x06	; 6
     4c0:	91 f0       	breq	.+36     	; 0x4e6 <GPIOConfig+0x212>
     4c2:	89 81       	ldd	r24, Y+1	; 0x01
     4c4:	85 30       	cpi	r24, 0x05	; 5
     4c6:	79 f0       	breq	.+30     	; 0x4e6 <GPIOConfig+0x212>
     4c8:	89 81       	ldd	r24, Y+1	; 0x01
     4ca:	84 30       	cpi	r24, 0x04	; 4
     4cc:	61 f0       	breq	.+24     	; 0x4e6 <GPIOConfig+0x212>
     4ce:	89 81       	ldd	r24, Y+1	; 0x01
     4d0:	83 30       	cpi	r24, 0x03	; 3
     4d2:	49 f0       	breq	.+18     	; 0x4e6 <GPIOConfig+0x212>
     4d4:	89 81       	ldd	r24, Y+1	; 0x01
     4d6:	82 30       	cpi	r24, 0x02	; 2
     4d8:	31 f0       	breq	.+12     	; 0x4e6 <GPIOConfig+0x212>
     4da:	89 81       	ldd	r24, Y+1	; 0x01
     4dc:	81 30       	cpi	r24, 0x01	; 1
     4de:	19 f0       	breq	.+6      	; 0x4e6 <GPIOConfig+0x212>
     4e0:	89 81       	ldd	r24, Y+1	; 0x01
     4e2:	88 23       	and	r24, r24
     4e4:	99 f4       	brne	.+38     	; 0x50c <GPIOConfig+0x238>
        {
            SET_BIT(DDRB,pin);
     4e6:	a4 e2       	ldi	r26, 0x24	; 36
     4e8:	b0 e0       	ldi	r27, 0x00	; 0
     4ea:	e4 e2       	ldi	r30, 0x24	; 36
     4ec:	f0 e0       	ldi	r31, 0x00	; 0
     4ee:	80 81       	ld	r24, Z
     4f0:	48 2f       	mov	r20, r24
     4f2:	89 81       	ldd	r24, Y+1	; 0x01
     4f4:	28 2f       	mov	r18, r24
     4f6:	30 e0       	ldi	r19, 0x00	; 0
     4f8:	81 e0       	ldi	r24, 0x01	; 1
     4fa:	90 e0       	ldi	r25, 0x00	; 0
     4fc:	02 2e       	mov	r0, r18
     4fe:	02 c0       	rjmp	.+4      	; 0x504 <GPIOConfig+0x230>
     500:	88 0f       	add	r24, r24
     502:	99 1f       	adc	r25, r25
     504:	0a 94       	dec	r0
     506:	e2 f7       	brpl	.-8      	; 0x500 <GPIOConfig+0x22c>
     508:	84 2b       	or	r24, r20
     50a:	8c 93       	st	X, r24
        }
        if(pin==PC6||pin==PC5||pin==PC4||pin==PC3||pin==PC2||pin==PC1||pin==PC0)
     50c:	89 81       	ldd	r24, Y+1	; 0x01
     50e:	86 30       	cpi	r24, 0x06	; 6
     510:	91 f0       	breq	.+36     	; 0x536 <GPIOConfig+0x262>
     512:	89 81       	ldd	r24, Y+1	; 0x01
     514:	85 30       	cpi	r24, 0x05	; 5
     516:	79 f0       	breq	.+30     	; 0x536 <GPIOConfig+0x262>
     518:	89 81       	ldd	r24, Y+1	; 0x01
     51a:	84 30       	cpi	r24, 0x04	; 4
     51c:	61 f0       	breq	.+24     	; 0x536 <GPIOConfig+0x262>
     51e:	89 81       	ldd	r24, Y+1	; 0x01
     520:	83 30       	cpi	r24, 0x03	; 3
     522:	49 f0       	breq	.+18     	; 0x536 <GPIOConfig+0x262>
     524:	89 81       	ldd	r24, Y+1	; 0x01
     526:	82 30       	cpi	r24, 0x02	; 2
     528:	31 f0       	breq	.+12     	; 0x536 <GPIOConfig+0x262>
     52a:	89 81       	ldd	r24, Y+1	; 0x01
     52c:	81 30       	cpi	r24, 0x01	; 1
     52e:	19 f0       	breq	.+6      	; 0x536 <GPIOConfig+0x262>
     530:	89 81       	ldd	r24, Y+1	; 0x01
     532:	88 23       	and	r24, r24
     534:	99 f4       	brne	.+38     	; 0x55c <GPIOConfig+0x288>
        {
            SET_BIT(DDRC,pin);
     536:	a7 e2       	ldi	r26, 0x27	; 39
     538:	b0 e0       	ldi	r27, 0x00	; 0
     53a:	e7 e2       	ldi	r30, 0x27	; 39
     53c:	f0 e0       	ldi	r31, 0x00	; 0
     53e:	80 81       	ld	r24, Z
     540:	48 2f       	mov	r20, r24
     542:	89 81       	ldd	r24, Y+1	; 0x01
     544:	28 2f       	mov	r18, r24
     546:	30 e0       	ldi	r19, 0x00	; 0
     548:	81 e0       	ldi	r24, 0x01	; 1
     54a:	90 e0       	ldi	r25, 0x00	; 0
     54c:	02 2e       	mov	r0, r18
     54e:	02 c0       	rjmp	.+4      	; 0x554 <GPIOConfig+0x280>
     550:	88 0f       	add	r24, r24
     552:	99 1f       	adc	r25, r25
     554:	0a 94       	dec	r0
     556:	e2 f7       	brpl	.-8      	; 0x550 <GPIOConfig+0x27c>
     558:	84 2b       	or	r24, r20
     55a:	8c 93       	st	X, r24
        }
    }
}
     55c:	0f 90       	pop	r0
     55e:	0f 90       	pop	r0
     560:	cf 91       	pop	r28
     562:	df 91       	pop	r29
     564:	08 95       	ret

00000566 <GPIOPinWrite>:

void GPIOPinWrite(uint8_t pin,uint8_t state)
{
     566:	df 93       	push	r29
     568:	cf 93       	push	r28
     56a:	00 d0       	rcall	.+0      	; 0x56c <GPIOPinWrite+0x6>
     56c:	cd b7       	in	r28, 0x3d	; 61
     56e:	de b7       	in	r29, 0x3e	; 62
     570:	89 83       	std	Y+1, r24	; 0x01
     572:	6a 83       	std	Y+2, r22	; 0x02
    if(pin==PD7||pin==PD6||pin==PD5||pin==PD4||pin==PD3||pin==PD2||pin==PD1||pin==PD0)
     574:	89 81       	ldd	r24, Y+1	; 0x01
     576:	87 30       	cpi	r24, 0x07	; 7
     578:	a9 f0       	breq	.+42     	; 0x5a4 <GPIOPinWrite+0x3e>
     57a:	89 81       	ldd	r24, Y+1	; 0x01
     57c:	86 30       	cpi	r24, 0x06	; 6
     57e:	91 f0       	breq	.+36     	; 0x5a4 <GPIOPinWrite+0x3e>
     580:	89 81       	ldd	r24, Y+1	; 0x01
     582:	85 30       	cpi	r24, 0x05	; 5
     584:	79 f0       	breq	.+30     	; 0x5a4 <GPIOPinWrite+0x3e>
     586:	89 81       	ldd	r24, Y+1	; 0x01
     588:	84 30       	cpi	r24, 0x04	; 4
     58a:	61 f0       	breq	.+24     	; 0x5a4 <GPIOPinWrite+0x3e>
     58c:	89 81       	ldd	r24, Y+1	; 0x01
     58e:	83 30       	cpi	r24, 0x03	; 3
     590:	49 f0       	breq	.+18     	; 0x5a4 <GPIOPinWrite+0x3e>
     592:	89 81       	ldd	r24, Y+1	; 0x01
     594:	82 30       	cpi	r24, 0x02	; 2
     596:	31 f0       	breq	.+12     	; 0x5a4 <GPIOPinWrite+0x3e>
     598:	89 81       	ldd	r24, Y+1	; 0x01
     59a:	81 30       	cpi	r24, 0x01	; 1
     59c:	19 f0       	breq	.+6      	; 0x5a4 <GPIOPinWrite+0x3e>
     59e:	89 81       	ldd	r24, Y+1	; 0x01
     5a0:	88 23       	and	r24, r24
     5a2:	69 f5       	brne	.+90     	; 0x5fe <GPIOPinWrite+0x98>
    {
        if(state==HIGH)
     5a4:	8a 81       	ldd	r24, Y+2	; 0x02
     5a6:	81 30       	cpi	r24, 0x01	; 1
     5a8:	99 f4       	brne	.+38     	; 0x5d0 <GPIOPinWrite+0x6a>
        {
            SET_BIT(PORTD,pin);
     5aa:	ab e2       	ldi	r26, 0x2B	; 43
     5ac:	b0 e0       	ldi	r27, 0x00	; 0
     5ae:	eb e2       	ldi	r30, 0x2B	; 43
     5b0:	f0 e0       	ldi	r31, 0x00	; 0
     5b2:	80 81       	ld	r24, Z
     5b4:	48 2f       	mov	r20, r24
     5b6:	89 81       	ldd	r24, Y+1	; 0x01
     5b8:	28 2f       	mov	r18, r24
     5ba:	30 e0       	ldi	r19, 0x00	; 0
     5bc:	81 e0       	ldi	r24, 0x01	; 1
     5be:	90 e0       	ldi	r25, 0x00	; 0
     5c0:	02 2e       	mov	r0, r18
     5c2:	02 c0       	rjmp	.+4      	; 0x5c8 <GPIOPinWrite+0x62>
     5c4:	88 0f       	add	r24, r24
     5c6:	99 1f       	adc	r25, r25
     5c8:	0a 94       	dec	r0
     5ca:	e2 f7       	brpl	.-8      	; 0x5c4 <GPIOPinWrite+0x5e>
     5cc:	84 2b       	or	r24, r20
     5ce:	8c 93       	st	X, r24
        }
        if(state==LOW)
     5d0:	8a 81       	ldd	r24, Y+2	; 0x02
     5d2:	88 23       	and	r24, r24
     5d4:	a1 f4       	brne	.+40     	; 0x5fe <GPIOPinWrite+0x98>
        {
            CLR_BIT(PORTD,pin);
     5d6:	ab e2       	ldi	r26, 0x2B	; 43
     5d8:	b0 e0       	ldi	r27, 0x00	; 0
     5da:	eb e2       	ldi	r30, 0x2B	; 43
     5dc:	f0 e0       	ldi	r31, 0x00	; 0
     5de:	80 81       	ld	r24, Z
     5e0:	48 2f       	mov	r20, r24
     5e2:	89 81       	ldd	r24, Y+1	; 0x01
     5e4:	28 2f       	mov	r18, r24
     5e6:	30 e0       	ldi	r19, 0x00	; 0
     5e8:	81 e0       	ldi	r24, 0x01	; 1
     5ea:	90 e0       	ldi	r25, 0x00	; 0
     5ec:	02 2e       	mov	r0, r18
     5ee:	02 c0       	rjmp	.+4      	; 0x5f4 <GPIOPinWrite+0x8e>
     5f0:	88 0f       	add	r24, r24
     5f2:	99 1f       	adc	r25, r25
     5f4:	0a 94       	dec	r0
     5f6:	e2 f7       	brpl	.-8      	; 0x5f0 <GPIOPinWrite+0x8a>
     5f8:	80 95       	com	r24
     5fa:	84 23       	and	r24, r20
     5fc:	8c 93       	st	X, r24
        }
    }
    if(pin==PB7||pin==PB6||pin==PB5||pin==PB4||pin==PB3||pin==PB2||pin==PB1||pin==PB0)
     5fe:	89 81       	ldd	r24, Y+1	; 0x01
     600:	87 30       	cpi	r24, 0x07	; 7
     602:	a9 f0       	breq	.+42     	; 0x62e <GPIOPinWrite+0xc8>
     604:	89 81       	ldd	r24, Y+1	; 0x01
     606:	86 30       	cpi	r24, 0x06	; 6
     608:	91 f0       	breq	.+36     	; 0x62e <GPIOPinWrite+0xc8>
     60a:	89 81       	ldd	r24, Y+1	; 0x01
     60c:	85 30       	cpi	r24, 0x05	; 5
     60e:	79 f0       	breq	.+30     	; 0x62e <GPIOPinWrite+0xc8>
     610:	89 81       	ldd	r24, Y+1	; 0x01
     612:	84 30       	cpi	r24, 0x04	; 4
     614:	61 f0       	breq	.+24     	; 0x62e <GPIOPinWrite+0xc8>
     616:	89 81       	ldd	r24, Y+1	; 0x01
     618:	83 30       	cpi	r24, 0x03	; 3
     61a:	49 f0       	breq	.+18     	; 0x62e <GPIOPinWrite+0xc8>
     61c:	89 81       	ldd	r24, Y+1	; 0x01
     61e:	82 30       	cpi	r24, 0x02	; 2
     620:	31 f0       	breq	.+12     	; 0x62e <GPIOPinWrite+0xc8>
     622:	89 81       	ldd	r24, Y+1	; 0x01
     624:	81 30       	cpi	r24, 0x01	; 1
     626:	19 f0       	breq	.+6      	; 0x62e <GPIOPinWrite+0xc8>
     628:	89 81       	ldd	r24, Y+1	; 0x01
     62a:	88 23       	and	r24, r24
     62c:	69 f5       	brne	.+90     	; 0x688 <GPIOPinWrite+0x122>
    {
        if(state==HIGH)
     62e:	8a 81       	ldd	r24, Y+2	; 0x02
     630:	81 30       	cpi	r24, 0x01	; 1
     632:	99 f4       	brne	.+38     	; 0x65a <GPIOPinWrite+0xf4>
        {
            SET_BIT(PORTB,pin);
     634:	a5 e2       	ldi	r26, 0x25	; 37
     636:	b0 e0       	ldi	r27, 0x00	; 0
     638:	e5 e2       	ldi	r30, 0x25	; 37
     63a:	f0 e0       	ldi	r31, 0x00	; 0
     63c:	80 81       	ld	r24, Z
     63e:	48 2f       	mov	r20, r24
     640:	89 81       	ldd	r24, Y+1	; 0x01
     642:	28 2f       	mov	r18, r24
     644:	30 e0       	ldi	r19, 0x00	; 0
     646:	81 e0       	ldi	r24, 0x01	; 1
     648:	90 e0       	ldi	r25, 0x00	; 0
     64a:	02 2e       	mov	r0, r18
     64c:	02 c0       	rjmp	.+4      	; 0x652 <GPIOPinWrite+0xec>
     64e:	88 0f       	add	r24, r24
     650:	99 1f       	adc	r25, r25
     652:	0a 94       	dec	r0
     654:	e2 f7       	brpl	.-8      	; 0x64e <GPIOPinWrite+0xe8>
     656:	84 2b       	or	r24, r20
     658:	8c 93       	st	X, r24
        }
        if(state==LOW)
     65a:	8a 81       	ldd	r24, Y+2	; 0x02
     65c:	88 23       	and	r24, r24
     65e:	a1 f4       	brne	.+40     	; 0x688 <GPIOPinWrite+0x122>
        {
            CLR_BIT(PORTB,pin);
     660:	a5 e2       	ldi	r26, 0x25	; 37
     662:	b0 e0       	ldi	r27, 0x00	; 0
     664:	e5 e2       	ldi	r30, 0x25	; 37
     666:	f0 e0       	ldi	r31, 0x00	; 0
     668:	80 81       	ld	r24, Z
     66a:	48 2f       	mov	r20, r24
     66c:	89 81       	ldd	r24, Y+1	; 0x01
     66e:	28 2f       	mov	r18, r24
     670:	30 e0       	ldi	r19, 0x00	; 0
     672:	81 e0       	ldi	r24, 0x01	; 1
     674:	90 e0       	ldi	r25, 0x00	; 0
     676:	02 2e       	mov	r0, r18
     678:	02 c0       	rjmp	.+4      	; 0x67e <GPIOPinWrite+0x118>
     67a:	88 0f       	add	r24, r24
     67c:	99 1f       	adc	r25, r25
     67e:	0a 94       	dec	r0
     680:	e2 f7       	brpl	.-8      	; 0x67a <GPIOPinWrite+0x114>
     682:	80 95       	com	r24
     684:	84 23       	and	r24, r20
     686:	8c 93       	st	X, r24
        }
    }
    if(pin==PC6||pin==PC5||pin==PC4||pin==PC3||pin==PC2||pin==PC1||pin==PC0)
     688:	89 81       	ldd	r24, Y+1	; 0x01
     68a:	86 30       	cpi	r24, 0x06	; 6
     68c:	91 f0       	breq	.+36     	; 0x6b2 <GPIOPinWrite+0x14c>
     68e:	89 81       	ldd	r24, Y+1	; 0x01
     690:	85 30       	cpi	r24, 0x05	; 5
     692:	79 f0       	breq	.+30     	; 0x6b2 <GPIOPinWrite+0x14c>
     694:	89 81       	ldd	r24, Y+1	; 0x01
     696:	84 30       	cpi	r24, 0x04	; 4
     698:	61 f0       	breq	.+24     	; 0x6b2 <GPIOPinWrite+0x14c>
     69a:	89 81       	ldd	r24, Y+1	; 0x01
     69c:	83 30       	cpi	r24, 0x03	; 3
     69e:	49 f0       	breq	.+18     	; 0x6b2 <GPIOPinWrite+0x14c>
     6a0:	89 81       	ldd	r24, Y+1	; 0x01
     6a2:	82 30       	cpi	r24, 0x02	; 2
     6a4:	31 f0       	breq	.+12     	; 0x6b2 <GPIOPinWrite+0x14c>
     6a6:	89 81       	ldd	r24, Y+1	; 0x01
     6a8:	81 30       	cpi	r24, 0x01	; 1
     6aa:	19 f0       	breq	.+6      	; 0x6b2 <GPIOPinWrite+0x14c>
     6ac:	89 81       	ldd	r24, Y+1	; 0x01
     6ae:	88 23       	and	r24, r24
     6b0:	69 f5       	brne	.+90     	; 0x70c <GPIOPinWrite+0x1a6>
    {
        if(state==HIGH)
     6b2:	8a 81       	ldd	r24, Y+2	; 0x02
     6b4:	81 30       	cpi	r24, 0x01	; 1
     6b6:	99 f4       	brne	.+38     	; 0x6de <GPIOPinWrite+0x178>
        {
            SET_BIT(PORTC,pin);
     6b8:	a8 e2       	ldi	r26, 0x28	; 40
     6ba:	b0 e0       	ldi	r27, 0x00	; 0
     6bc:	e8 e2       	ldi	r30, 0x28	; 40
     6be:	f0 e0       	ldi	r31, 0x00	; 0
     6c0:	80 81       	ld	r24, Z
     6c2:	48 2f       	mov	r20, r24
     6c4:	89 81       	ldd	r24, Y+1	; 0x01
     6c6:	28 2f       	mov	r18, r24
     6c8:	30 e0       	ldi	r19, 0x00	; 0
     6ca:	81 e0       	ldi	r24, 0x01	; 1
     6cc:	90 e0       	ldi	r25, 0x00	; 0
     6ce:	02 2e       	mov	r0, r18
     6d0:	02 c0       	rjmp	.+4      	; 0x6d6 <GPIOPinWrite+0x170>
     6d2:	88 0f       	add	r24, r24
     6d4:	99 1f       	adc	r25, r25
     6d6:	0a 94       	dec	r0
     6d8:	e2 f7       	brpl	.-8      	; 0x6d2 <GPIOPinWrite+0x16c>
     6da:	84 2b       	or	r24, r20
     6dc:	8c 93       	st	X, r24
        }
        if(state==LOW)
     6de:	8a 81       	ldd	r24, Y+2	; 0x02
     6e0:	88 23       	and	r24, r24
     6e2:	a1 f4       	brne	.+40     	; 0x70c <GPIOPinWrite+0x1a6>
        {
            CLR_BIT(PORTC,pin);
     6e4:	a8 e2       	ldi	r26, 0x28	; 40
     6e6:	b0 e0       	ldi	r27, 0x00	; 0
     6e8:	e8 e2       	ldi	r30, 0x28	; 40
     6ea:	f0 e0       	ldi	r31, 0x00	; 0
     6ec:	80 81       	ld	r24, Z
     6ee:	48 2f       	mov	r20, r24
     6f0:	89 81       	ldd	r24, Y+1	; 0x01
     6f2:	28 2f       	mov	r18, r24
     6f4:	30 e0       	ldi	r19, 0x00	; 0
     6f6:	81 e0       	ldi	r24, 0x01	; 1
     6f8:	90 e0       	ldi	r25, 0x00	; 0
     6fa:	02 2e       	mov	r0, r18
     6fc:	02 c0       	rjmp	.+4      	; 0x702 <GPIOPinWrite+0x19c>
     6fe:	88 0f       	add	r24, r24
     700:	99 1f       	adc	r25, r25
     702:	0a 94       	dec	r0
     704:	e2 f7       	brpl	.-8      	; 0x6fe <GPIOPinWrite+0x198>
     706:	80 95       	com	r24
     708:	84 23       	and	r24, r20
     70a:	8c 93       	st	X, r24
        }
    }
}
     70c:	0f 90       	pop	r0
     70e:	0f 90       	pop	r0
     710:	cf 91       	pop	r28
     712:	df 91       	pop	r29
     714:	08 95       	ret

00000716 <GPIOPinRead>:

uint8_t GPIOPinRead(uint8_t pin)
{
     716:	df 93       	push	r29
     718:	cf 93       	push	r28
     71a:	00 d0       	rcall	.+0      	; 0x71c <GPIOPinRead+0x6>
     71c:	0f 92       	push	r0
     71e:	cd b7       	in	r28, 0x3d	; 61
     720:	de b7       	in	r29, 0x3e	; 62
     722:	89 83       	std	Y+1, r24	; 0x01
    if(pin==PD7||pin==PD6||pin==PD5||pin==PD4||pin==PD3||pin==PD2||pin==PD1||pin==PD0)
     724:	89 81       	ldd	r24, Y+1	; 0x01
     726:	87 30       	cpi	r24, 0x07	; 7
     728:	a9 f0       	breq	.+42     	; 0x754 <GPIOPinRead+0x3e>
     72a:	89 81       	ldd	r24, Y+1	; 0x01
     72c:	86 30       	cpi	r24, 0x06	; 6
     72e:	91 f0       	breq	.+36     	; 0x754 <GPIOPinRead+0x3e>
     730:	89 81       	ldd	r24, Y+1	; 0x01
     732:	85 30       	cpi	r24, 0x05	; 5
     734:	79 f0       	breq	.+30     	; 0x754 <GPIOPinRead+0x3e>
     736:	89 81       	ldd	r24, Y+1	; 0x01
     738:	84 30       	cpi	r24, 0x04	; 4
     73a:	61 f0       	breq	.+24     	; 0x754 <GPIOPinRead+0x3e>
     73c:	89 81       	ldd	r24, Y+1	; 0x01
     73e:	83 30       	cpi	r24, 0x03	; 3
     740:	49 f0       	breq	.+18     	; 0x754 <GPIOPinRead+0x3e>
     742:	89 81       	ldd	r24, Y+1	; 0x01
     744:	82 30       	cpi	r24, 0x02	; 2
     746:	31 f0       	breq	.+12     	; 0x754 <GPIOPinRead+0x3e>
     748:	89 81       	ldd	r24, Y+1	; 0x01
     74a:	81 30       	cpi	r24, 0x01	; 1
     74c:	19 f0       	breq	.+6      	; 0x754 <GPIOPinRead+0x3e>
     74e:	89 81       	ldd	r24, Y+1	; 0x01
     750:	88 23       	and	r24, r24
     752:	c1 f4       	brne	.+48     	; 0x784 <GPIOPinRead+0x6e>
    {
        if((PIND)&(1<<pin))
     754:	e9 e2       	ldi	r30, 0x29	; 41
     756:	f0 e0       	ldi	r31, 0x00	; 0
     758:	80 81       	ld	r24, Z
     75a:	28 2f       	mov	r18, r24
     75c:	30 e0       	ldi	r19, 0x00	; 0
     75e:	89 81       	ldd	r24, Y+1	; 0x01
     760:	88 2f       	mov	r24, r24
     762:	90 e0       	ldi	r25, 0x00	; 0
     764:	a9 01       	movw	r20, r18
     766:	02 c0       	rjmp	.+4      	; 0x76c <GPIOPinRead+0x56>
     768:	55 95       	asr	r21
     76a:	47 95       	ror	r20
     76c:	8a 95       	dec	r24
     76e:	e2 f7       	brpl	.-8      	; 0x768 <GPIOPinRead+0x52>
     770:	ca 01       	movw	r24, r20
     772:	81 70       	andi	r24, 0x01	; 1
     774:	90 70       	andi	r25, 0x00	; 0
     776:	88 23       	and	r24, r24
     778:	19 f0       	breq	.+6      	; 0x780 <GPIOPinRead+0x6a>
        {
            return HIGH;
     77a:	51 e0       	ldi	r21, 0x01	; 1
     77c:	5a 83       	std	Y+2, r21	; 0x02
     77e:	60 c0       	rjmp	.+192    	; 0x840 <GPIOPinRead+0x12a>
        }
        else
        {
            return LOW;
     780:	1a 82       	std	Y+2, r1	; 0x02
     782:	5e c0       	rjmp	.+188    	; 0x840 <GPIOPinRead+0x12a>
        }
    }
    if(pin==PB7||pin==PB6||pin==PB5||pin==PB4||pin==PB3||pin==PB2||pin==PB1||pin==PB0)
     784:	89 81       	ldd	r24, Y+1	; 0x01
     786:	87 30       	cpi	r24, 0x07	; 7
     788:	a9 f0       	breq	.+42     	; 0x7b4 <GPIOPinRead+0x9e>
     78a:	89 81       	ldd	r24, Y+1	; 0x01
     78c:	86 30       	cpi	r24, 0x06	; 6
     78e:	91 f0       	breq	.+36     	; 0x7b4 <GPIOPinRead+0x9e>
     790:	89 81       	ldd	r24, Y+1	; 0x01
     792:	85 30       	cpi	r24, 0x05	; 5
     794:	79 f0       	breq	.+30     	; 0x7b4 <GPIOPinRead+0x9e>
     796:	89 81       	ldd	r24, Y+1	; 0x01
     798:	84 30       	cpi	r24, 0x04	; 4
     79a:	61 f0       	breq	.+24     	; 0x7b4 <GPIOPinRead+0x9e>
     79c:	89 81       	ldd	r24, Y+1	; 0x01
     79e:	83 30       	cpi	r24, 0x03	; 3
     7a0:	49 f0       	breq	.+18     	; 0x7b4 <GPIOPinRead+0x9e>
     7a2:	89 81       	ldd	r24, Y+1	; 0x01
     7a4:	82 30       	cpi	r24, 0x02	; 2
     7a6:	31 f0       	breq	.+12     	; 0x7b4 <GPIOPinRead+0x9e>
     7a8:	89 81       	ldd	r24, Y+1	; 0x01
     7aa:	81 30       	cpi	r24, 0x01	; 1
     7ac:	19 f0       	breq	.+6      	; 0x7b4 <GPIOPinRead+0x9e>
     7ae:	89 81       	ldd	r24, Y+1	; 0x01
     7b0:	88 23       	and	r24, r24
     7b2:	c1 f4       	brne	.+48     	; 0x7e4 <GPIOPinRead+0xce>
    {
        if((PINB)&(1<<pin))
     7b4:	e3 e2       	ldi	r30, 0x23	; 35
     7b6:	f0 e0       	ldi	r31, 0x00	; 0
     7b8:	80 81       	ld	r24, Z
     7ba:	28 2f       	mov	r18, r24
     7bc:	30 e0       	ldi	r19, 0x00	; 0
     7be:	89 81       	ldd	r24, Y+1	; 0x01
     7c0:	88 2f       	mov	r24, r24
     7c2:	90 e0       	ldi	r25, 0x00	; 0
     7c4:	a9 01       	movw	r20, r18
     7c6:	02 c0       	rjmp	.+4      	; 0x7cc <GPIOPinRead+0xb6>
     7c8:	55 95       	asr	r21
     7ca:	47 95       	ror	r20
     7cc:	8a 95       	dec	r24
     7ce:	e2 f7       	brpl	.-8      	; 0x7c8 <GPIOPinRead+0xb2>
     7d0:	ca 01       	movw	r24, r20
     7d2:	81 70       	andi	r24, 0x01	; 1
     7d4:	90 70       	andi	r25, 0x00	; 0
     7d6:	88 23       	and	r24, r24
     7d8:	19 f0       	breq	.+6      	; 0x7e0 <GPIOPinRead+0xca>
        {
            return HIGH;
     7da:	51 e0       	ldi	r21, 0x01	; 1
     7dc:	5a 83       	std	Y+2, r21	; 0x02
     7de:	30 c0       	rjmp	.+96     	; 0x840 <GPIOPinRead+0x12a>
        }
        else
        {
            return LOW;
     7e0:	1a 82       	std	Y+2, r1	; 0x02
     7e2:	2e c0       	rjmp	.+92     	; 0x840 <GPIOPinRead+0x12a>
        }
    }
    if(pin==PC6||pin==PC5||pin==PC4||pin==PC3||pin==PC2||pin==PC1||pin==PC0)
     7e4:	89 81       	ldd	r24, Y+1	; 0x01
     7e6:	86 30       	cpi	r24, 0x06	; 6
     7e8:	91 f0       	breq	.+36     	; 0x80e <GPIOPinRead+0xf8>
     7ea:	89 81       	ldd	r24, Y+1	; 0x01
     7ec:	85 30       	cpi	r24, 0x05	; 5
     7ee:	79 f0       	breq	.+30     	; 0x80e <GPIOPinRead+0xf8>
     7f0:	89 81       	ldd	r24, Y+1	; 0x01
     7f2:	84 30       	cpi	r24, 0x04	; 4
     7f4:	61 f0       	breq	.+24     	; 0x80e <GPIOPinRead+0xf8>
     7f6:	89 81       	ldd	r24, Y+1	; 0x01
     7f8:	83 30       	cpi	r24, 0x03	; 3
     7fa:	49 f0       	breq	.+18     	; 0x80e <GPIOPinRead+0xf8>
     7fc:	89 81       	ldd	r24, Y+1	; 0x01
     7fe:	82 30       	cpi	r24, 0x02	; 2
     800:	31 f0       	breq	.+12     	; 0x80e <GPIOPinRead+0xf8>
     802:	89 81       	ldd	r24, Y+1	; 0x01
     804:	81 30       	cpi	r24, 0x01	; 1
     806:	19 f0       	breq	.+6      	; 0x80e <GPIOPinRead+0xf8>
     808:	89 81       	ldd	r24, Y+1	; 0x01
     80a:	88 23       	and	r24, r24
     80c:	c1 f4       	brne	.+48     	; 0x83e <GPIOPinRead+0x128>
    {
        if((PINC)&(1<<pin))
     80e:	e6 e2       	ldi	r30, 0x26	; 38
     810:	f0 e0       	ldi	r31, 0x00	; 0
     812:	80 81       	ld	r24, Z
     814:	28 2f       	mov	r18, r24
     816:	30 e0       	ldi	r19, 0x00	; 0
     818:	89 81       	ldd	r24, Y+1	; 0x01
     81a:	88 2f       	mov	r24, r24
     81c:	90 e0       	ldi	r25, 0x00	; 0
     81e:	a9 01       	movw	r20, r18
     820:	02 c0       	rjmp	.+4      	; 0x826 <GPIOPinRead+0x110>
     822:	55 95       	asr	r21
     824:	47 95       	ror	r20
     826:	8a 95       	dec	r24
     828:	e2 f7       	brpl	.-8      	; 0x822 <GPIOPinRead+0x10c>
     82a:	ca 01       	movw	r24, r20
     82c:	81 70       	andi	r24, 0x01	; 1
     82e:	90 70       	andi	r25, 0x00	; 0
     830:	88 23       	and	r24, r24
     832:	19 f0       	breq	.+6      	; 0x83a <GPIOPinRead+0x124>
        {
            return HIGH;
     834:	51 e0       	ldi	r21, 0x01	; 1
     836:	5a 83       	std	Y+2, r21	; 0x02
     838:	03 c0       	rjmp	.+6      	; 0x840 <GPIOPinRead+0x12a>
        }
        else
        {
            return LOW;
     83a:	1a 82       	std	Y+2, r1	; 0x02
     83c:	01 c0       	rjmp	.+2      	; 0x840 <GPIOPinRead+0x12a>
     83e:	02 c0       	rjmp	.+4      	; 0x844 <GPIOPinRead+0x12e>
        }
    }
}
     840:	8a 81       	ldd	r24, Y+2	; 0x02
     842:	8b 83       	std	Y+3, r24	; 0x03
     844:	8b 81       	ldd	r24, Y+3	; 0x03
     846:	0f 90       	pop	r0
     848:	0f 90       	pop	r0
     84a:	0f 90       	pop	r0
     84c:	cf 91       	pop	r28
     84e:	df 91       	pop	r29
     850:	08 95       	ret

00000852 <main>:
******************************************************************************/
/******************************************************************************
* Internal functions
******************************************************************************/
int main(void)
{
     852:	df 93       	push	r29
     854:	cf 93       	push	r28
     856:	cd b7       	in	r28, 0x3d	; 61
     858:	de b7       	in	r29, 0x3e	; 62

//input
GPIOConfig(PD0,INPUT);
     85a:	80 e0       	ldi	r24, 0x00	; 0
     85c:	60 e0       	ldi	r22, 0x00	; 0
     85e:	0e 94 6a 01 	call	0x2d4	; 0x2d4 <GPIOConfig>
GPIOConfig(PD1,INPUT);
     862:	81 e0       	ldi	r24, 0x01	; 1
     864:	60 e0       	ldi	r22, 0x00	; 0
     866:	0e 94 6a 01 	call	0x2d4	; 0x2d4 <GPIOConfig>
GPIOConfig(PD2,INPUT);
     86a:	82 e0       	ldi	r24, 0x02	; 2
     86c:	60 e0       	ldi	r22, 0x00	; 0
     86e:	0e 94 6a 01 	call	0x2d4	; 0x2d4 <GPIOConfig>
GPIOConfig(PD3,INPUT);
     872:	83 e0       	ldi	r24, 0x03	; 3
     874:	60 e0       	ldi	r22, 0x00	; 0
     876:	0e 94 6a 01 	call	0x2d4	; 0x2d4 <GPIOConfig>
//output
GPIOConfig(PD6,OUTPUT);
     87a:	86 e0       	ldi	r24, 0x06	; 6
     87c:	61 e0       	ldi	r22, 0x01	; 1
     87e:	0e 94 6a 01 	call	0x2d4	; 0x2d4 <GPIOConfig>
GPIOConfig(PB7,OUTPUT);
     882:	87 e0       	ldi	r24, 0x07	; 7
     884:	61 e0       	ldi	r22, 0x01	; 1
     886:	0e 94 6a 01 	call	0x2d4	; 0x2d4 <GPIOConfig>
//PULL UP
GPIOPinWrite(PD0,HIGH);
     88a:	80 e0       	ldi	r24, 0x00	; 0
     88c:	61 e0       	ldi	r22, 0x01	; 1
     88e:	0e 94 b3 02 	call	0x566	; 0x566 <GPIOPinWrite>
GPIOPinWrite(PD1,HIGH);
     892:	81 e0       	ldi	r24, 0x01	; 1
     894:	61 e0       	ldi	r22, 0x01	; 1
     896:	0e 94 b3 02 	call	0x566	; 0x566 <GPIOPinWrite>
GPIOPinWrite(PD2,HIGH);
     89a:	82 e0       	ldi	r24, 0x02	; 2
     89c:	61 e0       	ldi	r22, 0x01	; 1
     89e:	0e 94 b3 02 	call	0x566	; 0x566 <GPIOPinWrite>
GPIOPinWrite(PD3,HIGH);
     8a2:	83 e0       	ldi	r24, 0x03	; 3
     8a4:	61 e0       	ldi	r22, 0x01	; 1
     8a6:	0e 94 b3 02 	call	0x566	; 0x566 <GPIOPinWrite>

// timer
timer_init();
     8aa:	0e 94 ca 04 	call	0x994	; 0x994 <timer_init>
//ADC
adc_init();
     8ae:	0e 94 53 00 	call	0xa6	; 0xa6 <adc_init>
sei(); // Global interrupt
     8b2:	78 94       	sei
while(1)
{

AppMode();
     8b4:	0e 94 73 00 	call	0xe6	; 0xe6 <AppMode>
     8b8:	fd cf       	rjmp	.-6      	; 0x8b4 <main+0x62>

000008ba <__vector_16>:
}

/******************************************************************************
* ISR
******************************************************************************/
ISR(TIMER0_OVF_vect) {
     8ba:	1f 92       	push	r1
     8bc:	0f 92       	push	r0
     8be:	0f b6       	in	r0, 0x3f	; 63
     8c0:	0f 92       	push	r0
     8c2:	11 24       	eor	r1, r1
     8c4:	8f 93       	push	r24
     8c6:	9f 93       	push	r25
     8c8:	df 93       	push	r29
     8ca:	cf 93       	push	r28
     8cc:	cd b7       	in	r28, 0x3d	; 61
     8ce:	de b7       	in	r29, 0x3e	; 62

  counter++;
     8d0:	80 91 08 02 	lds	r24, 0x0208
     8d4:	90 91 09 02 	lds	r25, 0x0209
     8d8:	01 96       	adiw	r24, 0x01	; 1
     8da:	90 93 09 02 	sts	0x0209, r25
     8de:	80 93 08 02 	sts	0x0208, r24

if (counter >= 62)
     8e2:	80 91 08 02 	lds	r24, 0x0208
     8e6:	90 91 09 02 	lds	r25, 0x0209
     8ea:	8e 33       	cpi	r24, 0x3E	; 62
     8ec:	91 05       	cpc	r25, r1
     8ee:	48 f0       	brcs	.+18     	; 0x902 <__stack+0x3>
{
    FLAG_BIT.FLAG_TIMER = 1;
     8f0:	80 91 0a 02 	lds	r24, 0x020A
     8f4:	81 60       	ori	r24, 0x01	; 1
     8f6:	80 93 0a 02 	sts	0x020A, r24
    counter = 0;
     8fa:	10 92 09 02 	sts	0x0209, r1
     8fe:	10 92 08 02 	sts	0x0208, r1
}
}
     902:	cf 91       	pop	r28
     904:	df 91       	pop	r29
     906:	9f 91       	pop	r25
     908:	8f 91       	pop	r24
     90a:	0f 90       	pop	r0
     90c:	0f be       	out	0x3f, r0	; 63
     90e:	0f 90       	pop	r0
     910:	1f 90       	pop	r1
     912:	18 95       	reti

00000914 <__vector_2>:

//Switch ISR
ISR(INT1_vect)
{
     914:	1f 92       	push	r1
     916:	0f 92       	push	r0
     918:	0f b6       	in	r0, 0x3f	; 63
     91a:	0f 92       	push	r0
     91c:	11 24       	eor	r1, r1
     91e:	8f 93       	push	r24
     920:	df 93       	push	r29
     922:	cf 93       	push	r28
     924:	cd b7       	in	r28, 0x3d	; 61
     926:	de b7       	in	r29, 0x3e	; 62
  FLAG_BIT.GPIOMinus_ISR2 = 1;
     928:	80 91 0a 02 	lds	r24, 0x020A
     92c:	84 60       	ori	r24, 0x04	; 4
     92e:	80 93 0a 02 	sts	0x020A, r24
}
     932:	cf 91       	pop	r28
     934:	df 91       	pop	r29
     936:	8f 91       	pop	r24
     938:	0f 90       	pop	r0
     93a:	0f be       	out	0x3f, r0	; 63
     93c:	0f 90       	pop	r0
     93e:	1f 90       	pop	r1
     940:	18 95       	reti

00000942 <__vector_1>:

ISR(INT0_vect)
{
     942:	1f 92       	push	r1
     944:	0f 92       	push	r0
     946:	0f b6       	in	r0, 0x3f	; 63
     948:	0f 92       	push	r0
     94a:	11 24       	eor	r1, r1
     94c:	8f 93       	push	r24
     94e:	df 93       	push	r29
     950:	cf 93       	push	r28
     952:	cd b7       	in	r28, 0x3d	; 61
     954:	de b7       	in	r29, 0x3e	; 62
 FLAG_BIT.GPIOPlus_ISR1=1;
     956:	80 91 0a 02 	lds	r24, 0x020A
     95a:	82 60       	ori	r24, 0x02	; 2
     95c:	80 93 0a 02 	sts	0x020A, r24
}
     960:	cf 91       	pop	r28
     962:	df 91       	pop	r29
     964:	8f 91       	pop	r24
     966:	0f 90       	pop	r0
     968:	0f be       	out	0x3f, r0	; 63
     96a:	0f 90       	pop	r0
     96c:	1f 90       	pop	r1
     96e:	18 95       	reti

00000970 <standymode>:
/******************************************************************************
* Internal functions
******************************************************************************/

void standymode()
{
     970:	df 93       	push	r29
     972:	cf 93       	push	r28
     974:	cd b7       	in	r28, 0x3d	; 61
     976:	de b7       	in	r29, 0x3e	; 62
CLR_BIT(PORTB,PB7);
     978:	a5 e2       	ldi	r26, 0x25	; 37
     97a:	b0 e0       	ldi	r27, 0x00	; 0
     97c:	e5 e2       	ldi	r30, 0x25	; 37
     97e:	f0 e0       	ldi	r31, 0x00	; 0
     980:	80 81       	ld	r24, Z
     982:	8f 77       	andi	r24, 0x7F	; 127
     984:	8c 93       	st	X, r24
OCR0A=64.0;
     986:	e7 e4       	ldi	r30, 0x47	; 71
     988:	f0 e0       	ldi	r31, 0x00	; 0
     98a:	80 e4       	ldi	r24, 0x40	; 64
     98c:	80 83       	st	Z, r24
}
     98e:	cf 91       	pop	r28
     990:	df 91       	pop	r29
     992:	08 95       	ret

00000994 <timer_init>:
******************************************************************************/
/******************************************************************************
* Internal functions
******************************************************************************/
void timer_init()
{
     994:	df 93       	push	r29
     996:	cf 93       	push	r28
     998:	cd b7       	in	r28, 0x3d	; 61
     99a:	de b7       	in	r29, 0x3e	; 62
TCCR0A |= ((1 << WGM01) | (1 << WGM00));
     99c:	a4 e4       	ldi	r26, 0x44	; 68
     99e:	b0 e0       	ldi	r27, 0x00	; 0
     9a0:	e4 e4       	ldi	r30, 0x44	; 68
     9a2:	f0 e0       	ldi	r31, 0x00	; 0
     9a4:	80 81       	ld	r24, Z
     9a6:	83 60       	ori	r24, 0x03	; 3
     9a8:	8c 93       	st	X, r24
TCCR0A |= (1 << COM0A1);
     9aa:	a4 e4       	ldi	r26, 0x44	; 68
     9ac:	b0 e0       	ldi	r27, 0x00	; 0
     9ae:	e4 e4       	ldi	r30, 0x44	; 68
     9b0:	f0 e0       	ldi	r31, 0x00	; 0
     9b2:	80 81       	ld	r24, Z
     9b4:	80 68       	ori	r24, 0x80	; 128
     9b6:	8c 93       	st	X, r24
TCCR0A &= ~(1 << COM0A0);
     9b8:	a4 e4       	ldi	r26, 0x44	; 68
     9ba:	b0 e0       	ldi	r27, 0x00	; 0
     9bc:	e4 e4       	ldi	r30, 0x44	; 68
     9be:	f0 e0       	ldi	r31, 0x00	; 0
     9c0:	80 81       	ld	r24, Z
     9c2:	8f 7b       	andi	r24, 0xBF	; 191
     9c4:	8c 93       	st	X, r24
TCNT0 = 0x00; // Timer counter register
     9c6:	e6 e4       	ldi	r30, 0x46	; 70
     9c8:	f0 e0       	ldi	r31, 0x00	; 0
     9ca:	10 82       	st	Z, r1

TCCR0B |= ((1 << CS00) | (1 << CS02)); // Clock selection 101
     9cc:	a5 e4       	ldi	r26, 0x45	; 69
     9ce:	b0 e0       	ldi	r27, 0x00	; 0
     9d0:	e5 e4       	ldi	r30, 0x45	; 69
     9d2:	f0 e0       	ldi	r31, 0x00	; 0
     9d4:	80 81       	ld	r24, Z
     9d6:	85 60       	ori	r24, 0x05	; 5
     9d8:	8c 93       	st	X, r24
TCCR0B &= ~(1 << CS01); //101
     9da:	a5 e4       	ldi	r26, 0x45	; 69
     9dc:	b0 e0       	ldi	r27, 0x00	; 0
     9de:	e5 e4       	ldi	r30, 0x45	; 69
     9e0:	f0 e0       	ldi	r31, 0x00	; 0
     9e2:	80 81       	ld	r24, Z
     9e4:	8d 7f       	andi	r24, 0xFD	; 253
     9e6:	8c 93       	st	X, r24
TIMSK0 |= (1 << TOIE0); //Local Timer Overflow INT enable
     9e8:	ae e6       	ldi	r26, 0x6E	; 110
     9ea:	b0 e0       	ldi	r27, 0x00	; 0
     9ec:	ee e6       	ldi	r30, 0x6E	; 110
     9ee:	f0 e0       	ldi	r31, 0x00	; 0
     9f0:	80 81       	ld	r24, Z
     9f2:	81 60       	ori	r24, 0x01	; 1
     9f4:	8c 93       	st	X, r24
}
     9f6:	cf 91       	pop	r28
     9f8:	df 91       	pop	r29
     9fa:	08 95       	ret

000009fc <interrupt_init>:
* Description: interrupt register configuration
* Arguments: pin and mode
* Returns: None
******************************************************************************/
void interrupt_init()
{
     9fc:	df 93       	push	r29
     9fe:	cf 93       	push	r28
     a00:	cd b7       	in	r28, 0x3d	; 61
     a02:	de b7       	in	r29, 0x3e	; 62
    //pin-change interrupt for mode selection
PCICR |= (1<<PCIE2);
     a04:	a8 e6       	ldi	r26, 0x68	; 104
     a06:	b0 e0       	ldi	r27, 0x00	; 0
     a08:	e8 e6       	ldi	r30, 0x68	; 104
     a0a:	f0 e0       	ldi	r31, 0x00	; 0
     a0c:	80 81       	ld	r24, Z
     a0e:	84 60       	ori	r24, 0x04	; 4
     a10:	8c 93       	st	X, r24
PCMSK2 |= ((1<< PCINT16) | (1<< PCINT17));
     a12:	ad e6       	ldi	r26, 0x6D	; 109
     a14:	b0 e0       	ldi	r27, 0x00	; 0
     a16:	ed e6       	ldi	r30, 0x6D	; 109
     a18:	f0 e0       	ldi	r31, 0x00	; 0
     a1a:	80 81       	ld	r24, Z
     a1c:	83 60       	ori	r24, 0x03	; 3
     a1e:	8c 93       	st	X, r24


//External Interrupt for GPIOPlus and GPIOMinus
EICRA |= ((1 << ISC10)|(1 << ISC00));
     a20:	a9 e6       	ldi	r26, 0x69	; 105
     a22:	b0 e0       	ldi	r27, 0x00	; 0
     a24:	e9 e6       	ldi	r30, 0x69	; 105
     a26:	f0 e0       	ldi	r31, 0x00	; 0
     a28:	80 81       	ld	r24, Z
     a2a:	85 60       	ori	r24, 0x05	; 5
     a2c:	8c 93       	st	X, r24
EICRA &= ~((1 << ISC11)|(1 << ISC01)); //Any logical change will raise interrupt.
     a2e:	a9 e6       	ldi	r26, 0x69	; 105
     a30:	b0 e0       	ldi	r27, 0x00	; 0
     a32:	e9 e6       	ldi	r30, 0x69	; 105
     a34:	f0 e0       	ldi	r31, 0x00	; 0
     a36:	80 81       	ld	r24, Z
     a38:	85 7f       	andi	r24, 0xF5	; 245
     a3a:	8c 93       	st	X, r24
EICRA |= ((1 << ISC11)|(1 << ISC01)); //Any logical change will raise interrupt.
     a3c:	a9 e6       	ldi	r26, 0x69	; 105
     a3e:	b0 e0       	ldi	r27, 0x00	; 0
     a40:	e9 e6       	ldi	r30, 0x69	; 105
     a42:	f0 e0       	ldi	r31, 0x00	; 0
     a44:	80 81       	ld	r24, Z
     a46:	8a 60       	ori	r24, 0x0A	; 10
     a48:	8c 93       	st	X, r24
EIMSK |= ((1 << INT1)|(1 << INT0)); //Local Interrupt enable
     a4a:	ad e3       	ldi	r26, 0x3D	; 61
     a4c:	b0 e0       	ldi	r27, 0x00	; 0
     a4e:	ed e3       	ldi	r30, 0x3D	; 61
     a50:	f0 e0       	ldi	r31, 0x00	; 0
     a52:	80 81       	ld	r24, Z
     a54:	83 60       	ori	r24, 0x03	; 3
     a56:	8c 93       	st	X, r24

}
     a58:	cf 91       	pop	r28
     a5a:	df 91       	pop	r29
     a5c:	08 95       	ret

00000a5e <__mulsf3>:
     a5e:	a0 e2       	ldi	r26, 0x20	; 32
     a60:	b0 e0       	ldi	r27, 0x00	; 0
     a62:	e5 e3       	ldi	r30, 0x35	; 53
     a64:	f5 e0       	ldi	r31, 0x05	; 5
     a66:	0c 94 f7 08 	jmp	0x11ee	; 0x11ee <__prologue_saves__>
     a6a:	69 83       	std	Y+1, r22	; 0x01
     a6c:	7a 83       	std	Y+2, r23	; 0x02
     a6e:	8b 83       	std	Y+3, r24	; 0x03
     a70:	9c 83       	std	Y+4, r25	; 0x04
     a72:	2d 83       	std	Y+5, r18	; 0x05
     a74:	3e 83       	std	Y+6, r19	; 0x06
     a76:	4f 83       	std	Y+7, r20	; 0x07
     a78:	58 87       	std	Y+8, r21	; 0x08
     a7a:	ce 01       	movw	r24, r28
     a7c:	01 96       	adiw	r24, 0x01	; 1
     a7e:	be 01       	movw	r22, r28
     a80:	67 5f       	subi	r22, 0xF7	; 247
     a82:	7f 4f       	sbci	r23, 0xFF	; 255
     a84:	0e 94 26 08 	call	0x104c	; 0x104c <__unpack_f>
     a88:	ce 01       	movw	r24, r28
     a8a:	05 96       	adiw	r24, 0x05	; 5
     a8c:	be 01       	movw	r22, r28
     a8e:	6f 5e       	subi	r22, 0xEF	; 239
     a90:	7f 4f       	sbci	r23, 0xFF	; 255
     a92:	0e 94 26 08 	call	0x104c	; 0x104c <__unpack_f>
     a96:	99 85       	ldd	r25, Y+9	; 0x09
     a98:	92 30       	cpi	r25, 0x02	; 2
     a9a:	88 f0       	brcs	.+34     	; 0xabe <__mulsf3+0x60>
     a9c:	89 89       	ldd	r24, Y+17	; 0x11
     a9e:	82 30       	cpi	r24, 0x02	; 2
     aa0:	c8 f0       	brcs	.+50     	; 0xad4 <__mulsf3+0x76>
     aa2:	94 30       	cpi	r25, 0x04	; 4
     aa4:	19 f4       	brne	.+6      	; 0xaac <__mulsf3+0x4e>
     aa6:	82 30       	cpi	r24, 0x02	; 2
     aa8:	51 f4       	brne	.+20     	; 0xabe <__mulsf3+0x60>
     aaa:	04 c0       	rjmp	.+8      	; 0xab4 <__mulsf3+0x56>
     aac:	84 30       	cpi	r24, 0x04	; 4
     aae:	29 f4       	brne	.+10     	; 0xaba <__mulsf3+0x5c>
     ab0:	92 30       	cpi	r25, 0x02	; 2
     ab2:	81 f4       	brne	.+32     	; 0xad4 <__mulsf3+0x76>
     ab4:	80 e0       	ldi	r24, 0x00	; 0
     ab6:	91 e0       	ldi	r25, 0x01	; 1
     ab8:	c6 c0       	rjmp	.+396    	; 0xc46 <__mulsf3+0x1e8>
     aba:	92 30       	cpi	r25, 0x02	; 2
     abc:	49 f4       	brne	.+18     	; 0xad0 <__mulsf3+0x72>
     abe:	20 e0       	ldi	r18, 0x00	; 0
     ac0:	9a 85       	ldd	r25, Y+10	; 0x0a
     ac2:	8a 89       	ldd	r24, Y+18	; 0x12
     ac4:	98 13       	cpse	r25, r24
     ac6:	21 e0       	ldi	r18, 0x01	; 1
     ac8:	2a 87       	std	Y+10, r18	; 0x0a
     aca:	ce 01       	movw	r24, r28
     acc:	09 96       	adiw	r24, 0x09	; 9
     ace:	bb c0       	rjmp	.+374    	; 0xc46 <__mulsf3+0x1e8>
     ad0:	82 30       	cpi	r24, 0x02	; 2
     ad2:	49 f4       	brne	.+18     	; 0xae6 <__mulsf3+0x88>
     ad4:	20 e0       	ldi	r18, 0x00	; 0
     ad6:	9a 85       	ldd	r25, Y+10	; 0x0a
     ad8:	8a 89       	ldd	r24, Y+18	; 0x12
     ada:	98 13       	cpse	r25, r24
     adc:	21 e0       	ldi	r18, 0x01	; 1
     ade:	2a 8b       	std	Y+18, r18	; 0x12
     ae0:	ce 01       	movw	r24, r28
     ae2:	41 96       	adiw	r24, 0x11	; 17
     ae4:	b0 c0       	rjmp	.+352    	; 0xc46 <__mulsf3+0x1e8>
     ae6:	2d 84       	ldd	r2, Y+13	; 0x0d
     ae8:	3e 84       	ldd	r3, Y+14	; 0x0e
     aea:	4f 84       	ldd	r4, Y+15	; 0x0f
     aec:	58 88       	ldd	r5, Y+16	; 0x10
     aee:	6d 88       	ldd	r6, Y+21	; 0x15
     af0:	7e 88       	ldd	r7, Y+22	; 0x16
     af2:	8f 88       	ldd	r8, Y+23	; 0x17
     af4:	98 8c       	ldd	r9, Y+24	; 0x18
     af6:	ee 24       	eor	r14, r14
     af8:	ff 24       	eor	r15, r15
     afa:	87 01       	movw	r16, r14
     afc:	aa 24       	eor	r10, r10
     afe:	bb 24       	eor	r11, r11
     b00:	65 01       	movw	r12, r10
     b02:	40 e0       	ldi	r20, 0x00	; 0
     b04:	50 e0       	ldi	r21, 0x00	; 0
     b06:	60 e0       	ldi	r22, 0x00	; 0
     b08:	70 e0       	ldi	r23, 0x00	; 0
     b0a:	e0 e0       	ldi	r30, 0x00	; 0
     b0c:	f0 e0       	ldi	r31, 0x00	; 0
     b0e:	c1 01       	movw	r24, r2
     b10:	81 70       	andi	r24, 0x01	; 1
     b12:	90 70       	andi	r25, 0x00	; 0
     b14:	89 2b       	or	r24, r25
     b16:	e9 f0       	breq	.+58     	; 0xb52 <__mulsf3+0xf4>
     b18:	e6 0c       	add	r14, r6
     b1a:	f7 1c       	adc	r15, r7
     b1c:	08 1d       	adc	r16, r8
     b1e:	19 1d       	adc	r17, r9
     b20:	9a 01       	movw	r18, r20
     b22:	ab 01       	movw	r20, r22
     b24:	2a 0d       	add	r18, r10
     b26:	3b 1d       	adc	r19, r11
     b28:	4c 1d       	adc	r20, r12
     b2a:	5d 1d       	adc	r21, r13
     b2c:	80 e0       	ldi	r24, 0x00	; 0
     b2e:	90 e0       	ldi	r25, 0x00	; 0
     b30:	a0 e0       	ldi	r26, 0x00	; 0
     b32:	b0 e0       	ldi	r27, 0x00	; 0
     b34:	e6 14       	cp	r14, r6
     b36:	f7 04       	cpc	r15, r7
     b38:	08 05       	cpc	r16, r8
     b3a:	19 05       	cpc	r17, r9
     b3c:	20 f4       	brcc	.+8      	; 0xb46 <__mulsf3+0xe8>
     b3e:	81 e0       	ldi	r24, 0x01	; 1
     b40:	90 e0       	ldi	r25, 0x00	; 0
     b42:	a0 e0       	ldi	r26, 0x00	; 0
     b44:	b0 e0       	ldi	r27, 0x00	; 0
     b46:	ba 01       	movw	r22, r20
     b48:	a9 01       	movw	r20, r18
     b4a:	48 0f       	add	r20, r24
     b4c:	59 1f       	adc	r21, r25
     b4e:	6a 1f       	adc	r22, r26
     b50:	7b 1f       	adc	r23, r27
     b52:	aa 0c       	add	r10, r10
     b54:	bb 1c       	adc	r11, r11
     b56:	cc 1c       	adc	r12, r12
     b58:	dd 1c       	adc	r13, r13
     b5a:	97 fe       	sbrs	r9, 7
     b5c:	08 c0       	rjmp	.+16     	; 0xb6e <__mulsf3+0x110>
     b5e:	81 e0       	ldi	r24, 0x01	; 1
     b60:	90 e0       	ldi	r25, 0x00	; 0
     b62:	a0 e0       	ldi	r26, 0x00	; 0
     b64:	b0 e0       	ldi	r27, 0x00	; 0
     b66:	a8 2a       	or	r10, r24
     b68:	b9 2a       	or	r11, r25
     b6a:	ca 2a       	or	r12, r26
     b6c:	db 2a       	or	r13, r27
     b6e:	31 96       	adiw	r30, 0x01	; 1
     b70:	e0 32       	cpi	r30, 0x20	; 32
     b72:	f1 05       	cpc	r31, r1
     b74:	49 f0       	breq	.+18     	; 0xb88 <__mulsf3+0x12a>
     b76:	66 0c       	add	r6, r6
     b78:	77 1c       	adc	r7, r7
     b7a:	88 1c       	adc	r8, r8
     b7c:	99 1c       	adc	r9, r9
     b7e:	56 94       	lsr	r5
     b80:	47 94       	ror	r4
     b82:	37 94       	ror	r3
     b84:	27 94       	ror	r2
     b86:	c3 cf       	rjmp	.-122    	; 0xb0e <__mulsf3+0xb0>
     b88:	fa 85       	ldd	r31, Y+10	; 0x0a
     b8a:	ea 89       	ldd	r30, Y+18	; 0x12
     b8c:	2b 89       	ldd	r18, Y+19	; 0x13
     b8e:	3c 89       	ldd	r19, Y+20	; 0x14
     b90:	8b 85       	ldd	r24, Y+11	; 0x0b
     b92:	9c 85       	ldd	r25, Y+12	; 0x0c
     b94:	28 0f       	add	r18, r24
     b96:	39 1f       	adc	r19, r25
     b98:	2e 5f       	subi	r18, 0xFE	; 254
     b9a:	3f 4f       	sbci	r19, 0xFF	; 255
     b9c:	17 c0       	rjmp	.+46     	; 0xbcc <__mulsf3+0x16e>
     b9e:	ca 01       	movw	r24, r20
     ba0:	81 70       	andi	r24, 0x01	; 1
     ba2:	90 70       	andi	r25, 0x00	; 0
     ba4:	89 2b       	or	r24, r25
     ba6:	61 f0       	breq	.+24     	; 0xbc0 <__mulsf3+0x162>
     ba8:	16 95       	lsr	r17
     baa:	07 95       	ror	r16
     bac:	f7 94       	ror	r15
     bae:	e7 94       	ror	r14
     bb0:	80 e0       	ldi	r24, 0x00	; 0
     bb2:	90 e0       	ldi	r25, 0x00	; 0
     bb4:	a0 e0       	ldi	r26, 0x00	; 0
     bb6:	b0 e8       	ldi	r27, 0x80	; 128
     bb8:	e8 2a       	or	r14, r24
     bba:	f9 2a       	or	r15, r25
     bbc:	0a 2b       	or	r16, r26
     bbe:	1b 2b       	or	r17, r27
     bc0:	76 95       	lsr	r23
     bc2:	67 95       	ror	r22
     bc4:	57 95       	ror	r21
     bc6:	47 95       	ror	r20
     bc8:	2f 5f       	subi	r18, 0xFF	; 255
     bca:	3f 4f       	sbci	r19, 0xFF	; 255
     bcc:	77 fd       	sbrc	r23, 7
     bce:	e7 cf       	rjmp	.-50     	; 0xb9e <__mulsf3+0x140>
     bd0:	0c c0       	rjmp	.+24     	; 0xbea <__mulsf3+0x18c>
     bd2:	44 0f       	add	r20, r20
     bd4:	55 1f       	adc	r21, r21
     bd6:	66 1f       	adc	r22, r22
     bd8:	77 1f       	adc	r23, r23
     bda:	17 fd       	sbrc	r17, 7
     bdc:	41 60       	ori	r20, 0x01	; 1
     bde:	ee 0c       	add	r14, r14
     be0:	ff 1c       	adc	r15, r15
     be2:	00 1f       	adc	r16, r16
     be4:	11 1f       	adc	r17, r17
     be6:	21 50       	subi	r18, 0x01	; 1
     be8:	30 40       	sbci	r19, 0x00	; 0
     bea:	40 30       	cpi	r20, 0x00	; 0
     bec:	90 e0       	ldi	r25, 0x00	; 0
     bee:	59 07       	cpc	r21, r25
     bf0:	90 e0       	ldi	r25, 0x00	; 0
     bf2:	69 07       	cpc	r22, r25
     bf4:	90 e4       	ldi	r25, 0x40	; 64
     bf6:	79 07       	cpc	r23, r25
     bf8:	60 f3       	brcs	.-40     	; 0xbd2 <__mulsf3+0x174>
     bfa:	2b 8f       	std	Y+27, r18	; 0x1b
     bfc:	3c 8f       	std	Y+28, r19	; 0x1c
     bfe:	db 01       	movw	r26, r22
     c00:	ca 01       	movw	r24, r20
     c02:	8f 77       	andi	r24, 0x7F	; 127
     c04:	90 70       	andi	r25, 0x00	; 0
     c06:	a0 70       	andi	r26, 0x00	; 0
     c08:	b0 70       	andi	r27, 0x00	; 0
     c0a:	80 34       	cpi	r24, 0x40	; 64
     c0c:	91 05       	cpc	r25, r1
     c0e:	a1 05       	cpc	r26, r1
     c10:	b1 05       	cpc	r27, r1
     c12:	61 f4       	brne	.+24     	; 0xc2c <__mulsf3+0x1ce>
     c14:	47 fd       	sbrc	r20, 7
     c16:	0a c0       	rjmp	.+20     	; 0xc2c <__mulsf3+0x1ce>
     c18:	e1 14       	cp	r14, r1
     c1a:	f1 04       	cpc	r15, r1
     c1c:	01 05       	cpc	r16, r1
     c1e:	11 05       	cpc	r17, r1
     c20:	29 f0       	breq	.+10     	; 0xc2c <__mulsf3+0x1ce>
     c22:	40 5c       	subi	r20, 0xC0	; 192
     c24:	5f 4f       	sbci	r21, 0xFF	; 255
     c26:	6f 4f       	sbci	r22, 0xFF	; 255
     c28:	7f 4f       	sbci	r23, 0xFF	; 255
     c2a:	40 78       	andi	r20, 0x80	; 128
     c2c:	1a 8e       	std	Y+26, r1	; 0x1a
     c2e:	fe 17       	cp	r31, r30
     c30:	11 f0       	breq	.+4      	; 0xc36 <__mulsf3+0x1d8>
     c32:	81 e0       	ldi	r24, 0x01	; 1
     c34:	8a 8f       	std	Y+26, r24	; 0x1a
     c36:	4d 8f       	std	Y+29, r20	; 0x1d
     c38:	5e 8f       	std	Y+30, r21	; 0x1e
     c3a:	6f 8f       	std	Y+31, r22	; 0x1f
     c3c:	78 a3       	std	Y+32, r23	; 0x20
     c3e:	83 e0       	ldi	r24, 0x03	; 3
     c40:	89 8f       	std	Y+25, r24	; 0x19
     c42:	ce 01       	movw	r24, r28
     c44:	49 96       	adiw	r24, 0x19	; 25
     c46:	0e 94 51 07 	call	0xea2	; 0xea2 <__pack_f>
     c4a:	a0 96       	adiw	r28, 0x20	; 32
     c4c:	e2 e1       	ldi	r30, 0x12	; 18
     c4e:	0c 94 13 09 	jmp	0x1226	; 0x1226 <__epilogue_restores__>

00000c52 <__gesf2>:
     c52:	a8 e1       	ldi	r26, 0x18	; 24
     c54:	b0 e0       	ldi	r27, 0x00	; 0
     c56:	ef e2       	ldi	r30, 0x2F	; 47
     c58:	f6 e0       	ldi	r31, 0x06	; 6
     c5a:	0c 94 03 09 	jmp	0x1206	; 0x1206 <__prologue_saves__+0x18>
     c5e:	69 83       	std	Y+1, r22	; 0x01
     c60:	7a 83       	std	Y+2, r23	; 0x02
     c62:	8b 83       	std	Y+3, r24	; 0x03
     c64:	9c 83       	std	Y+4, r25	; 0x04
     c66:	2d 83       	std	Y+5, r18	; 0x05
     c68:	3e 83       	std	Y+6, r19	; 0x06
     c6a:	4f 83       	std	Y+7, r20	; 0x07
     c6c:	58 87       	std	Y+8, r21	; 0x08
     c6e:	89 e0       	ldi	r24, 0x09	; 9
     c70:	e8 2e       	mov	r14, r24
     c72:	f1 2c       	mov	r15, r1
     c74:	ec 0e       	add	r14, r28
     c76:	fd 1e       	adc	r15, r29
     c78:	ce 01       	movw	r24, r28
     c7a:	01 96       	adiw	r24, 0x01	; 1
     c7c:	b7 01       	movw	r22, r14
     c7e:	0e 94 26 08 	call	0x104c	; 0x104c <__unpack_f>
     c82:	8e 01       	movw	r16, r28
     c84:	0f 5e       	subi	r16, 0xEF	; 239
     c86:	1f 4f       	sbci	r17, 0xFF	; 255
     c88:	ce 01       	movw	r24, r28
     c8a:	05 96       	adiw	r24, 0x05	; 5
     c8c:	b8 01       	movw	r22, r16
     c8e:	0e 94 26 08 	call	0x104c	; 0x104c <__unpack_f>
     c92:	89 85       	ldd	r24, Y+9	; 0x09
     c94:	82 30       	cpi	r24, 0x02	; 2
     c96:	40 f0       	brcs	.+16     	; 0xca8 <__gesf2+0x56>
     c98:	89 89       	ldd	r24, Y+17	; 0x11
     c9a:	82 30       	cpi	r24, 0x02	; 2
     c9c:	28 f0       	brcs	.+10     	; 0xca8 <__gesf2+0x56>
     c9e:	c7 01       	movw	r24, r14
     ca0:	b8 01       	movw	r22, r16
     ca2:	0e 94 9e 08 	call	0x113c	; 0x113c <__fpcmp_parts_f>
     ca6:	01 c0       	rjmp	.+2      	; 0xcaa <__gesf2+0x58>
     ca8:	8f ef       	ldi	r24, 0xFF	; 255
     caa:	68 96       	adiw	r28, 0x18	; 24
     cac:	e6 e0       	ldi	r30, 0x06	; 6
     cae:	0c 94 1f 09 	jmp	0x123e	; 0x123e <__epilogue_restores__+0x18>

00000cb2 <__ltsf2>:
     cb2:	a8 e1       	ldi	r26, 0x18	; 24
     cb4:	b0 e0       	ldi	r27, 0x00	; 0
     cb6:	ef e5       	ldi	r30, 0x5F	; 95
     cb8:	f6 e0       	ldi	r31, 0x06	; 6
     cba:	0c 94 03 09 	jmp	0x1206	; 0x1206 <__prologue_saves__+0x18>
     cbe:	69 83       	std	Y+1, r22	; 0x01
     cc0:	7a 83       	std	Y+2, r23	; 0x02
     cc2:	8b 83       	std	Y+3, r24	; 0x03
     cc4:	9c 83       	std	Y+4, r25	; 0x04
     cc6:	2d 83       	std	Y+5, r18	; 0x05
     cc8:	3e 83       	std	Y+6, r19	; 0x06
     cca:	4f 83       	std	Y+7, r20	; 0x07
     ccc:	58 87       	std	Y+8, r21	; 0x08
     cce:	89 e0       	ldi	r24, 0x09	; 9
     cd0:	e8 2e       	mov	r14, r24
     cd2:	f1 2c       	mov	r15, r1
     cd4:	ec 0e       	add	r14, r28
     cd6:	fd 1e       	adc	r15, r29
     cd8:	ce 01       	movw	r24, r28
     cda:	01 96       	adiw	r24, 0x01	; 1
     cdc:	b7 01       	movw	r22, r14
     cde:	0e 94 26 08 	call	0x104c	; 0x104c <__unpack_f>
     ce2:	8e 01       	movw	r16, r28
     ce4:	0f 5e       	subi	r16, 0xEF	; 239
     ce6:	1f 4f       	sbci	r17, 0xFF	; 255
     ce8:	ce 01       	movw	r24, r28
     cea:	05 96       	adiw	r24, 0x05	; 5
     cec:	b8 01       	movw	r22, r16
     cee:	0e 94 26 08 	call	0x104c	; 0x104c <__unpack_f>
     cf2:	89 85       	ldd	r24, Y+9	; 0x09
     cf4:	82 30       	cpi	r24, 0x02	; 2
     cf6:	40 f0       	brcs	.+16     	; 0xd08 <__ltsf2+0x56>
     cf8:	89 89       	ldd	r24, Y+17	; 0x11
     cfa:	82 30       	cpi	r24, 0x02	; 2
     cfc:	28 f0       	brcs	.+10     	; 0xd08 <__ltsf2+0x56>
     cfe:	c7 01       	movw	r24, r14
     d00:	b8 01       	movw	r22, r16
     d02:	0e 94 9e 08 	call	0x113c	; 0x113c <__fpcmp_parts_f>
     d06:	01 c0       	rjmp	.+2      	; 0xd0a <__ltsf2+0x58>
     d08:	81 e0       	ldi	r24, 0x01	; 1
     d0a:	68 96       	adiw	r28, 0x18	; 24
     d0c:	e6 e0       	ldi	r30, 0x06	; 6
     d0e:	0c 94 1f 09 	jmp	0x123e	; 0x123e <__epilogue_restores__+0x18>

00000d12 <__floatunsisf>:
     d12:	a8 e0       	ldi	r26, 0x08	; 8
     d14:	b0 e0       	ldi	r27, 0x00	; 0
     d16:	ef e8       	ldi	r30, 0x8F	; 143
     d18:	f6 e0       	ldi	r31, 0x06	; 6
     d1a:	0c 94 ff 08 	jmp	0x11fe	; 0x11fe <__prologue_saves__+0x10>
     d1e:	7b 01       	movw	r14, r22
     d20:	8c 01       	movw	r16, r24
     d22:	61 15       	cp	r22, r1
     d24:	71 05       	cpc	r23, r1
     d26:	81 05       	cpc	r24, r1
     d28:	91 05       	cpc	r25, r1
     d2a:	19 f4       	brne	.+6      	; 0xd32 <__floatunsisf+0x20>
     d2c:	82 e0       	ldi	r24, 0x02	; 2
     d2e:	89 83       	std	Y+1, r24	; 0x01
     d30:	60 c0       	rjmp	.+192    	; 0xdf2 <__floatunsisf+0xe0>
     d32:	83 e0       	ldi	r24, 0x03	; 3
     d34:	89 83       	std	Y+1, r24	; 0x01
     d36:	8e e1       	ldi	r24, 0x1E	; 30
     d38:	c8 2e       	mov	r12, r24
     d3a:	d1 2c       	mov	r13, r1
     d3c:	dc 82       	std	Y+4, r13	; 0x04
     d3e:	cb 82       	std	Y+3, r12	; 0x03
     d40:	ed 82       	std	Y+5, r14	; 0x05
     d42:	fe 82       	std	Y+6, r15	; 0x06
     d44:	0f 83       	std	Y+7, r16	; 0x07
     d46:	18 87       	std	Y+8, r17	; 0x08
     d48:	c8 01       	movw	r24, r16
     d4a:	b7 01       	movw	r22, r14
     d4c:	0e 94 02 07 	call	0xe04	; 0xe04 <__clzsi2>
     d50:	fc 01       	movw	r30, r24
     d52:	31 97       	sbiw	r30, 0x01	; 1
     d54:	f7 ff       	sbrs	r31, 7
     d56:	3b c0       	rjmp	.+118    	; 0xdce <__floatunsisf+0xbc>
     d58:	22 27       	eor	r18, r18
     d5a:	33 27       	eor	r19, r19
     d5c:	2e 1b       	sub	r18, r30
     d5e:	3f 0b       	sbc	r19, r31
     d60:	57 01       	movw	r10, r14
     d62:	68 01       	movw	r12, r16
     d64:	02 2e       	mov	r0, r18
     d66:	04 c0       	rjmp	.+8      	; 0xd70 <__floatunsisf+0x5e>
     d68:	d6 94       	lsr	r13
     d6a:	c7 94       	ror	r12
     d6c:	b7 94       	ror	r11
     d6e:	a7 94       	ror	r10
     d70:	0a 94       	dec	r0
     d72:	d2 f7       	brpl	.-12     	; 0xd68 <__floatunsisf+0x56>
     d74:	40 e0       	ldi	r20, 0x00	; 0
     d76:	50 e0       	ldi	r21, 0x00	; 0
     d78:	60 e0       	ldi	r22, 0x00	; 0
     d7a:	70 e0       	ldi	r23, 0x00	; 0
     d7c:	81 e0       	ldi	r24, 0x01	; 1
     d7e:	90 e0       	ldi	r25, 0x00	; 0
     d80:	a0 e0       	ldi	r26, 0x00	; 0
     d82:	b0 e0       	ldi	r27, 0x00	; 0
     d84:	04 c0       	rjmp	.+8      	; 0xd8e <__floatunsisf+0x7c>
     d86:	88 0f       	add	r24, r24
     d88:	99 1f       	adc	r25, r25
     d8a:	aa 1f       	adc	r26, r26
     d8c:	bb 1f       	adc	r27, r27
     d8e:	2a 95       	dec	r18
     d90:	d2 f7       	brpl	.-12     	; 0xd86 <__floatunsisf+0x74>
     d92:	01 97       	sbiw	r24, 0x01	; 1
     d94:	a1 09       	sbc	r26, r1
     d96:	b1 09       	sbc	r27, r1
     d98:	8e 21       	and	r24, r14
     d9a:	9f 21       	and	r25, r15
     d9c:	a0 23       	and	r26, r16
     d9e:	b1 23       	and	r27, r17
     da0:	00 97       	sbiw	r24, 0x00	; 0
     da2:	a1 05       	cpc	r26, r1
     da4:	b1 05       	cpc	r27, r1
     da6:	21 f0       	breq	.+8      	; 0xdb0 <__floatunsisf+0x9e>
     da8:	41 e0       	ldi	r20, 0x01	; 1
     daa:	50 e0       	ldi	r21, 0x00	; 0
     dac:	60 e0       	ldi	r22, 0x00	; 0
     dae:	70 e0       	ldi	r23, 0x00	; 0
     db0:	4a 29       	or	r20, r10
     db2:	5b 29       	or	r21, r11
     db4:	6c 29       	or	r22, r12
     db6:	7d 29       	or	r23, r13
     db8:	4d 83       	std	Y+5, r20	; 0x05
     dba:	5e 83       	std	Y+6, r21	; 0x06
     dbc:	6f 83       	std	Y+7, r22	; 0x07
     dbe:	78 87       	std	Y+8, r23	; 0x08
     dc0:	8e e1       	ldi	r24, 0x1E	; 30
     dc2:	90 e0       	ldi	r25, 0x00	; 0
     dc4:	8e 1b       	sub	r24, r30
     dc6:	9f 0b       	sbc	r25, r31
     dc8:	9c 83       	std	Y+4, r25	; 0x04
     dca:	8b 83       	std	Y+3, r24	; 0x03
     dcc:	12 c0       	rjmp	.+36     	; 0xdf2 <__floatunsisf+0xe0>
     dce:	30 97       	sbiw	r30, 0x00	; 0
     dd0:	81 f0       	breq	.+32     	; 0xdf2 <__floatunsisf+0xe0>
     dd2:	0e 2e       	mov	r0, r30
     dd4:	04 c0       	rjmp	.+8      	; 0xdde <__floatunsisf+0xcc>
     dd6:	ee 0c       	add	r14, r14
     dd8:	ff 1c       	adc	r15, r15
     dda:	00 1f       	adc	r16, r16
     ddc:	11 1f       	adc	r17, r17
     dde:	0a 94       	dec	r0
     de0:	d2 f7       	brpl	.-12     	; 0xdd6 <__floatunsisf+0xc4>
     de2:	ed 82       	std	Y+5, r14	; 0x05
     de4:	fe 82       	std	Y+6, r15	; 0x06
     de6:	0f 83       	std	Y+7, r16	; 0x07
     de8:	18 87       	std	Y+8, r17	; 0x08
     dea:	ce 1a       	sub	r12, r30
     dec:	df 0a       	sbc	r13, r31
     dee:	dc 82       	std	Y+4, r13	; 0x04
     df0:	cb 82       	std	Y+3, r12	; 0x03
     df2:	1a 82       	std	Y+2, r1	; 0x02
     df4:	ce 01       	movw	r24, r28
     df6:	01 96       	adiw	r24, 0x01	; 1
     df8:	0e 94 51 07 	call	0xea2	; 0xea2 <__pack_f>
     dfc:	28 96       	adiw	r28, 0x08	; 8
     dfe:	ea e0       	ldi	r30, 0x0A	; 10
     e00:	0c 94 1b 09 	jmp	0x1236	; 0x1236 <__epilogue_restores__+0x10>

00000e04 <__clzsi2>:
     e04:	ef 92       	push	r14
     e06:	ff 92       	push	r15
     e08:	0f 93       	push	r16
     e0a:	1f 93       	push	r17
     e0c:	7b 01       	movw	r14, r22
     e0e:	8c 01       	movw	r16, r24
     e10:	80 e0       	ldi	r24, 0x00	; 0
     e12:	e8 16       	cp	r14, r24
     e14:	80 e0       	ldi	r24, 0x00	; 0
     e16:	f8 06       	cpc	r15, r24
     e18:	81 e0       	ldi	r24, 0x01	; 1
     e1a:	08 07       	cpc	r16, r24
     e1c:	80 e0       	ldi	r24, 0x00	; 0
     e1e:	18 07       	cpc	r17, r24
     e20:	88 f4       	brcc	.+34     	; 0xe44 <__clzsi2+0x40>
     e22:	8f ef       	ldi	r24, 0xFF	; 255
     e24:	e8 16       	cp	r14, r24
     e26:	f1 04       	cpc	r15, r1
     e28:	01 05       	cpc	r16, r1
     e2a:	11 05       	cpc	r17, r1
     e2c:	31 f0       	breq	.+12     	; 0xe3a <__clzsi2+0x36>
     e2e:	28 f0       	brcs	.+10     	; 0xe3a <__clzsi2+0x36>
     e30:	88 e0       	ldi	r24, 0x08	; 8
     e32:	90 e0       	ldi	r25, 0x00	; 0
     e34:	a0 e0       	ldi	r26, 0x00	; 0
     e36:	b0 e0       	ldi	r27, 0x00	; 0
     e38:	17 c0       	rjmp	.+46     	; 0xe68 <__clzsi2+0x64>
     e3a:	80 e0       	ldi	r24, 0x00	; 0
     e3c:	90 e0       	ldi	r25, 0x00	; 0
     e3e:	a0 e0       	ldi	r26, 0x00	; 0
     e40:	b0 e0       	ldi	r27, 0x00	; 0
     e42:	12 c0       	rjmp	.+36     	; 0xe68 <__clzsi2+0x64>
     e44:	80 e0       	ldi	r24, 0x00	; 0
     e46:	e8 16       	cp	r14, r24
     e48:	80 e0       	ldi	r24, 0x00	; 0
     e4a:	f8 06       	cpc	r15, r24
     e4c:	80 e0       	ldi	r24, 0x00	; 0
     e4e:	08 07       	cpc	r16, r24
     e50:	81 e0       	ldi	r24, 0x01	; 1
     e52:	18 07       	cpc	r17, r24
     e54:	28 f0       	brcs	.+10     	; 0xe60 <__clzsi2+0x5c>
     e56:	88 e1       	ldi	r24, 0x18	; 24
     e58:	90 e0       	ldi	r25, 0x00	; 0
     e5a:	a0 e0       	ldi	r26, 0x00	; 0
     e5c:	b0 e0       	ldi	r27, 0x00	; 0
     e5e:	04 c0       	rjmp	.+8      	; 0xe68 <__clzsi2+0x64>
     e60:	80 e1       	ldi	r24, 0x10	; 16
     e62:	90 e0       	ldi	r25, 0x00	; 0
     e64:	a0 e0       	ldi	r26, 0x00	; 0
     e66:	b0 e0       	ldi	r27, 0x00	; 0
     e68:	20 e2       	ldi	r18, 0x20	; 32
     e6a:	30 e0       	ldi	r19, 0x00	; 0
     e6c:	40 e0       	ldi	r20, 0x00	; 0
     e6e:	50 e0       	ldi	r21, 0x00	; 0
     e70:	28 1b       	sub	r18, r24
     e72:	39 0b       	sbc	r19, r25
     e74:	4a 0b       	sbc	r20, r26
     e76:	5b 0b       	sbc	r21, r27
     e78:	04 c0       	rjmp	.+8      	; 0xe82 <__clzsi2+0x7e>
     e7a:	16 95       	lsr	r17
     e7c:	07 95       	ror	r16
     e7e:	f7 94       	ror	r15
     e80:	e7 94       	ror	r14
     e82:	8a 95       	dec	r24
     e84:	d2 f7       	brpl	.-12     	; 0xe7a <__clzsi2+0x76>
     e86:	f7 01       	movw	r30, r14
     e88:	e8 5f       	subi	r30, 0xF8	; 248
     e8a:	fe 4f       	sbci	r31, 0xFE	; 254
     e8c:	80 81       	ld	r24, Z
     e8e:	28 1b       	sub	r18, r24
     e90:	31 09       	sbc	r19, r1
     e92:	41 09       	sbc	r20, r1
     e94:	51 09       	sbc	r21, r1
     e96:	c9 01       	movw	r24, r18
     e98:	1f 91       	pop	r17
     e9a:	0f 91       	pop	r16
     e9c:	ff 90       	pop	r15
     e9e:	ef 90       	pop	r14
     ea0:	08 95       	ret

00000ea2 <__pack_f>:
     ea2:	df 92       	push	r13
     ea4:	ef 92       	push	r14
     ea6:	ff 92       	push	r15
     ea8:	0f 93       	push	r16
     eaa:	1f 93       	push	r17
     eac:	fc 01       	movw	r30, r24
     eae:	e4 80       	ldd	r14, Z+4	; 0x04
     eb0:	f5 80       	ldd	r15, Z+5	; 0x05
     eb2:	06 81       	ldd	r16, Z+6	; 0x06
     eb4:	17 81       	ldd	r17, Z+7	; 0x07
     eb6:	d1 80       	ldd	r13, Z+1	; 0x01
     eb8:	80 81       	ld	r24, Z
     eba:	82 30       	cpi	r24, 0x02	; 2
     ebc:	48 f4       	brcc	.+18     	; 0xed0 <__pack_f+0x2e>
     ebe:	80 e0       	ldi	r24, 0x00	; 0
     ec0:	90 e0       	ldi	r25, 0x00	; 0
     ec2:	a0 e1       	ldi	r26, 0x10	; 16
     ec4:	b0 e0       	ldi	r27, 0x00	; 0
     ec6:	e8 2a       	or	r14, r24
     ec8:	f9 2a       	or	r15, r25
     eca:	0a 2b       	or	r16, r26
     ecc:	1b 2b       	or	r17, r27
     ece:	a5 c0       	rjmp	.+330    	; 0x101a <__pack_f+0x178>
     ed0:	84 30       	cpi	r24, 0x04	; 4
     ed2:	09 f4       	brne	.+2      	; 0xed6 <__pack_f+0x34>
     ed4:	9f c0       	rjmp	.+318    	; 0x1014 <__pack_f+0x172>
     ed6:	82 30       	cpi	r24, 0x02	; 2
     ed8:	21 f4       	brne	.+8      	; 0xee2 <__pack_f+0x40>
     eda:	ee 24       	eor	r14, r14
     edc:	ff 24       	eor	r15, r15
     ede:	87 01       	movw	r16, r14
     ee0:	05 c0       	rjmp	.+10     	; 0xeec <__pack_f+0x4a>
     ee2:	e1 14       	cp	r14, r1
     ee4:	f1 04       	cpc	r15, r1
     ee6:	01 05       	cpc	r16, r1
     ee8:	11 05       	cpc	r17, r1
     eea:	19 f4       	brne	.+6      	; 0xef2 <__pack_f+0x50>
     eec:	e0 e0       	ldi	r30, 0x00	; 0
     eee:	f0 e0       	ldi	r31, 0x00	; 0
     ef0:	96 c0       	rjmp	.+300    	; 0x101e <__pack_f+0x17c>
     ef2:	62 81       	ldd	r22, Z+2	; 0x02
     ef4:	73 81       	ldd	r23, Z+3	; 0x03
     ef6:	9f ef       	ldi	r25, 0xFF	; 255
     ef8:	62 38       	cpi	r22, 0x82	; 130
     efa:	79 07       	cpc	r23, r25
     efc:	0c f0       	brlt	.+2      	; 0xf00 <__pack_f+0x5e>
     efe:	5b c0       	rjmp	.+182    	; 0xfb6 <__pack_f+0x114>
     f00:	22 e8       	ldi	r18, 0x82	; 130
     f02:	3f ef       	ldi	r19, 0xFF	; 255
     f04:	26 1b       	sub	r18, r22
     f06:	37 0b       	sbc	r19, r23
     f08:	2a 31       	cpi	r18, 0x1A	; 26
     f0a:	31 05       	cpc	r19, r1
     f0c:	2c f0       	brlt	.+10     	; 0xf18 <__pack_f+0x76>
     f0e:	20 e0       	ldi	r18, 0x00	; 0
     f10:	30 e0       	ldi	r19, 0x00	; 0
     f12:	40 e0       	ldi	r20, 0x00	; 0
     f14:	50 e0       	ldi	r21, 0x00	; 0
     f16:	2a c0       	rjmp	.+84     	; 0xf6c <__pack_f+0xca>
     f18:	b8 01       	movw	r22, r16
     f1a:	a7 01       	movw	r20, r14
     f1c:	02 2e       	mov	r0, r18
     f1e:	04 c0       	rjmp	.+8      	; 0xf28 <__pack_f+0x86>
     f20:	76 95       	lsr	r23
     f22:	67 95       	ror	r22
     f24:	57 95       	ror	r21
     f26:	47 95       	ror	r20
     f28:	0a 94       	dec	r0
     f2a:	d2 f7       	brpl	.-12     	; 0xf20 <__pack_f+0x7e>
     f2c:	81 e0       	ldi	r24, 0x01	; 1
     f2e:	90 e0       	ldi	r25, 0x00	; 0
     f30:	a0 e0       	ldi	r26, 0x00	; 0
     f32:	b0 e0       	ldi	r27, 0x00	; 0
     f34:	04 c0       	rjmp	.+8      	; 0xf3e <__pack_f+0x9c>
     f36:	88 0f       	add	r24, r24
     f38:	99 1f       	adc	r25, r25
     f3a:	aa 1f       	adc	r26, r26
     f3c:	bb 1f       	adc	r27, r27
     f3e:	2a 95       	dec	r18
     f40:	d2 f7       	brpl	.-12     	; 0xf36 <__pack_f+0x94>
     f42:	01 97       	sbiw	r24, 0x01	; 1
     f44:	a1 09       	sbc	r26, r1
     f46:	b1 09       	sbc	r27, r1
     f48:	8e 21       	and	r24, r14
     f4a:	9f 21       	and	r25, r15
     f4c:	a0 23       	and	r26, r16
     f4e:	b1 23       	and	r27, r17
     f50:	00 97       	sbiw	r24, 0x00	; 0
     f52:	a1 05       	cpc	r26, r1
     f54:	b1 05       	cpc	r27, r1
     f56:	21 f0       	breq	.+8      	; 0xf60 <__pack_f+0xbe>
     f58:	81 e0       	ldi	r24, 0x01	; 1
     f5a:	90 e0       	ldi	r25, 0x00	; 0
     f5c:	a0 e0       	ldi	r26, 0x00	; 0
     f5e:	b0 e0       	ldi	r27, 0x00	; 0
     f60:	9a 01       	movw	r18, r20
     f62:	ab 01       	movw	r20, r22
     f64:	28 2b       	or	r18, r24
     f66:	39 2b       	or	r19, r25
     f68:	4a 2b       	or	r20, r26
     f6a:	5b 2b       	or	r21, r27
     f6c:	da 01       	movw	r26, r20
     f6e:	c9 01       	movw	r24, r18
     f70:	8f 77       	andi	r24, 0x7F	; 127
     f72:	90 70       	andi	r25, 0x00	; 0
     f74:	a0 70       	andi	r26, 0x00	; 0
     f76:	b0 70       	andi	r27, 0x00	; 0
     f78:	80 34       	cpi	r24, 0x40	; 64
     f7a:	91 05       	cpc	r25, r1
     f7c:	a1 05       	cpc	r26, r1
     f7e:	b1 05       	cpc	r27, r1
     f80:	39 f4       	brne	.+14     	; 0xf90 <__pack_f+0xee>
     f82:	27 ff       	sbrs	r18, 7
     f84:	09 c0       	rjmp	.+18     	; 0xf98 <__pack_f+0xf6>
     f86:	20 5c       	subi	r18, 0xC0	; 192
     f88:	3f 4f       	sbci	r19, 0xFF	; 255
     f8a:	4f 4f       	sbci	r20, 0xFF	; 255
     f8c:	5f 4f       	sbci	r21, 0xFF	; 255
     f8e:	04 c0       	rjmp	.+8      	; 0xf98 <__pack_f+0xf6>
     f90:	21 5c       	subi	r18, 0xC1	; 193
     f92:	3f 4f       	sbci	r19, 0xFF	; 255
     f94:	4f 4f       	sbci	r20, 0xFF	; 255
     f96:	5f 4f       	sbci	r21, 0xFF	; 255
     f98:	e0 e0       	ldi	r30, 0x00	; 0
     f9a:	f0 e0       	ldi	r31, 0x00	; 0
     f9c:	20 30       	cpi	r18, 0x00	; 0
     f9e:	a0 e0       	ldi	r26, 0x00	; 0
     fa0:	3a 07       	cpc	r19, r26
     fa2:	a0 e0       	ldi	r26, 0x00	; 0
     fa4:	4a 07       	cpc	r20, r26
     fa6:	a0 e4       	ldi	r26, 0x40	; 64
     fa8:	5a 07       	cpc	r21, r26
     faa:	10 f0       	brcs	.+4      	; 0xfb0 <__pack_f+0x10e>
     fac:	e1 e0       	ldi	r30, 0x01	; 1
     fae:	f0 e0       	ldi	r31, 0x00	; 0
     fb0:	79 01       	movw	r14, r18
     fb2:	8a 01       	movw	r16, r20
     fb4:	27 c0       	rjmp	.+78     	; 0x1004 <__pack_f+0x162>
     fb6:	60 38       	cpi	r22, 0x80	; 128
     fb8:	71 05       	cpc	r23, r1
     fba:	64 f5       	brge	.+88     	; 0x1014 <__pack_f+0x172>
     fbc:	fb 01       	movw	r30, r22
     fbe:	e1 58       	subi	r30, 0x81	; 129
     fc0:	ff 4f       	sbci	r31, 0xFF	; 255
     fc2:	d8 01       	movw	r26, r16
     fc4:	c7 01       	movw	r24, r14
     fc6:	8f 77       	andi	r24, 0x7F	; 127
     fc8:	90 70       	andi	r25, 0x00	; 0
     fca:	a0 70       	andi	r26, 0x00	; 0
     fcc:	b0 70       	andi	r27, 0x00	; 0
     fce:	80 34       	cpi	r24, 0x40	; 64
     fd0:	91 05       	cpc	r25, r1
     fd2:	a1 05       	cpc	r26, r1
     fd4:	b1 05       	cpc	r27, r1
     fd6:	39 f4       	brne	.+14     	; 0xfe6 <__pack_f+0x144>
     fd8:	e7 fe       	sbrs	r14, 7
     fda:	0d c0       	rjmp	.+26     	; 0xff6 <__pack_f+0x154>
     fdc:	80 e4       	ldi	r24, 0x40	; 64
     fde:	90 e0       	ldi	r25, 0x00	; 0
     fe0:	a0 e0       	ldi	r26, 0x00	; 0
     fe2:	b0 e0       	ldi	r27, 0x00	; 0
     fe4:	04 c0       	rjmp	.+8      	; 0xfee <__pack_f+0x14c>
     fe6:	8f e3       	ldi	r24, 0x3F	; 63
     fe8:	90 e0       	ldi	r25, 0x00	; 0
     fea:	a0 e0       	ldi	r26, 0x00	; 0
     fec:	b0 e0       	ldi	r27, 0x00	; 0
     fee:	e8 0e       	add	r14, r24
     ff0:	f9 1e       	adc	r15, r25
     ff2:	0a 1f       	adc	r16, r26
     ff4:	1b 1f       	adc	r17, r27
     ff6:	17 ff       	sbrs	r17, 7
     ff8:	05 c0       	rjmp	.+10     	; 0x1004 <__pack_f+0x162>
     ffa:	16 95       	lsr	r17
     ffc:	07 95       	ror	r16
     ffe:	f7 94       	ror	r15
    1000:	e7 94       	ror	r14
    1002:	31 96       	adiw	r30, 0x01	; 1
    1004:	87 e0       	ldi	r24, 0x07	; 7
    1006:	16 95       	lsr	r17
    1008:	07 95       	ror	r16
    100a:	f7 94       	ror	r15
    100c:	e7 94       	ror	r14
    100e:	8a 95       	dec	r24
    1010:	d1 f7       	brne	.-12     	; 0x1006 <__pack_f+0x164>
    1012:	05 c0       	rjmp	.+10     	; 0x101e <__pack_f+0x17c>
    1014:	ee 24       	eor	r14, r14
    1016:	ff 24       	eor	r15, r15
    1018:	87 01       	movw	r16, r14
    101a:	ef ef       	ldi	r30, 0xFF	; 255
    101c:	f0 e0       	ldi	r31, 0x00	; 0
    101e:	6e 2f       	mov	r22, r30
    1020:	67 95       	ror	r22
    1022:	66 27       	eor	r22, r22
    1024:	67 95       	ror	r22
    1026:	90 2f       	mov	r25, r16
    1028:	9f 77       	andi	r25, 0x7F	; 127
    102a:	d7 94       	ror	r13
    102c:	dd 24       	eor	r13, r13
    102e:	d7 94       	ror	r13
    1030:	8e 2f       	mov	r24, r30
    1032:	86 95       	lsr	r24
    1034:	49 2f       	mov	r20, r25
    1036:	46 2b       	or	r20, r22
    1038:	58 2f       	mov	r21, r24
    103a:	5d 29       	or	r21, r13
    103c:	b7 01       	movw	r22, r14
    103e:	ca 01       	movw	r24, r20
    1040:	1f 91       	pop	r17
    1042:	0f 91       	pop	r16
    1044:	ff 90       	pop	r15
    1046:	ef 90       	pop	r14
    1048:	df 90       	pop	r13
    104a:	08 95       	ret

0000104c <__unpack_f>:
    104c:	fc 01       	movw	r30, r24
    104e:	db 01       	movw	r26, r22
    1050:	40 81       	ld	r20, Z
    1052:	51 81       	ldd	r21, Z+1	; 0x01
    1054:	22 81       	ldd	r18, Z+2	; 0x02
    1056:	62 2f       	mov	r22, r18
    1058:	6f 77       	andi	r22, 0x7F	; 127
    105a:	70 e0       	ldi	r23, 0x00	; 0
    105c:	22 1f       	adc	r18, r18
    105e:	22 27       	eor	r18, r18
    1060:	22 1f       	adc	r18, r18
    1062:	93 81       	ldd	r25, Z+3	; 0x03
    1064:	89 2f       	mov	r24, r25
    1066:	88 0f       	add	r24, r24
    1068:	82 2b       	or	r24, r18
    106a:	28 2f       	mov	r18, r24
    106c:	30 e0       	ldi	r19, 0x00	; 0
    106e:	99 1f       	adc	r25, r25
    1070:	99 27       	eor	r25, r25
    1072:	99 1f       	adc	r25, r25
    1074:	11 96       	adiw	r26, 0x01	; 1
    1076:	9c 93       	st	X, r25
    1078:	11 97       	sbiw	r26, 0x01	; 1
    107a:	21 15       	cp	r18, r1
    107c:	31 05       	cpc	r19, r1
    107e:	a9 f5       	brne	.+106    	; 0x10ea <__unpack_f+0x9e>
    1080:	41 15       	cp	r20, r1
    1082:	51 05       	cpc	r21, r1
    1084:	61 05       	cpc	r22, r1
    1086:	71 05       	cpc	r23, r1
    1088:	11 f4       	brne	.+4      	; 0x108e <__unpack_f+0x42>
    108a:	82 e0       	ldi	r24, 0x02	; 2
    108c:	37 c0       	rjmp	.+110    	; 0x10fc <__unpack_f+0xb0>
    108e:	82 e8       	ldi	r24, 0x82	; 130
    1090:	9f ef       	ldi	r25, 0xFF	; 255
    1092:	13 96       	adiw	r26, 0x03	; 3
    1094:	9c 93       	st	X, r25
    1096:	8e 93       	st	-X, r24
    1098:	12 97       	sbiw	r26, 0x02	; 2
    109a:	9a 01       	movw	r18, r20
    109c:	ab 01       	movw	r20, r22
    109e:	67 e0       	ldi	r22, 0x07	; 7
    10a0:	22 0f       	add	r18, r18
    10a2:	33 1f       	adc	r19, r19
    10a4:	44 1f       	adc	r20, r20
    10a6:	55 1f       	adc	r21, r21
    10a8:	6a 95       	dec	r22
    10aa:	d1 f7       	brne	.-12     	; 0x10a0 <__unpack_f+0x54>
    10ac:	83 e0       	ldi	r24, 0x03	; 3
    10ae:	8c 93       	st	X, r24
    10b0:	0d c0       	rjmp	.+26     	; 0x10cc <__unpack_f+0x80>
    10b2:	22 0f       	add	r18, r18
    10b4:	33 1f       	adc	r19, r19
    10b6:	44 1f       	adc	r20, r20
    10b8:	55 1f       	adc	r21, r21
    10ba:	12 96       	adiw	r26, 0x02	; 2
    10bc:	8d 91       	ld	r24, X+
    10be:	9c 91       	ld	r25, X
    10c0:	13 97       	sbiw	r26, 0x03	; 3
    10c2:	01 97       	sbiw	r24, 0x01	; 1
    10c4:	13 96       	adiw	r26, 0x03	; 3
    10c6:	9c 93       	st	X, r25
    10c8:	8e 93       	st	-X, r24
    10ca:	12 97       	sbiw	r26, 0x02	; 2
    10cc:	20 30       	cpi	r18, 0x00	; 0
    10ce:	80 e0       	ldi	r24, 0x00	; 0
    10d0:	38 07       	cpc	r19, r24
    10d2:	80 e0       	ldi	r24, 0x00	; 0
    10d4:	48 07       	cpc	r20, r24
    10d6:	80 e4       	ldi	r24, 0x40	; 64
    10d8:	58 07       	cpc	r21, r24
    10da:	58 f3       	brcs	.-42     	; 0x10b2 <__unpack_f+0x66>
    10dc:	14 96       	adiw	r26, 0x04	; 4
    10de:	2d 93       	st	X+, r18
    10e0:	3d 93       	st	X+, r19
    10e2:	4d 93       	st	X+, r20
    10e4:	5c 93       	st	X, r21
    10e6:	17 97       	sbiw	r26, 0x07	; 7
    10e8:	08 95       	ret
    10ea:	2f 3f       	cpi	r18, 0xFF	; 255
    10ec:	31 05       	cpc	r19, r1
    10ee:	79 f4       	brne	.+30     	; 0x110e <__unpack_f+0xc2>
    10f0:	41 15       	cp	r20, r1
    10f2:	51 05       	cpc	r21, r1
    10f4:	61 05       	cpc	r22, r1
    10f6:	71 05       	cpc	r23, r1
    10f8:	19 f4       	brne	.+6      	; 0x1100 <__unpack_f+0xb4>
    10fa:	84 e0       	ldi	r24, 0x04	; 4
    10fc:	8c 93       	st	X, r24
    10fe:	08 95       	ret
    1100:	64 ff       	sbrs	r22, 4
    1102:	03 c0       	rjmp	.+6      	; 0x110a <__unpack_f+0xbe>
    1104:	81 e0       	ldi	r24, 0x01	; 1
    1106:	8c 93       	st	X, r24
    1108:	12 c0       	rjmp	.+36     	; 0x112e <__unpack_f+0xe2>
    110a:	1c 92       	st	X, r1
    110c:	10 c0       	rjmp	.+32     	; 0x112e <__unpack_f+0xe2>
    110e:	2f 57       	subi	r18, 0x7F	; 127
    1110:	30 40       	sbci	r19, 0x00	; 0
    1112:	13 96       	adiw	r26, 0x03	; 3
    1114:	3c 93       	st	X, r19
    1116:	2e 93       	st	-X, r18
    1118:	12 97       	sbiw	r26, 0x02	; 2
    111a:	83 e0       	ldi	r24, 0x03	; 3
    111c:	8c 93       	st	X, r24
    111e:	87 e0       	ldi	r24, 0x07	; 7
    1120:	44 0f       	add	r20, r20
    1122:	55 1f       	adc	r21, r21
    1124:	66 1f       	adc	r22, r22
    1126:	77 1f       	adc	r23, r23
    1128:	8a 95       	dec	r24
    112a:	d1 f7       	brne	.-12     	; 0x1120 <__unpack_f+0xd4>
    112c:	70 64       	ori	r23, 0x40	; 64
    112e:	14 96       	adiw	r26, 0x04	; 4
    1130:	4d 93       	st	X+, r20
    1132:	5d 93       	st	X+, r21
    1134:	6d 93       	st	X+, r22
    1136:	7c 93       	st	X, r23
    1138:	17 97       	sbiw	r26, 0x07	; 7
    113a:	08 95       	ret

0000113c <__fpcmp_parts_f>:
    113c:	1f 93       	push	r17
    113e:	dc 01       	movw	r26, r24
    1140:	fb 01       	movw	r30, r22
    1142:	9c 91       	ld	r25, X
    1144:	92 30       	cpi	r25, 0x02	; 2
    1146:	08 f4       	brcc	.+2      	; 0x114a <__fpcmp_parts_f+0xe>
    1148:	47 c0       	rjmp	.+142    	; 0x11d8 <__fpcmp_parts_f+0x9c>
    114a:	80 81       	ld	r24, Z
    114c:	82 30       	cpi	r24, 0x02	; 2
    114e:	08 f4       	brcc	.+2      	; 0x1152 <__fpcmp_parts_f+0x16>
    1150:	43 c0       	rjmp	.+134    	; 0x11d8 <__fpcmp_parts_f+0x9c>
    1152:	94 30       	cpi	r25, 0x04	; 4
    1154:	51 f4       	brne	.+20     	; 0x116a <__fpcmp_parts_f+0x2e>
    1156:	11 96       	adiw	r26, 0x01	; 1
    1158:	1c 91       	ld	r17, X
    115a:	84 30       	cpi	r24, 0x04	; 4
    115c:	99 f5       	brne	.+102    	; 0x11c4 <__fpcmp_parts_f+0x88>
    115e:	81 81       	ldd	r24, Z+1	; 0x01
    1160:	68 2f       	mov	r22, r24
    1162:	70 e0       	ldi	r23, 0x00	; 0
    1164:	61 1b       	sub	r22, r17
    1166:	71 09       	sbc	r23, r1
    1168:	3f c0       	rjmp	.+126    	; 0x11e8 <__fpcmp_parts_f+0xac>
    116a:	84 30       	cpi	r24, 0x04	; 4
    116c:	21 f0       	breq	.+8      	; 0x1176 <__fpcmp_parts_f+0x3a>
    116e:	92 30       	cpi	r25, 0x02	; 2
    1170:	31 f4       	brne	.+12     	; 0x117e <__fpcmp_parts_f+0x42>
    1172:	82 30       	cpi	r24, 0x02	; 2
    1174:	b9 f1       	breq	.+110    	; 0x11e4 <__fpcmp_parts_f+0xa8>
    1176:	81 81       	ldd	r24, Z+1	; 0x01
    1178:	88 23       	and	r24, r24
    117a:	89 f1       	breq	.+98     	; 0x11de <__fpcmp_parts_f+0xa2>
    117c:	2d c0       	rjmp	.+90     	; 0x11d8 <__fpcmp_parts_f+0x9c>
    117e:	11 96       	adiw	r26, 0x01	; 1
    1180:	1c 91       	ld	r17, X
    1182:	11 97       	sbiw	r26, 0x01	; 1
    1184:	82 30       	cpi	r24, 0x02	; 2
    1186:	f1 f0       	breq	.+60     	; 0x11c4 <__fpcmp_parts_f+0x88>
    1188:	81 81       	ldd	r24, Z+1	; 0x01
    118a:	18 17       	cp	r17, r24
    118c:	d9 f4       	brne	.+54     	; 0x11c4 <__fpcmp_parts_f+0x88>
    118e:	12 96       	adiw	r26, 0x02	; 2
    1190:	2d 91       	ld	r18, X+
    1192:	3c 91       	ld	r19, X
    1194:	13 97       	sbiw	r26, 0x03	; 3
    1196:	82 81       	ldd	r24, Z+2	; 0x02
    1198:	93 81       	ldd	r25, Z+3	; 0x03
    119a:	82 17       	cp	r24, r18
    119c:	93 07       	cpc	r25, r19
    119e:	94 f0       	brlt	.+36     	; 0x11c4 <__fpcmp_parts_f+0x88>
    11a0:	28 17       	cp	r18, r24
    11a2:	39 07       	cpc	r19, r25
    11a4:	bc f0       	brlt	.+46     	; 0x11d4 <__fpcmp_parts_f+0x98>
    11a6:	14 96       	adiw	r26, 0x04	; 4
    11a8:	8d 91       	ld	r24, X+
    11aa:	9d 91       	ld	r25, X+
    11ac:	0d 90       	ld	r0, X+
    11ae:	bc 91       	ld	r27, X
    11b0:	a0 2d       	mov	r26, r0
    11b2:	24 81       	ldd	r18, Z+4	; 0x04
    11b4:	35 81       	ldd	r19, Z+5	; 0x05
    11b6:	46 81       	ldd	r20, Z+6	; 0x06
    11b8:	57 81       	ldd	r21, Z+7	; 0x07
    11ba:	28 17       	cp	r18, r24
    11bc:	39 07       	cpc	r19, r25
    11be:	4a 07       	cpc	r20, r26
    11c0:	5b 07       	cpc	r21, r27
    11c2:	18 f4       	brcc	.+6      	; 0x11ca <__fpcmp_parts_f+0x8e>
    11c4:	11 23       	and	r17, r17
    11c6:	41 f0       	breq	.+16     	; 0x11d8 <__fpcmp_parts_f+0x9c>
    11c8:	0a c0       	rjmp	.+20     	; 0x11de <__fpcmp_parts_f+0xa2>
    11ca:	82 17       	cp	r24, r18
    11cc:	93 07       	cpc	r25, r19
    11ce:	a4 07       	cpc	r26, r20
    11d0:	b5 07       	cpc	r27, r21
    11d2:	40 f4       	brcc	.+16     	; 0x11e4 <__fpcmp_parts_f+0xa8>
    11d4:	11 23       	and	r17, r17
    11d6:	19 f0       	breq	.+6      	; 0x11de <__fpcmp_parts_f+0xa2>
    11d8:	61 e0       	ldi	r22, 0x01	; 1
    11da:	70 e0       	ldi	r23, 0x00	; 0
    11dc:	05 c0       	rjmp	.+10     	; 0x11e8 <__fpcmp_parts_f+0xac>
    11de:	6f ef       	ldi	r22, 0xFF	; 255
    11e0:	7f ef       	ldi	r23, 0xFF	; 255
    11e2:	02 c0       	rjmp	.+4      	; 0x11e8 <__fpcmp_parts_f+0xac>
    11e4:	60 e0       	ldi	r22, 0x00	; 0
    11e6:	70 e0       	ldi	r23, 0x00	; 0
    11e8:	cb 01       	movw	r24, r22
    11ea:	1f 91       	pop	r17
    11ec:	08 95       	ret

000011ee <__prologue_saves__>:
    11ee:	2f 92       	push	r2
    11f0:	3f 92       	push	r3
    11f2:	4f 92       	push	r4
    11f4:	5f 92       	push	r5
    11f6:	6f 92       	push	r6
    11f8:	7f 92       	push	r7
    11fa:	8f 92       	push	r8
    11fc:	9f 92       	push	r9
    11fe:	af 92       	push	r10
    1200:	bf 92       	push	r11
    1202:	cf 92       	push	r12
    1204:	df 92       	push	r13
    1206:	ef 92       	push	r14
    1208:	ff 92       	push	r15
    120a:	0f 93       	push	r16
    120c:	1f 93       	push	r17
    120e:	cf 93       	push	r28
    1210:	df 93       	push	r29
    1212:	cd b7       	in	r28, 0x3d	; 61
    1214:	de b7       	in	r29, 0x3e	; 62
    1216:	ca 1b       	sub	r28, r26
    1218:	db 0b       	sbc	r29, r27
    121a:	0f b6       	in	r0, 0x3f	; 63
    121c:	f8 94       	cli
    121e:	de bf       	out	0x3e, r29	; 62
    1220:	0f be       	out	0x3f, r0	; 63
    1222:	cd bf       	out	0x3d, r28	; 61
    1224:	09 94       	ijmp

00001226 <__epilogue_restores__>:
    1226:	2a 88       	ldd	r2, Y+18	; 0x12
    1228:	39 88       	ldd	r3, Y+17	; 0x11
    122a:	48 88       	ldd	r4, Y+16	; 0x10
    122c:	5f 84       	ldd	r5, Y+15	; 0x0f
    122e:	6e 84       	ldd	r6, Y+14	; 0x0e
    1230:	7d 84       	ldd	r7, Y+13	; 0x0d
    1232:	8c 84       	ldd	r8, Y+12	; 0x0c
    1234:	9b 84       	ldd	r9, Y+11	; 0x0b
    1236:	aa 84       	ldd	r10, Y+10	; 0x0a
    1238:	b9 84       	ldd	r11, Y+9	; 0x09
    123a:	c8 84       	ldd	r12, Y+8	; 0x08
    123c:	df 80       	ldd	r13, Y+7	; 0x07
    123e:	ee 80       	ldd	r14, Y+6	; 0x06
    1240:	fd 80       	ldd	r15, Y+5	; 0x05
    1242:	0c 81       	ldd	r16, Y+4	; 0x04
    1244:	1b 81       	ldd	r17, Y+3	; 0x03
    1246:	aa 81       	ldd	r26, Y+2	; 0x02
    1248:	b9 81       	ldd	r27, Y+1	; 0x01
    124a:	ce 0f       	add	r28, r30
    124c:	d1 1d       	adc	r29, r1
    124e:	0f b6       	in	r0, 0x3f	; 63
    1250:	f8 94       	cli
    1252:	de bf       	out	0x3e, r29	; 62
    1254:	0f be       	out	0x3f, r0	; 63
    1256:	cd bf       	out	0x3d, r28	; 61
    1258:	ed 01       	movw	r28, r26
    125a:	08 95       	ret

0000125c <_exit>:
    125c:	f8 94       	cli

0000125e <__stop_program>:
    125e:	ff cf       	rjmp	.-2      	; 0x125e <__stop_program>
